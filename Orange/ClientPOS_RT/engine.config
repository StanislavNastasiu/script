<?xml version="1.0" encoding="utf-8"?>
<objects xmlns="http://www.springframework.net">
  <object name="appConfigPropertyHolder" type="Spring.Objects.Factory.Config.PropertyPlaceholderConfigurer, Spring.Core">
    <property name="configSections" value="clientConfiguration" />
    <property name="PlaceholderPrefix" value="#{" />
  </object>
  <object name="EngineConfigurationPlaceholder" type="Orange.Core.Engine.Configuration.EnginePlaceholderConfigurer, Orange.Core">
    <property name="ConfigSections" value="clientConfiguration" />
    <property name="PlaceholderPrefix" value="#{" />
  </object>
  <!-- Oggetto responsabile dell'avvio delle connessioni verso i Web Services -->
  <object name="WebServicesInitializer" type="Orange.Core.Engine.WebServicesInitializer, Orange.Core" singleton="true">
    <!-- Millisecondi di attesa per il primo tentativo di connessione -->
    <constructor-arg name="startTime" value="513" />
    <!-- Millissecondi di attesa tra un tentativo ed il successivo -->
    <constructor-arg name="intervalTime" value="180000" />
    <!-- Se vale true le connessioni verranno avviate solo dallo scheduler;
        se vale false le connessioni verranno avviate oltre che dallo scheduler anche quando ne verrà fatta
        richiesta dai relativi DAO -->
    <property name="Lazy" value="true" />
  </object>
  <!-- Localizzazione delle risorse -->
  <object name="messageSource" type="Orange.Core.Engine.Util.HybridDictionaryObject, Orange.Core">
    <property name="Collection">
      <dictionary>
        <entry key="ApplicationLogResource" value-ref="ApplicationLogResource" />
        <entry key="LabelsResource" value-ref="LabelsResource" />
        <entry key="UserMessageResource" value-ref="UserMessageResource" />
        <entry key="CustomerMessageResource" value-ref="CustomerMessageResource" />
        <entry key="HelpResource" value-ref="HelpResource" />
        <entry key="PrinterResource" value-ref="PrinterResource" />
        <entry key="OperativeLogResource" value-ref="OperativeLogResource" />
      </dictionary>
    </property>
  </object>
  <object name="ApplicationLogResource" type="Spring.Objects.Factory.Config.ResourceManagerFactoryObject, Spring.Core">
    <property name="baseName" value="Orange.Resources.ApplicationLogMessages" />
    <property name="assemblyName" value="Orange.Resources" />
  </object>
  <object name="LabelsResource" type="Spring.Objects.Factory.Config.ResourceManagerFactoryObject, Spring.Core">
    <property name="baseName" value="Orange.Resources.Labels" />
    <property name="assemblyName" value="Orange.Resources" />
  </object>
  <object name="UserMessageResource" type="Spring.Objects.Factory.Config.ResourceManagerFactoryObject, Spring.Core">
    <property name="baseName" value="Orange.Resources.UserMessages" />
    <property name="assemblyName" value="Orange.Resources" />
  </object>
  <object name="CustomerMessageResource" type="Spring.Objects.Factory.Config.ResourceManagerFactoryObject, Spring.Core">
    <property name="baseName" value="Orange.Resources.CustomerMessages" />
    <property name="assemblyName" value="Orange.Resources" />
  </object>
  <object name="HelpResource" type="Spring.Objects.Factory.Config.ResourceManagerFactoryObject, Spring.Core">
    <property name="baseName" value="Orange.Resources.Help" />
    <property name="assemblyName" value="Orange.Resources" />
  </object>
  <object name="PrinterResource" type="Spring.Objects.Factory.Config.ResourceManagerFactoryObject, Spring.Core">
    <property name="baseName" value="Orange.Resources.Printer" />
    <property name="assemblyName" value="Orange.Resources" />
  </object>
  <object name="OperativeLogResource" type="Spring.Objects.Factory.Config.ResourceManagerFactoryObject, Spring.Core">
    <property name="baseName" value="Orange.Resources.OperativeLogMessages" />
    <property name="assemblyName" value="Orange.Resources" />
  </object>
  <!-- Motore per la valutazione dei template tramite NVelocity -->
  <object name="ReportEngine" type="Orange.Core.Engine.Util.ReportEngine, Orange.Core">
    <!-- File di configurazione di NVelocity -->
    <constructor-arg name="configFile" value="NVelocity.properties" />
  </object>
  <!-- Controller responsabile della lettura dei comandi da diverse sorgenti -->
  <object name="CommandLineBuffer" type="Orange.Base.LineInput.BaseCommandLineBuffer, Orange.Base.LineInput">
    <!-- Dizionario dei device che forniscono i comandi da valutare -->
    <property name="Devices">
      <dictionary key-type="String" value-type="Orange.Core.Device.Device, Orange.Core">
        <entry key="WindowsKeyboardDevice" value-ref="WindowsKeyboardDevice" />
        <entry key="FileCommandInputDevice" value-ref="FileCommandInputDevice" />
        <entry key="RemoteCommandInputDevice" value-ref="RemoteCommandInputDevice" />
        <!--<entry key="CashGuardInputDevice" value-ref="CC.CashGuard" />-->
        <!--<entry key="GunneboInputDevice" value-ref="CC.Gunnebo" />-->
        <!--<entry key="GloryInputDevice" value-ref="CC.Glory" />-->
        <!--<entry key="HttpInputDevice" value-ref="HttpCommandHandler" />-->
        <entry key="UserScannerDevice" value-ref="ScannerDevice" />
      </dictionary>
    </property>
    <!-- Dizionario di associazione comando letto con messaggio da visualizzare -->
    <property name="TextMapper">
      <dictionary key-type="String" value-type="String">
        <entry key="[abortTransaction]" value="${resource.commandAbortTransaction}" />
        <entry key="[addTotal]" value="${resource.commandAddTotal}" />
        <entry key="[amount]" value="${resource.commandAmount}" />
        <entry key="[cancel]" value="${resource.commandCancelVoid}" />
        <entry key="[void]" value="${resource.commandCancelVoid}" />
        <entry key="[change]" value="${resource.commandChange}" />
        <entry key="[clear]" value="${resource.commandClear}" />
        <entry key="[closeMessage]" value="${resource.commandCloseMessage}" />
        <entry key="[completeStamp]" value="${resource.commandCompletePrint}" />
        <entry key="[correction]" value="${resource.commandCorrection}" />
        <entry key="[customer]" value="${resource.commandCustomer}" />
        <entry key="[description]" value="${resource.commandDescription}" />
        <entry key="[discount]" value="${resource.commandDiscount}" />
        <entry key="[document]" value="${resource.commandDocument}" />
        <entry key="[fiscalCode]" value="${resource.commandFiscalCode}" />
        <entry key="[note]" value="${resource.commandNote}" />
        <entry key="[payment]" value="${resource.commandPayment}" />
        <entry key="[%]" value="${resource.commandPercentage}" />
        <entry key="[piece]" value="${resource.commandAmount}" />
        <entry key="[plu]" value="${resource.commandPlu}" />
        <entry key="[price]" value="${resource.commandPrice}" />
        <entry key="[priceIncrease]" value="${resource.commandPriceIncrease}" />
        <entry key="[pricelist]" value="${resource.commandPriceList}" />
        <entry key="[recall]" value="${resource.commandRecall}" />
        <entry key="[recallTotal]" value="${resource.commandRecallTotal}" />
        <entry key="[refund]" value="${resource.commandRefund}" />
        <entry key="[salesman]" value="${resource.commandSalesman}" />
        <entry key="[subtotal]" value="${resource.commandSubtotal}" />
        <entry key="[suspend]" value="${resource.commandSuspend}" />
        <entry key="[documentsuspenddelete]" value="${resource.commandDocumentSuspendDelete}" />
        <entry key="[trainer]" value="${resource.commandTrainer}" />
        <entry key="[user]" value="${resource.commandUser}" />
        <entry key="[X]" value="${resource.commandX}" />
        <entry key="[booking]" value="${resource.commandBooking}" />
        <entry key="[coupon]" value="${resource.commandCoupon}" />
        <entry key="[start]" value="${resource.commandStart}" />
        <entry key="[stop]" value="${resource.commandStop}" />
        <entry key="[message]" value="${resource.commandMessage}" />
        <entry key="[scalereceipt]" value="${resource.commandScaleReceipt}" />
        <entry key="[selfreceipt]" value="${resource.commandSelfReceipt}" />
        <entry key="[documentabort]" value="${resource.commandDocumentAbort}" />
        <entry key="[msg]" value="${resource.commandMsg}" />
        <entry key="[msgclear]" value="${resource.commandMsgClear}" />
        <entry key="[clientreport]" value="${resource.commandClientReport}" />
        <entry key="[opendrawer]" value="${resource.commandOpenDrawer}" />
        <entry key="[serialbatch]" value="${resource.commandSerialBatch}" />
        <entry key="[offAutoCloseDocument]" value="${resource.commandOffAutoCloseDocument}" />
        <entry key="[ipaddress]" value="${resource.commandIPAddress}" />
        <entry key="[preview]" value="${resource.commandPreview}" />
        <entry key="[reporttype]" value="${resource.commandReportType}" />
        <entry key="[closedrawer]" value="${resource.commandCloseDrawer}" />
        <entry key="[codereport]" value="${resource.commandCodeReport}" />
        <entry key="[copies]" value="${resource.commandCopies}" />
        <entry key="[itemdocumentsearch]" value="${resource.commandItemDocumentSearch}" />
        <entry key="[vat]" value="${resource.commandVat}" />
        <entry key="[fiscalclear]" value="${resource.commandFiscalClear}" />
        <entry key="[username]" value="${resource.commandUserName}" />
        <entry key="[password]" value="${resource.commandPassword}" />
        <entry key="[exitwindows]" value="${resource.commandExitWindows}" />
        <entry key="[tax]" value="${resource.commandTax}" />
        <entry key="[force]" value="${resource.commandForce}" />
        <entry key="[begindate]" value="${resource.commandBeginDate}" />
        <entry key="[enddate]" value="${resource.commandEndDate}" />
        <entry key="[calc]" value="${resource.commandCalc}" />
        <entry key="[calcnopromo]" value="${resource.commandCalcNoPromo}" />
        <entry key="[groupby]" value="${resource.commandGroupBy}" />
        <entry key="[documentreport]" value="${resource.commandDocumentReport}" />
        <entry key="[showrest]" value="${resource.commandShowRest}" />
        <entry key="[readsmartkey]" value="${resource.commandReadSmartKey}" />
        <entry key="[forcedlogoff]" value="${resource.commandForcedLogOff}" />
        <entry key="[eft]" value="${resource.commandEFT}" />
        <entry key="[doctype]" value="${resource.commandDocType}" />
        <entry key="[reset]" value="${resource.commandReset}" />
        <entry key="[reverse]" value="${resource.commandReverse}" />
        <entry key="[duplicate]" value="${resource.commandDuplicate}" />
        <entry key="[counter]" value="${resource.commandCounter}" />
        <entry key="[tare]" value="${resource.commandTare}" />
        <entry key="[rowamount]" value="${resource.commandRowAmount}" />
        <entry key="[giftcardservice]" value="${resource.commandGiftCard}" />
      </dictionary>
    </property>
  </object>
  <!-- Factory per ottenere l'istanza per i vari log  -->
  <object name="LogFactory" type="Orange.Core.Engine.Log.LogFactory, Orange.Core" />
  <!-- Controller responsabile dell'interpretazione asincrona dei comandi ottenuti dal CommandLineBuffer -->
  <object name="Interpreter" type="Orange.Base.Engine.UIProcessInterpreter, Orange.Base.Engine">
    <!--<property name="IgnoreCrypt" value="false" />-->
  </object>
  <!-- Definisce i regional setting dell'applicativo in modo da renderlo indipendente da quelli del sistema -->
  <object name="CultureInfo" type="System.Globalization.CultureInfo, mscorlib">
    <constructor-arg type="System.String" value="it-IT" />
  </object>
  <!-- Controller dell'applicativo -->
  <object name="ApplicationController" type="Orange.Base.Engine.UIProcessApplicationController, Orange.Base.Engine">
    <!-- Nome della variabile di stato a cui è associato lo stato dell'aiuto contestuale -->
    <property name="ContextualHelpVariable" value="StateContextualHelp" />
    <!-- Specifica se è possibile attivare l'aiuto contestuale -->
    <property name="ContextualHelpValue" value="Enabled" />
    <!-- Se vale true si ha la disconnessione automatica dell'operatore alla chiusura di un documento  -->
    <property name="LogOutUser" value="false" />
    <!-- Se vale true rimuove il prestito diritti al termine di una action -->
    <property name="LogOutLoanUser" value="true" />
    <!-- Specifica il codice della postazione -->
    <property name="WorkstationCode" value="#{WorkstationCode}" />
    <!-- Specifica la modalità di visualizzazione del puntatore del mouse:
         None = Il mouse funziona normalmente
         Cursor = Nasconde il solo cursore, continuano ad essere intercettati gli eventi scatenati (per es. per il touch screen)
         All = Il mouse è completamente disabilitato, viene nascosto il cursore ed ignorati gli eventi -->
    <property name="HideMousePointer" value="Cursor" />
    <!-- Se vale true si ha la connessione automatica dell'operatore di default all'avvio dell'applicazione -->
    <property name="EnableDefaultUserDeclared" value="false" />
    <!-- Specifica il numero di giorni prima che un file di log applicativo venga cancellato -->
    <property name="ApplicationLogDeleteAfterDays" value="20" />
    <!-- Specifica il numero di giorni prima che un file di log delle operazioni venga cancellato -->
    <property name="OperationLogDeleteAfterDays" value="20" />
    <!-- Specifica il numero di giorni prima che un file di log dei comandi venga cancellato -->
    <property name="CommandLogDeleteAfterDays" value="20" />
    <!-- Specifica il numero di giorni prima che un file di un documento venga cancellato -->
    <property name="DocumentsDeleteAfterDays" value="90" />
    <!-- Specifica il gestore dello stato dell'applicazione -->
    <property name="ApplicationState" ref="ApplicationState" />
    <!-- Specifica se siamo in modalita SSCO o no None/NCR -->
    <property name="SscoModel" value="None" />
    <!-- Dizionario dei dispositivi di output -->
    <property name="ServerAddress" value="#{ServerAddress}" />
    <property name="Devices">
      <dictionary key-type="String" value-type="Orange.Core.Device.Device, Orange.Core">
        <entry key="WindowsFormLineDisplayDevice" value-ref="WindowsFormLineDisplayDevice" />
        <entry key="FiscalPrinterDevice" value-ref="#{FiscalPrinter}" />
        <entry key="UserSoundMessageObserver" value-ref="UserSoundMessageObserver" />
        <!--<entry key="WindowsPrinterDevice" value-ref="TestFiscalPrinterDevice" />-->
        <!--<entry key="DeviceAggiuntivo" value-ref="POSPrinterDevice" />-->
        <!--<entry key="DeviceAggiuntivo1" value-ref="NetworkPOSPrinterDevice1" />-->
        <!--<entry key="CashGuardInputDevice" value-ref="CC.CashGuard" />-->
        <!--<entry key="GunneboInputDevice" value-ref="CC.Gunnebo" />-->
        <!--<entry key="GloryInputDevice" value-ref="CC.Glory" />-->
        <!--<entry key="SSCO" value-ref="SSCODevice" />-->
        <!--<entry key="SSCO" value-ref="TpiscanDevice" />-->
        <!--<entry key="StreamingController" value-ref="StreamingController" />-->
        <entry key="LineDisplayDevice" value-ref="LineDisplayDevice" />
        <entry key="CashDrawerDevice" value-ref="CashDrawerDevice" />
      </dictionary>
    </property>
    <!-- Messaggio automatico nella linedisplay -->
    <!--<property name="LineDisplayAutomaticMessage">
      <object type="Orange.Base.Engine.LineDisplayAutomaticMessage, Orange.Base.Engine">
        <property name="LineDisplayDeviceKey" value="LineDisplayDevice" />
        <property name="Enabled" value="true" />
        <property name="IntervalBeforeShow" value="5000" />
        <property name="IntervalScroll" value="5000" />
        <property name="ScrollMessage" value="Vi auguriamo una    buona giornata." />
        <property name="CloseMessage" value="*** CASSA CHIUSA ***" />
        <property name="OpenMessage" value="*** CASSA APERTA ***" />
        <property name="ForceCols" value="20" />
      </object>
    </property>-->
    <!-- collection dei getters -->
    <!--    <property name="Getters">
      <dictionary key-type="String" value-type="Orange.Core.Engine.Getters.Getter, Orange.Core">
        <entry key="CommandLog" value-ref="CommandLogGetter" />
      </dictionary>
    </property> -->
    <!-- Servizio per il recupero dei valori di default -->
    <property name="DefaultValues" ref="DefaultValuesService" />
    <!-- Specifica il dizionario dei dispositivi di stampa responsabili per i diversi tipi di report -->
    <property name="ReportTypePrinterMap">
      <dictionary key-type="String" value-type="Orange.Core.Device.Output.PrinterDevice, Orange.Core">
        <!-- Chiusura cassetto operatore in letura -->
        <entry key="XUserReport" value-ref="#{ReportPrinter}" />
        <!-- Chiusura cassetto operatore in scrittura -->
        <entry key="ZUserReport" value-ref="#{ReportPrinter}" />
        <!-- Chiusura giornata fiscale della postazione in letura -->
        <entry key="XWorkstationReport" value-ref="#{ReportPrinter}" />
        <!-- Chiusura giornata fiscale della postazione in scrittura -->
        <entry key="ZWorkstationReport" value-ref="#{ReportPrinter}" />
        <!-- Chiusura turno dell'operatore in scrittura -->
        <entry key="ZTurnReport" value-ref="#{ReportPrinter}" />
        <!-- Glory -->
        <entry key="GloryReport" value-ref="#{ReportPrinter}" />
        <!-- Scontrino fiscale -->
        <entry key="Receipt" value-ref="#{ReportPrinter}" />
        <!-- Stampa di un Coupon -->
        <entry key="Coupon" value-ref="#{ReportPrinter}" />
        <!-- Scontrino di deposito di cassa -->
        <entry key="OperatorCashDeposit" value-ref="#{ReportPrinter}" />
        <!-- Scontrino di prelevo di cassa -->
        <entry key="OperatorCashDrawing" value-ref="#{ReportPrinter}" />
        <!-- Scontrino di fondo cassa -->
        <entry key="OperatorCashInitialize" value-ref="#{ReportPrinter}" />
        <!-- Scontrino di dichiarazione di cassa -->
        <entry key="OperatorCashDeclare" value-ref="#{ReportPrinter}" />
        <!-- Scontrino di pagamento fatture con contante di cassa -->
        <entry key="OperatorCashInvoicesPayment" value-ref="#{ReportPrinter}" />
        <!-- Scontrino di incasso fatture -->
        <entry key="OperatorCashCustomerDeposit" value-ref="#{ReportPrinter}" />
        <!-- Scontrino OperatorCashExclusiveDrawing – Uscita Contanti -->
        <entry key="OperatorCashExclusiveDrawing" value-ref="#{ReportPrinter}" />
        <!-- Scontrino OperatorCashOtherDrawing – Uscita altri pagamenti -->
        <entry key="OperatorCashOtherDrawing" value-ref="#{ReportPrinter}" />
        <!-- Scontrino Trasferimento a POS  - CustomerCashToPOS -->
        <entry key="CustomerCashToPOS" value-ref="#{ReportPrinter}" />
        <!-- Scontrino Ricevuto da altro POS - CustomerCashFromPOS -->
        <entry key="CustomerCashFromPOS" value-ref="#{ReportPrinter}" />
        <!-- Documento duplicato -->
        <entry key="DuplicatedReceipt" value-ref="#{ReportPrinter}" />
        <!-- Documento duplicato senza prezzi -->
        <entry key="DuplicatedReceiptNoPrices" value-ref="#{ReportPrinter}" />
        <!-- Ricevuta di prenotazione -->
        <entry key="SaleOrder" value-ref="#{ReportPrinter}" />
        <!-- Ricevuta fiscale riferita a scontrino -->
        <entry key="SaleInvoiceReferredReceipt" value-ref="#{ReportPrinter}" />
        <!-- Talloncino di sospensione documento -->
        <entry key="Suspended" value-ref="#{ReportPrinter}" />
        <!-- Documento annullato -->
        <entry key="Aborted" value-ref="#{ReportPrinter}" />
        <!-- Report del castelletto iva-->
        <entry key="VAT" value-ref="#{ReportPrinter}" />
        <!-- Report delle vendite per reparto -->
        <entry key="Departments" value-ref="#{ReportPrinter}" />
        <!-- Report delle vendite per fascia oraria -->
        <entry key="TimeBands" value-ref="#{ReportPrinter}" />
        <!-- Report delle vendite per reaprto / fascia oraria -->
        <entry key="DepTimeBands" value-ref="#{ReportPrinter}" />
        <!-- Report dei pagamenti -->
        <entry key="Payment" value-ref="#{ReportPrinter}" />
        <!-- Altri tipi di vendita non fiscale -->
        <entry key="SaleOther" value-ref="#{ReportPrinter}" />
        <!--<entry key="SaleOther" value-ref="POSPrinterDevice" />-->
        <!--<entry key="SaleOther" value-ref="TestFiscalPrinterDevice" />-->
        <!--<entry key="SaleOther" value-ref="NetworkPOSPrinterDevice1" />-->
        <!-- Cedolino rilascio premi -->
        <entry key="PremiumDetails" value-ref="#{ReportPrinter}" />
        <!-- Cedolino Pagamento POS -->
        <entry key="EftPosReceipt" value-ref="#{ReportPrinter}" />
        <!-- Cedolino Messaggi -->
        <entry key="Messages" value-ref="#{ReportPrinter}" />
        <!-- Cedolino Codice PIN -->
        <entry key="PinCodeReceipt" value-ref="#{ReportPrinter}" />
        <!-- Fattura -->
        <entry key="SaleInvoice" value-ref="#{ReportPrinter}" />
        <!--<entry key="SaleInvoice" value-ref="POSPrinterDevice" />-->
        <!--<entry key="SaleInvoice" value-ref="TestFiscalPrinterDevice" />-->
        <!--<entry key="SaleInvoice" value-ref="NetworkPOSPrinterDevice1" />-->
        <!-- Deposito di cliente - CustomerCashDeposit -->
        <entry key="CustomerCashDeposit" value-ref="#{ReportPrinter}" />
        <!-- Prelievo di cliente - CustomerCashDrawing -->
        <entry key="CustomerCashDrawing" value-ref="#{ReportPrinter}" />
        <!-- Report iva per reparto-->
        <entry key="VATDep" value-ref="#{ReportPrinter}" />
        <!-- Glory -->
        <entry key="GloryReport" value-ref="#{ReportPrinter}" />
        <!-- Gunnebo -->
        <entry key="GunneboReport" value-ref="#{ReportPrinter}" />
        <!-- Advance -->
        <entry key="Advance" value-ref="#{ReportPrinter}" />
        <!-- Advance -->
        <entry key="AdvanceNotRedempted" value-ref="#{ReportPrinter}" />
        <!-- Cassetto semplificato -->
        <entry key="XUserSimplyReport" value-ref="#{ReportPrinter}" />
        <!-- Chiusura cassetto semplificato operatore in scrittura -->
        <entry key="ZUserSimplyReport" value-ref="#{ReportPrinter}" />
        <!-- RestForAdvance-->
        <entry key="RestForAdvance" value-ref="#{ReportPrinter}" />
        <entry key="WorkingDocument" value-ref="TestFiscalPrinterDevice" />
        <entry key="FiscalTotals" value-ref="#{ReportPrinter}" />
        <entry key="DeliverySaleOrder" value-ref="#{ReportPrinter}" />
        <entry key="PaymentDocType" value-ref="#{ReportPrinter}" />
      </dictionary>
    </property>
    <property name="EFTPosMap">
      <dictionary key-type="String" value-type="Orange.Core.Engine.IEFTPos, Orange.Core">
        <!--<entry key="Argentea" value-ref="Argentea"/>-->
        <!--<entry key="Sagem_Ingenico" value-ref="Sagem_Ingenico"/>-->
        <!-- <entry key="IngenicoIAE17" value-ref="IngenicoIAE17" /> -->
        <!--<entry key="WinEpts" value-ref="WinEpts"/>-->
        <entry key="AeviPay" value-ref="AeviPay" />
      </dictionary>
    </property>
  </object>
  <object name="CommandLogGetter" type="Orange.Core.Engine.Getters.CommandLogGetter, Orange.Core">
    <constructor-arg name="PathToMonitor" value="C:\Orange\Import\Command" />
    <constructor-arg name="FileNameFilter" value="*.log" />
    <property name="PathForUnchecked" value="C:\Orange\Import\Command\Unchecked\" />
  </object>
  <!-- Controller del motore promozionale -->
  <object name="PromotionController" type="Orange.Base.Engine.UIProcessPromotionController, Orange.Base.Engine">
    <constructor-arg type="Orange.Core.Engine.Service.IPromotionService, Orange.Core" ref="PromotionService" />
    <!-- Se false significa che il sistema non ha un server fidelity -->
    <property name="HasFidelityServer" value="false" />
    <!-- Se True, nel caso di gestione "Fidelity solo Orange", agevola la codifica del Cliente Fidelity,
         viene consentita la sua creazione automatica nel Fidelity Server -->
    <property name="AutoCreationFidelityCustomer" value="false" />
    <property name="CouponCoder" ref="CouponCodeParser" />
    <property name="CouponFreeSerializedCoder" ref="CouponFreeSerializedParser" />
  </object>
  <!-- Controller della gestione del cassetto -->
  <object name="DayTurnDrawerController" type="Orange.Base.Engine.UIProcessDayTurnDrawerController, Orange.Base.Engine">
    <!-- Se vale true obbliga la chiusura del cassetto tramite dichiarazione  -->
    <property name="HasOperatorCashDeclare" value="false" />
    <property name="HasOperatorCashInitialize" value="false" />
    <!-- Per il Cassetto Centralizzato settare HasUserCentralizeManagement a true -->
    <!-- Se vale true si ha la gestione centralizzata dei turni e cassetti -->
    <property name="HasUserCentralizeManagement" value="#{UserCentralizeManagement}" />
    <!-- Se vale false i metodi di apertura/chiusura/aggiornamento non fanno nulla -->
    <property name="ManagementEnable" value="true" />
    <!-- Se vale false non si avrà il report di chiusura del day alla chiusura della postazione, ma solo la chiusura fiscale -->
    <property name="DayReportOnClosing" value="false" />
    <!-- Se vale false non si avrà il report di chiusura del turno al log off dell'operatore -->
    <property name="TurnReportOnClosing" value="false" />
    <!-- Specifica il numero di giorni prima che un file dei dati di gestione del cassetto venca cancellato -->
    <property name="DeleteAfterDays" value="40" />
    <!-- Riferimento al servizio di archiviazione dei dati del cassetto -->
    <property name="Service" ref="DayTurnDrawerService" />
  </object>
  <!-- Controller del gestore dei documenti -->
  <object name="DocumentController" type="Orange.Base.Engine.UIProcessDocumentController, Orange.Base.Engine">
    <!-- Contiene il codice del documento da creare automaticamente al superamento del totale. 
         Se vale stringa vuota non si ha l'auto chiusura del documento -->
    <property name="AutoCloseDocument" value="10" />
    <!-- Se vale ture impedisce l'aggiunta di altri pagamenti al raggiungimento del subtotale -->
    <property name="OverloadPayment" value="true" />
    <property name="DocumentTypeEmitterMap">
      <dictionary key-type="Orange.Commons.DocumentTypeCode, Orange.Commons" value-type="System.Collections.Generic.IList&lt;Orange.Core.Engine.IDocumentEmitter&gt;">
        <!--<entry key="SaleInvoiceReferredReceipt">
          <list element-type="Orange.Core.Engine.IDocumentEmitter">
            <object name="TicketEmitter" type="Orange.Base.Engine.Documents.Emitter.TicketEmitter, Orange.Base.Engine" />
          </list>
        </entry>-->
        <entry key="Receipt">
          <list element-type="Orange.Core.Engine.IDocumentEmitter">
            <!--<object name="PremiumEmitter" type="Orange.Base.Engine.Documents.Emitter.PremiumEmitter, Orange.Base.Engine" />-->
            <!--<object name="PinEmitter" type="Orange.Base.Engine.Documents.Emitter.PinEmitter, Orange.Base.Engine" />-->
            <!--<object name="BPEEmitter" type="Orange.Base.Engine.Documents.Emitter.BPEEmitter, Orange.Base.Engine" />-->
            <!--  object name="AdvanceEmitter" type="Orange.Base.Engine.Documents.Emitter.AdvanceEmitter, Orange.Base.Engine" />
            <object name="RestForAdvanceEmitter" type="Orange.Base.Engine.Documents.Emitter.RestForAdvanceEmitter, Orange.Base.Engine">
              <property name="PaymentCodes">
                <list element-type="String">
                  <value>11111</value>
                </list>
              </property>             
            </object> -->
            <object name="AICEmitter" type="Orange.Base.Engine.Documents.Emitter.AICEmitter, Orange.Base.Engine" />
            <object name="MessageEmitter" type="Orange.Base.Engine.Documents.Emitter.MessageEmitter, Orange.Base.Engine" />
            <object name="DeliveryEmitter" type="Orange.Base.Engine.Documents.Emitter.DeliveryEmitter, Orange.Base.Engine" />
            <object name="BPEEmitter" type="Orange.Base.Engine.Documents.Emitter.BPEEmitter, Orange.Base.Engine" />
          </list>
        </entry>
        <!--<entry key="SaleInvoice">
          <list element-type="Orange.Core.Engine.IDocumentEmitter">
            <object name="TicketEmitter" type="Orange.Base.Engine.Documents.Emitter.TicketEmitter, Orange.Base.Engine" />
          </list>
        </entry>-->
      </dictionary>
    </property>
    <property name="DocumentTypeSplitterMap">
      <dictionary key-type="Orange.Commons.DocumentTypeCode, Orange.Commons" value-type="Orange.Core.Engine.IDocumentSplitter, Orange.Core">
        <!--<entry key="Receipt">
          <object type="Orange.Base.Engine.Documents.Splitter.TicketSplitter, Orange.Base.Engine" />
        </entry>-->
        <!--<entry key="Receipt">
          <object type="Orange.Base.Engine.Documents.Splitter.ItemTypeSplitter, Orange.Base.Engine">
            <property name="ItemTypeMap">
              <dictionary key-type="string" value-type="Orange.Commons.DocumentTypeCode, Orange.Commons">
                <entry key="NoFiscal" value="SaleOther" />
                <entry key="Ticket" value="SaleOther" />
                <entry key="ForeignDepartment" value="SaleOther" />
              </dictionary>
            </property>
            <property name="DepartmentTypeMap">
              <dictionary key-type="string" value-type="Orange.Commons.DocumentTypeCode, Orange.Commons">
                <entry key="Foreign" value="SaleOther" />                
              </dictionary>
            </property>
          </object>
        </entry>-->
        <!--<entry key="SaleInvoiceReferredReceipt">
          <object type="Orange.Base.Engine.Documents.Splitter.TicketSplitter, Orange.Base.Engine" />
        </entry>-->
        <!--<entry key="SaleInvoice">
          <object type="Orange.Base.Engine.Documents.Splitter.TicketSplitter, Orange.Base.Engine" />
        </entry>-->
        <entry key="DeliverySaleOrder">
          <object type="Orange.Base.Engine.Documents.Splitter.DeliverySaleOrderSplitter, Orange.Base.Engine" />
        </entry>
      </dictionary>
    </property>
    <property name="DocumentTypeValidatorMap">
      <dictionary key-type="Orange.Commons.DocumentTypeCode, Orange.Commons" value-type="Orange.Core.Engine.DocumentValidator, Orange.Core">
        <entry key="Receipt">
          <object type="Orange.Base.Engine.Documents.Validator.TicketValidator, Orange.Base.Engine" />
        </entry>
        <entry key="SaleInvoice">
          <object type="Orange.Base.Engine.Documents.Validator.SaleInvoiceValidator, Orange.Base.Engine" />
        </entry>
      </dictionary>
    </property>
    <property name="PromotionController" ref="PromotionController" />
    <property name="DTDController" ref="DayTurnDrawerController" />
    <property name="LoadInitialPoints" value="true" />
    <property name="DocumentService" ref="DocumentService" />
    <property name="RequesterMap">
      <dictionary key-type="String" value-type="Orange.Core.Engine.IRequester, Orange.Core">
        <!--<entry key="ScaleReceipt" value-ref="ScaleReceipt"/>-->
        <!--<entry key="ScaleCheckout" value-ref="ScaleCheckout"/>-->
        <!--<entry key="SelfReceipt" value-ref="SelfReceipt"/>-->
        <!--<entry key="TSPDispatching" value-ref="TSPDispatching"/>-->
        <!--<entry key="ArgenteaPINDispatching" value-ref="ArgenteaPINDispatching"/>-->
        <!--<entry key="Test" value-ref="Test" />-->
        <!--<entry key="CashGuard" value-ref="CC.CashGuard" />-->
        <!--<entry key="Gunnebo" value-ref="CC.Gunnebo" />-->
        <!--<entry key="Glory" value-ref="CC.Glory" />-->
        <!--<entry key="ADG" value-ref="ADG"/>-->
        <!-- <entry key="GiftCardService" value-ref="GiftCardService"/> -->
        <!--<entry key="ForeignDocument" value-ref="ForeignDocument"/>-->
        <!--<entry key="ForeignDocumentLocal" value-ref="ForeignDocument"/>-->
        <!--<entry key="SmartBipService" value-ref="SmartBipService"/>-->
        <!-- <entry key="EuronetPinDispatching" value-ref="EuronetPinDispatching"/> -->
        <entry key="BuonoChiaro" value-ref="TM.BuonoChiaro" />
      </dictionary>
    </property>
    <!--<property name="CashManagementRequesterMap">
      <dictionary key-type="String" value-type="Orange.Core.Engine.IRequester, Orange.Core">
        <entry key="CashGuard" value-ref="CC.CashGuard" />
        <entry key="Gunnebo" value-ref="CC.Gunnebo" />
		    <entry key="Glory" value-ref="CC.Glory" />
      </dictionary>
    </property>-->
    <property name="TicketMealValidatorMap">
      <dictionary key-type="String" value-type="Orange.Core.Engine.IValidatorRequester, Orange.Core">
        <entry key="BuonoChiaro" value-ref="TM.BuonoChiaro" />
      </dictionary>
    </property>
    <!--<property name="BPEValidatorMap">
      <dictionary key-type="String" value-type="Orange.Core.Engine.IValidatorRequester, Orange.Core">
        <entry key="BuonoPastoElettronico" value-ref="BuonoPastoElettronico"/>
      </dictionary>
    </property>-->
    <property name="BPEValidatorMap">
      <dictionary key-type="String" value-type="Orange.Core.Engine.IValidatorRequester, Orange.Core">
        <!--<entry key="AMoneyBPE" value-ref="AMoneyBPE"/>-->
        <entry key="BuonoPastoElettronico" value-ref="BuonoPastoElettronico" />
      </dictionary>
    </property>
    <!--<property name="ADGValidatorMap">
      <dictionary key-type="String" value-type="Orange.Core.Engine.IValidatorRequester, Orange.Core">
        <entry key="ADG" value-ref="ADG"/>
      </dictionary>
    </property>-->
    <property name="ServiceRequesterMap">
      <dictionary key-type="String" value-type="Orange.Core.Engine.IRequester, Orange.Core">
        <!--<entry key="SmartBipService" value-ref="SmartBipService"/>-->
      </dictionary>
    </property>
    <property name="DocumentTypeRequesterMap">
      <dictionary key-type="Orange.Commons.DocumentTypeCode, Orange.Commons" value-type="System.Collections.Generic.IList&lt;IRequester&gt;">
        <!-- Decommentare per pagamenti Argentea-->
        <!--<entry key="Receipt">
          <list element-type="IRequester">
            <ref object="Argentea"/>
          </list>
        </entry>-->
        <!-- Decommentare per scambio importo Sagem e Ingenico 5100-->
        <!--<entry key="Receipt">
          <list element-type="IRequester">
            <ref object="Sagem_Ingenico"/>
          </list>
        </entry>-->
        <!--<entry key="Receipt">
          <list element-type="IRequester">
            <ref object="LeaderMobile"/>
          </list>
        </entry>-->
        <!-- Decommentare per scambio importo Ingenico 3070 con DLL-->
        <!-- <entry key="Receipt">
          <list element-type="IRequester">
            <ref object="IngenicoIAE17" />
          </list>
        </entry> -->
        <!--<entry key="Receipt">
          <list element-type="IRequester">
            <ref object="CC.Gunnebo" />
          </list>
        </entry>-->
        <!-- Decommentare per scambio importo winepts-->
        <!--<entry key="Receipt">
          <list element-type="IRequester">
            <ref object="WinEpts"/>
          </list>
        </entry>-->
        <!-- Decommentare per Cash Guard-->
        <!--<entry key="Receipt">
          <list element-type="IRequester">
            <ref object="CC.CashGuard"/>
          </list>
        </entry>
        <entry key="CustomerCashDeposit">
          <list element-type="IRequester">
            <ref object="CC.CashGuard"/>
          </list>
        </entry>
        <entry key="CustomerCashDrawing">
          <list element-type="IRequester">
            <ref object="CC.CashGuard"/>
          </list>
        </entry>
        <entry key="OperatorCashDeposit">
          <list element-type="IRequester">
            <ref object="CC.CashGuard"/>
          </list>
        </entry>
        <entry key="OperatorCashDrawing">
          <list element-type="IRequester">
            <ref object="CC.CashGuard"/>
          </list>
        </entry>-->
        <!-- Decommentare per glory-->
        <!--<entry key="Receipt">
          <list element-type="IRequester">
            <ref object="CC.Glory"/>
          </list>
        </entry>
        <entry key="CustomerCashDeposit">
          <list element-type="IRequester">
            <ref object="CC.Glory"/>
          </list>
        </entry>
        <entry key="CustomerCashDrawing">
          <list element-type="IRequester">
            <ref object="CC.Glory"/>
          </list>
        </entry>
        <entry key="OperatorCashDeposit">
          <list element-type="IRequester">
            <ref object="CC.Glory"/>
          </list>
        </entry>
        <entry key="OperatorCashDrawing">
          <list element-type="IRequester">
            <ref object="CC.Glory"/>
          </list>
        </entry>-->
        <entry key="Receipt">
          <list element-type="IRequester">
            <ref object="AeviPay" />
          </list>
        </entry>
        <entry key="SaleInvoice">
          <list element-type="IRequester">
            <ref object="AeviPay" />
          </list>
        </entry>
      </dictionary>
    </property>
    <property name="BarCodeGenerator">
      <ref object="#{BarCodeGenerator}" />
    </property>
    <property name="RefundValidatorMap">
      <dictionary key-type="String" value-type="Orange.Core.Engine.IValidatorRequester, Orange.Core">
        <entry key="RefundPayment" value-ref="RefundPaymentRequester" />
      </dictionary>
    </property>
  </object>
  <!--<object name ="Test" type="Orange.Base.Engine.Documents.Requester.TestRequester, Orange.Base.Engine"/>-->
  <!--<object name ="ScaleCheckout" type="Orange.Base.Engine.Documents.Requester.CheckoutRequester, Orange.Base.Engine">
    <property name="SerialPortName" value="COM1"/>
    <property name="SerialPortBaudRate" value="9600"/>
    <property name="SerialPortParity" value="Odd"/>
    <property name="SerialPortDataBits" value="7"/>
    <property name="SerialPortStopBits" value="One"/>
    <property name="ReadTimeout" value="30000"/>
    <property name="WriteTimeout" value="30000"/>
    <property name="MinWeight" value="20"/>
  </object>-->
  <!-- CheckOut x Mettler -->
  <!--<object name ="ScaleCheckout" type="Orange.Base.Engine.Documents.Requester.MettlerCheckoutRequester, Orange.Base.Engine">
    <property name="SerialPortName" value="COM3"/>
    <property name="SerialPortBaudRate" value="9600"/>
    <property name="SerialPortParity" value="Odd"/>
    <property name="SerialPortDataBits" value="7"/>
    <property name="SerialPortStopBits" value="One"/>
    <property name="ReadTimeout" value="30000"/>
    <property name="WriteTimeout" value="30000"/>
    <property name="EnableScaleCommandLog" value="true"/>
    <property name="SleepTime" value="100"/>
  </object>-->
  <!--<object name ="ScaleReceipt" type="Orange.Base.Engine.Documents.Requester.ScaleReceiptRequester, Orange.Base.Engine">
    <constructor-arg name="scaleReceiptDAO" ref="WSScaleReceiptDAO"/>
    <constructor-arg name="itemService" ref="ItemService"/>
    <property name="UpdateItemCode" value="true"/>
    <property name="UpdateDepartmentCode" value="true"/>
    <property name="UpdateTaxCode" value="true"/>
    <property name="UpdateDescription" value="false"/>
    <property name="UpdatePosDescription" value="false"/>
    <property name="UpdateUoMCode" value="true"/>
    <property name="DefaultDepartmentScaleKeyCode" value="9901"/>
    <property name="ControlScaleNumberPresence" value="true"/>
    <property name="IgnoreDetailPromotion" value="false"/>
  </object>-->
  <!--<object name ="SelfReceipt" type="Orange.Base.Engine.Documents.Requester.SelfReceiptRequester, Orange.Base.Engine">
    <constructor-arg name="selfReceiptDAO" ref="WSScaleReceiptDAO"/>
    <constructor-arg name="itemService" ref="ItemService"/>
  </object>-->
  <!--<object name ="Payzone" type="Orange.Base.Engine.Documents.Requester.PayzoneRequester, Orange.Base.Engine">
    <constructor-arg name="hostAddress" value="10.0.0.103"/>
    <constructor-arg name="hostPort" value="5005"/>
  </object>-->
  <!-- =========== PIN DISPATCHING TSP ============ -->
  <!--<object name ="TSPDispatching" type="Orange.Base.Engine.Documents.Requester.TSPRequester, Orange.Base.Engine">
    <property name="hostURL" value="https://easychannel-test.tsp.it/easychannel/EasyChannel"/>
    <property name="senderAbiCode" value=""/>
    <property name="orderingAbiCode" value=""/>
    <property name="serviceChannel" value="GDO"/>
    <property name="keyRequest" value=""/>
    <property name="CertificatePath" value="C:\"/>
    <property name="printIDTransaction" value="true"/>
    <property name="Plant" value="00"/>
    <property name="Operator" value="0000"/>
    <property name="ClearMessage" value="false" />
  </object>-->
  <!-- =========== PIN DISPATCHING Euronet ============ -->
  <!-- <object name="EuronetPinDispatching" type="Orange.Base.Engine.Documents.Requester.PrivateEuronetAsyncRequester, Orange.Base.Engine.Documents.Requester.Euronet">
    <property name="HostURL" value="http://localhost/Euronet.Services/api/euronet/call/"/>
    <property name="TerminalId" value="#{EuronetTID}"/>
    <property name="PrintIDTransaction" value="true" />
    <property name="ClearMessage" value="true" />
    <property name="Language" value="ITA" />
    <property name="CharsPerLine" value="40" />
    <property name="TypeReceipt" value="FULLTEXT" />
    <property name="TimeOut" value="8000" />
    <property name="CertificationFile" value="C:\Orange\Certificate\assente" />
  </object> -->
  <!-- =========== LEADER MOBILE ============ -->
  <!--<object name ="LeaderMobile" type="Orange.Base.Engine.Documents.Requester.LeaderMobileRequester, Orange.Base.Engine">
    <property name="hostURL" value="https://www.fidelitypoint.net/api/"/>
    <property name="Language" value="IT"/>
    <property name="User" value="000"/>
    <property name="Password" value="00000"/>
    <property name="RechargeType" value="3"/>
    <property name="TimeOut" value="10000"/>
    <property name="ThrAmount" value="10.5"/>
    <property name="ClearMessage" value="false" />
    <property name="PrintErrorMessage" value="true" />
    <property name="PointName" value="punti accum." />
    <property name="Welcomes">
      <list element-type="String">
        <value>Codice ricarica Leader</value>
      </list>
    </property>
    <property name="ErrorMessage">
      <list element-type="String">
        <value>Il servizio è momentaneamente</value>
        <value>sospeso. Per verificare</value>
        <value>la carica dei punti</value>
        <value>chiami il numero verde.</value>
      </list>
    </property>
    <property name="Trailers">
      <list element-type="String">
        <value>Visita il nostro sito</value>
        <value>http://www.fidelitymobile.it</value>
      </list>
    </property>
  </object>-->
  <!-- ================== ARGENTEA ================= -->
  <!--<object name ="Argentea" type="Orange.Base.Engine.Documents.Requester.ArgenteaRequester, Orange.Base.Engine">
    <property name="PaymentTypeCode" value="2"/>
    <property name="FirstAttached" value="true"/>
    <property name="DebitCardDuplicatedReceipt" value="false"/>
    <property name="DefaultPayment" value="5"/>
    <property name="PaymentMap">
      <dictionary key-type="string" value-type="string">
        <entry key="00" value="4"/>
        <entry key="04" value="5"/>
        <entry key="66" value="4"/>
      </dictionary>
    </property>
    <property name="TimeOut" value="30"/>
    <property name="ClearMessage" value="false" />
  </object>-->
  <!-- =========== ARGENTEA PIN DISPATCHING ============ -->
  <!--<object name ="ArgenteaPINDispatching" type="Orange.Base.Engine.Documents.Requester.ArgenteaPINRequester, Orange.Base.Engine">
    <property name="TimeOut" value="30"/>
    <property name="ClearMessage" value="false" />
  </object>-->
  <!-- =============== SAGEM_INGENICO =============== -->
  <!-- SerialPortName : COMX : X = int -->
  <!-- SerialPortBaudRate: 9600 default -->
  <!-- SerialPortParity: None = 0, Odd = 1, Even = 2, Mark = 3, Space = 4-->
  <!-- SerialPortDataBits: From 5 to 8-->
  <!-- SerialPortStopBits: None = 0, One = 1, Two = 2, OnePointFive = 3 -->
  <!-- SerialPortHandshake: None = 0, XOnXOff = 1, RequestToSend = 2, RequestToSendXOnXOff = 3 -->
  <!--<object name ="Sagem_Ingenico" type="Orange.Base.Engine.Documents.Requester.Sagem_IngenicoRequester, Orange.Base.Engine">
    <property name="SerialPortName" value="COM1"/>
    <property name="SerialPortBaudRate" value="9600"/>
    <property name="SerialPortParity" value="None"/>
    <property name="SerialPortDataBits" value="8"/>
    <property name="SerialPortStopBits" value="One"/>
    <property name="PaymentTypeCode" value="2"/>
    <property name="DefaultPayment" value="5"/>
    <property name="PaymentMap">
      <dictionary key-type="string" value-type="string">
        <entry key="00" value="4"/>
        <entry key="99" value="5"/>
      </dictionary>
    </property>
    <property name="ReadTimeout" value="45000"/>
    <property name="WriteTimeout" value="45000"/>
    <property name="ClearMessage" value="false" />
  </object>-->
  <!-- <object name ="IngenicoIAE17" type="Orange.Base.Engine.Documents.Requester.IngenicoIAE17Requester, Orange.Base.Engine"> -->
  <!--<object name ="IngenicoIAE17" type="Orange.Base.Engine.Documents.Requester.IngenicoIAE17v211.Documents.Requester.IngenicoIAE17v211Requester, Orange.Base.Engine.Documents.Requester.IngenicoIAE17v211">-->
  <!--<object name ="IngenicoIAE17" type="Orange.Base.Engine.Documents.Requester.IngenicoIAE17v306.Documents.Requester.IngenicoIAE17v306Requester, Orange.Base.Engine.Documents.Requester.IngenicoIAE17v306">-->
  <!-- <object name="IngenicoIAE17" type="Orange.Base.Engine.Documents.Requester.IngenicoIAE17v308.Documents.Requester.IngenicoIAE17v308Requester, Orange.Base.Engine.Documents.Requester.IngenicoIAE17v308">
    <property name="SerialPortName" value="COM2" />
    <property name="SerialPortBaudRate" value="4" />
    <property name="SerialPortParity" value="None" />
    <property name="SerialPortDataBits" value="8" />
    <property name="SerialPortStopBits" value="One" />
    <property name="PaymentTypeCode" value="2" />
    <property name="DefaultPayment" value="5" />
    <property name="PaymentMap">
      <dictionary key-type="string" value-type="string">
        <entry key="1" value="4" />
        <entry key="2" value="5" />
      </dictionary>
    </property>
    <property name="ReadTimeout" value="45000" />
    <property name="WriteTimeout" value="45000" />
    <property name="ClearMessage" value="false" />
    <property name="TerminalId" value="00000000" />
    <property name="PrintTicketReturn" value="True" />
    <property name="CheckIntegrity" value="True" />
    <property name="CheckLinea" value="False" />
  </object> -->
  <!-- ================== Wincor AeviPay : pag. elettronico  ================= -->
  <!-- porte USB -->
  <!--<property name="SendPortNumber" value="20002"/>
  <property name="ReceivePortNumber" value="20006"/>-->
  <!-- porte ETHERNET -->
  <!--<property name="SendPortNumber" value="20001"/>
  <property name="ReceivePortNumber" value="20007"/>-->
  <!--<object name ="WinEpts" type="Orange.Base.Engine.Documents.Requester.WinEptsRequester, Orange.Base.Engine.Documents.Requester.WinEpts">
    <property name="PaymentTypeCode" value="2"/>
    <property name="DebitCardDuplicatedReceipt" value="true"/>
    <property name="ClearMessage" value="false" />
    <property name="TerminalCode" value="00000000"/>
  </object>-->
  <!-- =============== BUONO CHIARO =============== -->
  <!--Es TillNumber.: StoreCode + WorkstationCode + Codice operatore (aggiunto a run-time) 
        ATTENZIONE!!! Questo valore non deve superare i 10 caratteri -->
  <!-- =============== BUONO PASTO  ELETTRONICO =============== -->
  <!-- =============== Affare del Giorno =============== -->
  <!--<object name ="ADG" type="Orange.Base.Engine.Documents.Requester.ADGRequester, Orange.Base.Engine.Documents.Requester.ADG">
    <property name="Url" value="http://ipaddress/api"/>
    <property name="UIDRetail" value="SCSSS0000"/>
    <property name="UIDCounter" value="000-0"/>
    <property name="UserName" value="0000"/>
    <property name="Password" value="0000"/>
  </object>-->
  <!-- =============== GiftCardService =============== -->
  <!-- <object name ="GiftCardService" type="Orange.Base.Engine.Documents.Requester.GiftCardServiceAsyncRequester, Orange.Base.Engine.Documents.Requester.GiftCardService">
    <constructor-arg name="itemService" ref="ItemService"/>
    <property name="UrlAddress" value="http://localhost/GiftCard.Services/"/>
    <property name="StoreID" value="000000"/>
    <property name="PaymentCode" value="OGCS"/>
    <property name="CertificationFile" value="C:\Orange\Certificate\cer.cer"/>
  </object> -->
  <!-- =============== SmartBipService =============== -->
  <!--<object name ="SmartBipService" type="Orange.Base.Engine.Documents.Requester.SmartBipRequester, Orange.Base.Engine.Documents.Requester.SmartBip">
    <property name="Url" value="http://cpc-dev.smartbip.it/smartbip-cpc-shopping/api/pos/"/>
    <property name="UserName" value="" />
    <property name="Password" value="" />
    <property name="ScaleReg" value="#{ScaleReciptCodeRegex}" />
    <property name="Retailer" value="" />
    <property name="Chain" value="" />
    <property name="Store" value="" />
    <property name="Wks" value="" />
  </object>-->
  <!--<object name ="ForeignDocument" type="Orange.Base.Engine.Documents.Requester.ForeignDocumentRequester, Orange.Base.Engine">
    <constructor-arg name="scaleReceiptDAO" ref="WSScaleReceiptDAO"/>
    <constructor-arg name="itemService" ref="ItemService"/>
    <property name="ControlForeignPresence" value="true"/>
   <property name="ForeignCodeParser" ref="ForeignDepartmentCodeParser"/>
    <property name="ForeignLocalCodeParser" ref="ForeignLocalCodeParser"/>
    <property name="WorkstationItemMap">
      <dictionary key-type="string" value-type="string">
        <entry key="001" value="9999"/>
        <entry key="002" value="9901"/>
      </dictionary>
    </property>
  </object>-->
  <!-- Parser per la codifica/decodifica dei codici di un documento -->
  <!-- Il valore della chiave specifica la lunghezza in caratteri del codice, il valore associato specifica il pattern della codifica -->
  <object name="DocumentCodeParser" type="Orange.Base.Engine.Util.CodeParser, Orange.Base.Engine">
    <property name="PatternTable">
      <dictionary key-type="int" value-type="string">
        <entry key="53">
          <value><![CDATA[^(?<chainCode>.{2})(?<storeCode>.{4})(?<workstationCode>.{3})(?<type>.{3})(?<progressive>.{5})(?<guid>.{36})$]]></value>
        </entry>
        <entry key="17">
          <value><![CDATA[^(?<chainCode>.{2})(?<storeCode>.{4})(?<workstationCode>.{3})(?<type>.{3})(?<progressive>.{5})$]]></value>
        </entry>
        <entry key="14">
          <value><![CDATA[^(?<doctype>.{1})(?<workstation>.{3})(?<year>.{1})(?<month>.{1})(?<day>.{2})(?<hour>.{2})(?<minute>.{2})(?<second>.{2})$]]></value>
        </entry>
        <entry key="12">
          <value><![CDATA[^(?<upperNumber>.{5})(?<typeCode>.{2})(?<number>.{5})$]]></value>
        </entry>
        <entry key="11">
          <value><![CDATA[^(?<storeCode>.{4})(?<workstationCode>.{3})(?<progressive>.{4})$]]></value>
        </entry>
        <entry key="5">
          <value><![CDATA[^(?<progressive>.{5})$]]></value>
        </entry>
      </dictionary>
    </property>
  </object>
  <!-- Parser per la codifica/decodifica dei codici di un coupon -->
  <!-- Il valore della chiave specifica la lunghezza in caratteri del codice, il valore associato specifica il pattern della codifica -->
  <object name="CouponCodeParser" type="Orange.Base.Engine.Util.CodeParser, Orange.Base.Engine">
    <property name="PatternTable">
      <dictionary key-type="int" value-type="string">
        <entry key="13">
          <value><![CDATA[^(?<constCode>.{3})(?<variableCode>.{4})(?<value>.{5})(?<chkDgk>.{1})$]]></value>
        </entry>
        <entry key="18">
          <value><![CDATA[^(?<constCode>.{3})(?<value>.{9})(?<chkDgk>.{1})(?<variableCode>.{5})$]]></value>
        </entry>
      </dictionary>
    </property>
  </object>
  <object name="CouponFreeSerializedParser" type="Orange.Base.Engine.Util.CodeParser, Orange.Base.Engine">
    <property name="PatternTable">
      <dictionary key-type="int" value-type="string">
        <entry key="13">
          <value><![CDATA[^(?<constCode>.{7})(?<variableCode>.{5})(?<chkDgk>.{1})$]]></value>
        </entry>
      </dictionary>
    </property>
  </object>
  <!-- Parser per la codifica/decodifica dei  codici di un documento di un negozio in affidamento che non ha client Orange-->
  <!-- Il valore della chiave specifica la lunghezza in caratteri del codice, il valore associato specifica il pattern della codifica -->
  <!--<object name="ForeignLocalCodeParser" type="Orange.Base.Engine.Util.CodeParser, Orange.Base.Engine">
    <property name="PatternTable">
      <dictionary key-type="int" value-type="string">
        <entry key="13">
          <value><![CDATA[^(?<codeItem>.{6})(?<totalAmount>.{6})(?<check>.{1})$]]></value>
        </entry>        
      </dictionary>
    </property>
  </object>-->
  <!--<object name="ForeignDepartmentCodeParser" type="Orange.Base.Engine.Util.CodeParser, Orange.Base.Engine">
    <property name="PatternTable">
      <dictionary key-type="int" value-type="string">
        <entry key="14">
          <value><![CDATA[^(?<doctype2>.{1})(?<workstation>.{3})(?<progressive>.{4})(?<totalAmount>.{6})$]]></value>
        </entry>
      </dictionary>
    </property>
  </object>-->
  <!-- Motore responsabile della gestione degli stati applicativi-->
  <!-- La chiave specifica il nome della variabile, la lista associata specifica i possibili valori il primo dei quali 
       è quello di default all'avvio -->
  <object name="ApplicationState" type="Orange.Base.Engine.UIProcessApplicationState, Orange.Base.Engine">
    <!-- Variabili di stato globali -->
    <property name="GlobalVariablesDictionary">
      <dictionary>
        <entry key="StateCurrentForm">
          <list>
            <value>NONE</value>
            <value>frmAdminConsoleControl</value>
            <value>frmLogin</value>
            <value>frmLog</value>
            <value>frmDocumentReport</value>
            <value>frmDayReport</value>
            <value>frmDrawerReport</value>
            <value>frmTurnReport</value>
            <value>frmTurnProductivityReport</value>
            <value>frmReport</value>
            <value>frmReportTotal</value>
            <value>frmDocument</value>
            <value>frmDocumentPayments</value>
            <value>frmDocumentJournal</value>
            <value>frmDocumentSuspend</value>
            <value>frmCashDrawerCustomer</value>
            <value>frmCashDrawerCentral</value>
            <value>frmConfigurationUserData</value>
            <value>frmGuide</value>
            <value>frmItemFullText</value>
            <value>frmCustomerFullText</value>
          </list>
        </entry>
        <entry key="StateUserRoleLoan">
          <list>
            <value>Empty</value>
            <value>Declared</value>
          </list>
        </entry>
        <entry key="StateUser">
          <list>
            <value>Unknown</value>
            <value>Declared</value>
            <value>Suspended</value>
          </list>
        </entry>
        <entry key="StateTrainingMode">
          <list>
            <value>Inactive</value>
            <value>Active</value>
          </list>
        </entry>
        <entry key="StateContextualHelp">
          <list>
            <value>Disabled</value>
            <value>Enabled</value>
          </list>
        </entry>
        <entry key="StateShopServer">
          <list>
            <value>OnLine</value>
            <value>OffLine</value>
            <value>Sync</value>
            <value>Sync25</value>
            <value>Sync50</value>
            <value>Sync75</value>
            <value>Sync100</value>
          </list>
        </entry>
        <entry key="StateFidelityServer">
          <list>
            <value>OnLine</value>
            <value>OffLine</value>
          </list>
        </entry>
        <entry key="StateUserEmergencyMode">
          <list>
            <value>Inactive</value>
            <value>Fuzzy</value>
            <value>Active</value>
          </list>
        </entry>
        <entry key="StateEftPos">
          <list>
            <value>Inactive</value>
            <value>InProgress</value>
          </list>
        </entry>
        <entry key="StateFiscalPrinter">
          <list>
            <value>OffLine</value>
            <value>OnLine</value>
            <value>SlpNearEnd</value>
            <value>SlpEmpty</value>
            <value>CoverOpen</value>
            <value>ErrorState</value>
          </list>
        </entry>
        <entry key="StateLineDisplay">
          <list>
            <value>OffLine</value>
            <value>OnLine</value>
            <value>ErrorState</value>
          </list>
        </entry>
        <entry key="StateScanner">
          <list>
            <value>OffLine</value>
            <value>OnLine</value>
            <value>ErrorState</value>
          </list>
        </entry>
        <entry key="StateCashDrawer">
          <list>
            <value>OffLine</value>
            <value>OnLine</value>
            <value>CashDrawerOpen</value>
            <value>ErrorState</value>
          </list>
        </entry>
        <entry key="StateDrawerLimit">
          <list>
            <value>Under</value>
            <value>Over</value>
          </list>
        </entry>
      </dictionary>
    </property>
    <!-- Variabili di stato locali al singolo task -->
    <property name="LocalVariablesDictionary">
      <dictionary>
        <entry key="StateDocument">
          <list>
            <value>Empty</value>
            <value>InProgress</value>
            <value>Closing</value>
            <value>Aborting</value>
            <value>Retriving</value>
            <value>ClosingErrorGetData</value>
            <value>ClosingErrorMissingDispenseRestRetry</value>
            <value>MoneticaOXRetry</value>
          </list>
        </entry>
        <entry key="StateDocumentType">
          <list>
            <value>Item</value>
            <value>Credit</value>
            <value>Money</value>
          </list>
        </entry>
        <entry key="StateItemDocument">
          <list>
            <value>Detail</value>
            <value>Payment</value>
            <value>DocumentsTotal</value>
          </list>
        </entry>
        <entry key="StateDocumentDetail">
          <list>
            <value>Append</value>
            <value>Modify</value>
          </list>
        </entry>
        <entry key="StateDocumentPayment">
          <list>
            <value>Append</value>
            <value>Modify</value>
          </list>
        </entry>
        <entry key="StateCustomer">
          <list>
            <value>Empty</value>
            <value>Declared</value>
            <value>FiscalCode</value>
          </list>
        </entry>
        <entry key="StateFidelityCustomer">
          <list>
            <value>Empty</value>
            <value>Declared</value>
          </list>
        </entry>
        <entry key="StateSalesman">
          <list>
            <value>Empty</value>
            <value>Declared</value>
          </list>
        </entry>
        <entry key="StatePriceList">
          <list>
            <value>Empty</value>
            <value>Declared</value>
          </list>
        </entry>
        <entry key="StateDeleteDetail">
          <list>
            <value>None</value>
            <value>AtLeastOne</value>
          </list>
        </entry>
        <entry key="StateDeletePayment">
          <list>
            <value>None</value>
            <value>AtLeastOne</value>
          </list>
        </entry>
        <entry key="StateDocumentHeaderType">
          <list>
            <value>None</value>
            <value>Receipt</value>
            <value>SaleInvoice</value>
            <value>SaleOther</value>
            <value>SaleOrder</value>
            <value>SaleInvoiceReferredReceipt</value>
            <value>DeliverySaleOrder</value>
            <value>RTRefundReceipt</value>
          </list>
        </entry>
      </dictionary>
    </property>
  </object>
  <!-- Form di visluaizzazione dei messaggi verso l'operatore e dei led degli stati -->
  <object name="WindowsFormLineDisplayDevice" type="Orange.Base.Device.Output.WindowsFormLineDisplayDevice, Orange.Base.Device">
    <property name="DeviceVirtualForm" ref="FormDisplayDevice" />
    <property name="Subjects">
      <list element-type="Orange.Core.Engine.Subject.ISubject, Orange.Core">
        <ref object="CommandLineBuffer" />
        <ref object="GUIMessage" />
        <ref object="ApplicationState" />
        <ref object="Interpreter" />
        <ref object="DocumentController" />
      </list>
    </property>
    <property name="SubjectsDataNamesNotAllowed">
      <list element-type="Orange.Core.Engine.Subject.SubjectDataName, Orange.Core">
        <value>FatalCustomer</value>
        <value>ErrorCustomer</value>
        <value>MessageCustomer</value>
      </list>
    </property>
    <property name="Addressee">
      <list element-type="Orange.Commons.DestinationType, Orange.Commons">
        <value>User</value>
      </list>
    </property>
    <!-- Specifica quale pattern deve essere utilizzato per visualizzare un oggetto in riferimento al tipo di evento -->
    <property name="PatternsKey">
      <dictionary key-type="string" value-type="string">
        <entry key="Orange.Core.Engine.HelpMessage:*" value="HelpMessage" />
        <entry key="Orange.Core.Engine.Messages.MessageError:*" value="MessageError" />
        <entry key="Orange.Core.Engine.Messages.MessageWarning:*" value="MessageWarning" />
        <entry key="Orange.Core.Engine.Messages.MessageSearchItem:*" value="MessageSearchItem" />
        <entry key="Orange.Core.Data.Document.ItemDocumentDetail:*" value="ItemDocumentDetail" />
        <entry key="Orange.Core.Data.Document.ItemDocumentDetail:DeleteDetail" value="ItemDocumentDetailDeleted" />
        <entry key="Orange.Core.Data.Document.AdjustmentDocumentDetail:*" value="AdjustmentDocumentDetail" />
        <entry key="Orange.Core.Data.Document.AdjustmentDocumentDetail:DeleteDetail" value="AdjustmentDocumentDetailDeleted" />
        <entry key="Orange.Core.Data.Document.NoteDocumentDetail:*" value="NoteDocumentDetail" />
        <entry key="Orange.Core.Data.Document.NoteDocumentDetail:DeleteDetail" value="NoteDocumentDetailDeleted" />
        <entry key="Orange.Core.Data.Customer.Customer:*" value="Customer" />
        <entry key="Orange.Core.Data.Document.SubtotalDocumentDetail:*" value="SubtotalDocumentDetail" />
        <entry key="Orange.Core.Data.Document.SubtotalDocumentDetail:DeleteDetail" value="SubtotalDocumentDetailDeleted" />
        <entry key="Orange.Core.Engine.Messages.MessageSalePrice:*" value="MessageSalePrice" />
        <entry key="Orange.Core.Engine.Messages.MessagePayment:*" value="MessagePayment" />
        <entry key="Orange.Core.Engine.Messages.MessagePayment:DeletePayment" value="MessagePaymentDeleted" />
        <entry key="Orange.Core.Data.Document.DocumentPayment:*" value="DocumentPayment" />
        <entry key="Orange.Core.Data.Document.DocumentPayment:DeletePayment" value="DocumentPaymentDeleted" />
        <entry key="Orange.Core.Data.Document.ItemBookingDocumentDetail:*" value="ItemBookingDocumentDetail" />
        <entry key="Orange.Core.Data.Document.ItemBookingDocumentDetail:DeleteDetail" value="ItemBookingDocumentDetailDeleted" />
        <entry key="Orange.Core.Data.Document.DocumentMessage:*" value="DocumentMessage" />
        <entry key="Orange.Core.Data.Document.CouponDocumentDetail:*" value="CouponDocumentDetail" />
        <entry key="Orange.Core.Data.Document.CouponDocumentDetail:DeleteDetail" value="CouponDocumentDetailDeleted" />
        <entry key="Orange.Core.Data.Document.ScaleDocumentDetail:*" value="ScaleDocumentDetail" />
        <entry key="Orange.Core.Data.Document.ScaleDocumentDetail:DeleteDetail" value="ScaleDocumentDetailDeleted" />
        <entry key="Orange.Core.Data.Document.SelfDocumentDetail:*" value="SelfDocumentDetail" />
        <entry key="Orange.Core.Data.Document.SelfDocumentDetail:DeleteDetail" value="SelfDocumentDetailDeleted" />
        <entry key="Orange.Core.Data.Document.AssemblyDocumentDetail:*" value="AssemblyDocumentDetail" />
        <entry key="Orange.Core.Data.Document.AssemblyDocumentDetail:DeleteDetail" value="AssemblyDocumentDetailDeleted" />
      </dictionary>
    </property>
    <!-- Specifica i possibili pattern di visualizzazione per i vari oggetti -->
    <property name="DisplayPatterns">
      <dictionary key-type="string" value-type="string">
        <entry key="HelpMessage">
          <value><![CDATA[
                  ${Message}
                  ]]></value>
        </entry>
        <entry key="MessageError">
          <value><![CDATA[
              <div class="Eccezione">
                ${Message}
              </div>
            ]]></value>
        </entry>
        <entry key="MessageWarning">
          <value><![CDATA[
              <div class="Warning">
                ${Message}
              </div>
            ]]></value>
        </entry>
        <entry key="MessageSearchItem">
          <value><![CDATA[
              <div class="Descrizione">
                  ${Description}
                </div>
                <div class="Quantita">
                  Q.ta ${FiscalQuantity}
                </div>
                <div class="Importo">
                  ${FiscalAmount[[{0:€ 0.00}]]}
                </div>
                <div class="CodiceLottiMatricole">
                  ${FirstItem.SerialBatch != null and FirstItem.SerialBatch.Count > 0 ? 'Ser./Mat. '+FirstItem.SerialBatch[0].Code : ''}
                </div>
            ]]></value>
        </entry>
        <entry key="ItemDocumentDetail">
          <value><![CDATA[
                <div class="Descrizione">
                  ${(PromotionType=='ContextualPremiumPickUpPromotion' or PromotionType=='BookingOrContextualPremiumPickUpPromotion') ? '<img src="' + ResourceFactory.GetAbsoluteImagePath('GUIRes\Flags\premium.gif') + '" border="0" width="16" height="16">' : (SaleType=='Gift' ? '<img src="' + ResourceFactory.GetAbsoluteImagePath('GUIRes\Flags\gift.gif') + '" border="0" width="16" height="16">' : (HasPromotionPrice==true ? '<img src="' + ResourceFactory.GetAbsoluteImagePath('GUIRes\Flags\newpricepromotion.gif') + '" border="0" width="16" height="16">' : ''))}
                  ${Description}
                </div>
                <div class="Quantita">
                  ${
				          (SaleType == 'Scale' or SaleType == 'EAN2Weight' or SaleType == 'EAN2Price')
				          ?			  
				          FiscalQuantity == 0 ? StockQuantity != 0 and StockQuantity != 1 and StockQuantity != -1 ? StockQuantity.ToString('0.000') + ' ' + Unit.Unit + ' X ' + Price.ToString('0.00') + ' €/' + Unit.Unit : '' : FiscalQuantity != 1 and FiscalQuantity != -1 ? FiscalQuantity.ToString('0.000') + ' ' + Unit.Unit + ' X ' + Price.ToString('0.00') + ' €/' + Unit.Unit : ''
				          :
				          FiscalQuantity == 0 ? StockQuantity != 0 and StockQuantity != 1 and StockQuantity != -1 ? StockQuantity.ToString('0.###') + ' ' + Unit.Unit + ' X ' + Price.ToString('0.00') + ' €/' + Unit.Unit : '' : FiscalQuantity != 1 and FiscalQuantity != -1 ? FiscalQuantity.ToString('0.###') + ' ' + Unit.Unit + ' X ' + Price.ToString('0.00') + ' €/' + Unit.Unit : ''
				          }
                </div>
                <div class="Importo">
                  ${FiscalQuantity == 0 and StockQuantity != 0 ? StockQuantity * Price : FiscalAmount[[{0:€ 0.00}]]}
                </div>
                <div class="CodiceLottiMatricole">
                  ${SerialBatch != null and SerialBatch.Count > 0 ? 'Ser./Mat. '+SerialBatch[0].Code : ''}
                </div>
                                ]]></value>
        </entry>
        <entry key="ItemDocumentDetailDeleted">
          <value><![CDATA[
                <div class="Descrizione" style="text-decoration: line-through">
                  ${(PromotionType=='ContextualPremiumPickUpPromotion' or PromotionType=='BookingOrContextualPremiumPickUpPromotion') ? '<img src="' + ResourceFactory.GetAbsoluteImagePath('GUIRes\Flags\premium.gif') + '" border="0" width="16" height="16">' : (SaleType=='Gift' ? '<img src="' + ResourceFactory.GetAbsoluteImagePath('GUIRes\Flags\gift.gif') + '" border="0" width="16" height="16">' : (HasPromotionPrice==true ? '<img src="' + ResourceFactory.GetAbsoluteImagePath('GUIRes\Flags\newpricepromotion.gif') + '" border="0" width="16" height="16">' : ''))}
                  ${Description}
                </div>
                <div class="Quantita" style="text-decoration: line-through">
                  ${
				          (SaleType == 'Scale' or SaleType == 'EAN2Weight' or SaleType == 'EAN2Price')
				          ?			  
				          FiscalQuantity == 0 ? StockQuantity != 0 and StockQuantity != 1 and StockQuantity != -1 ? StockQuantity.ToString('0.000') + ' ' + Unit.Unit + ' X ' + Price.ToString('0.00') + ' €/' + Unit.Unit : '' : FiscalQuantity != 1 and FiscalQuantity != -1 ? FiscalQuantity.ToString('0.000') + ' ' + Unit.Unit + ' X ' + Price.ToString('0.00') + ' €/' + Unit.Unit : ''
				          :
				          FiscalQuantity == 0 ? StockQuantity != 0 and StockQuantity != 1 and StockQuantity != -1 ? StockQuantity.ToString('0.###') + ' ' + Unit.Unit + ' X ' + Price.ToString('0.00') + ' €/' + Unit.Unit : '' : FiscalQuantity != 1 and FiscalQuantity != -1 ? FiscalQuantity.ToString('0.###') + ' ' + Unit.Unit + ' X ' + Price.ToString('0.00') + ' €/' + Unit.Unit : ''
				          }
                </div>
                <div class="Importo" style="text-decoration: line-through">
                  ${FiscalQuantity == 0 and StockQuantity != 0 ? StockQuantity * Price : FiscalAmount[[{0:€ 0.00}]]}
                </div>
                <div class="CodiceLottiMatricole" style="text-decoration: line-through">
                  ${SerialBatch != null and SerialBatch.Count > 0 ? 'Ser./Mat. '+SerialBatch[0].Code : ''}
                </div>
                                ]]></value>
        </entry>
        <entry key="AdjustmentDocumentDetail">
          <value><![CDATA[
                <div class="DescrizioneLunga">
                  ${Description}
                </div>
                <div class="Importo">
                  ${FiscalAmount[[{0:€ #,##0.00;€ -#,##0.00; }]]}
                </div>
                ]]></value>
        </entry>
        <entry key="AdjustmentDocumentDetailDeleted">
          <value><![CDATA[
                <div class="DescrizioneLunga" style="text-decoration: line-through">
                  ${Description}
                </div>
                <div class="Importo" style="text-decoration: line-through">
                  ${FiscalAmount[[{0:€ #,##0.00;€ -#,##0.00; }]]}
                </div>
                ]]></value>
        </entry>
        <entry key="NoteDocumentDetail">
          <value><![CDATA[
                ${Description}
                ]]></value>
        </entry>
        <entry key="NoteDocumentDetailDeleted">
          <value><![CDATA[
                <div style="text-decoration: line-through">
                  ${Description}
                </div>
                ]]></value>
        </entry>
        <entry key="Customer">
          <value><![CDATA[
                <div>${'<img src="' + ResourceFactory.GetAbsoluteImagePath('GUIRes\Flags\customer.gif') + '" border="0" width="16" height="16">'}</div>
                <div class="CodiceCliente">${Code}</div>
                <div class="NomeCliente">${Person.LastName} ${Person.FirstName}</div>
                ]]></value>
        </entry>
        <entry key="SubtotalDocumentDetail">
          <value><![CDATA[
                <div class="DescrizioneLunga">${Description}</div>
                <div class="Importo">${Subtotal[[{0:€ 0.00;€ -0.00;€ 0.00}]]}</div>
                ]]></value>
        </entry>
        <entry key="SubtotalDocumentDetailDeleted">
          <value><![CDATA[
                <div class="DescrizioneLunga" style="text-decoration: line-through">${Description}</div>
                <div class="Importo" style="text-decoration: line-through">${Subtotal[[{0:€ 0.00;€ -0.00;€ 0.00}]]}</div>
                ]]></value>
        </entry>
        <entry key="MessageSalePrice">
          <value><![CDATA[
                <div class="InterrogazioneDescrizione">
                  ${HasPromotionPrice==true ? '<img src="' + ResourceFactory.GetAbsoluteImagePath('GUIRes\Flags\newpricepromotion.gif') + '" border="0" width="16" height="16">' : ''}
                  ${SalePrice.Item.Description}
                </div>
                <div class="InterrogazioneQuantita">
                  ${FiscalQuantity != 1 and FiscalQuantity != -1 ? FiscalQuantity.ToString('0.#####') + ' X ' + Price.ToString('0.00') : ''}
                </div>
                <div class="InterrogazioneImporto">
                  ${FiscalAmount[[{0:€ 0.00}]]}
                </div>
                ]]></value>
        </entry>
        <entry key="MessagePayment">
          <value><![CDATA[
                <div class="Descrizione">
                  ${'<img src="' + ResourceFactory.GetAbsoluteImagePath('GUIRes\Flags\money.gif') + '" border="0" width="16" height="16">'}
                  ${DocPayment.Description}
                </div>
                <div class="Quantita">
                  ${DocPayment.Quantity != -1 and DocPayment.Quantity != 1 ? DocPayment.Quantity.ToString('0.#####') + ' X ' + DocPayment.Currency.Unit + ' ' + DocPayment.Piece.ToString('0.00') : ''}
                </div>  
                <div class="Importo">${DocPayment.AmountChanged()[[{0:€ 0.00}]]}</div>
                ]]></value>
        </entry>
        <entry key="MessagePaymentDeleted">
          <value><![CDATA[
                <div class="Descrizione" style="text-decoration: line-through">
                  ${'<img src="' + ResourceFactory.GetAbsoluteImagePath('GUIRes\Flags\money.gif') + '" border="0" width="16" height="16">'}
                  ${DocPayment.Description}
                </div>
                <div class="Quantita" style="text-decoration: line-through">
                  ${DocPayment.Quantity != -1 and DocPayment.Quantity != 1 ? DocPayment.Quantity.ToString('0.#####') + ' X ' + DocPayment.Currency.Unit + ' ' + DocPayment.Piece.ToString('0.00') : ''}
                </div>  
                <div class="Importo" style="text-decoration: line-through">${DocPayment.AmountChanged()[[{0:€ 0.00}]]}</div>
                ]]></value>
        </entry>
        <entry key="DocumentPayment">
          <value><![CDATA[
            <div class="Descrizione">
              ${'<img src="' + ResourceFactory.GetAbsoluteImagePath('GUIRes\Flags\money.gif') + '" border="0" width="16" height="16">'}
              ${Description}
            </div>
            <div class="Quantita">
              ${Quantity != -1 and Quantity != 1 ? Quantity.ToString('0.#####') + ' X ' + Currency.Unit + ' ' + Piece.ToString('0.00') : ''}
            </div>  
            <div class="Importo">${AmountChanged()[[{0:€ 0.00}]]}</div>
            ]]></value>
        </entry>
        <entry key="DocumentPaymentDeleted">
          <value><![CDATA[
                <div class="Descrizione" style="text-decoration: line-through">
                  ${'<img src="' + ResourceFactory.GetAbsoluteImagePath('GUIRes\Flags\money.gif') + '" border="0" width="16" height="16">'}
                  ${Description}
                </div>
                <div class="Quantita" style="text-decoration: line-through">
                  ${Quantity != -1 and Quantity != 1 ? Quantity.ToString('0.#####') + ' X ' + Currency.Unit + ' ' + Piece.ToString('0.00') : ''}
                </div>  
                <div class="Importo" style="text-decoration: line-through">${AmountChanged()[[{0:€ 0.00}]]}</div>
                ]]></value>
        </entry>
        <entry key="ItemBookingDocumentDetail">
          <value><![CDATA[
              <div class="Descrizione">
                ${Description}
              </div>
              <div class="Prenotazione">
                ${StockQuantity[[{0:0}]]} X Prenotazione/i
              </div>
              ]]></value>
        </entry>
        <entry key="ItemBookingDocumentDetailDeleted">
          <value><![CDATA[
              <div class="Descrizione" style="text-decoration: line-through">
                ${Description}
              </div>
              <div class="Prenotazione" style="text-decoration: line-through">
                ${StockQuantity[[{0:0}]]} X Prenotazione/i
              </div>
              ]]></value>
        </entry>
        <entry key="DocumentMessage">
          <value><![CDATA[
              <div class="Messaggio">
                ${Body}
              </div>
              ]]></value>
        </entry>
        <entry key="CouponDocumentDetail">
          <value><![CDATA[
                <div class="Descrizione">
                  ${Description}
                </div>
                <div class="CodiceCoupon">
                  ${CouponCode}
                </div>
                ]]></value>
        </entry>
        <entry key="CouponDocumentDetailDeleted">
          <value><![CDATA[
                <div class="Descrizione" style="text-decoration: line-through">
                  ${Description}
                </div>
                <div class="CodiceCoupon"  style="text-decoration: line-through">
                  ${CouponCode}
                </div>
                ]]></value>
        </entry>
        <entry key="ScaleDocumentDetail">
          <value><![CDATA[
                <div class="Descrizione">
                  ${Description}
                </div>
                <div class="CodiceCoupon">
                  ${ReadedCode}
                </div>
                ]]></value>
        </entry>
        <entry key="ScaleDocumentDetailDeleted">
          <value><![CDATA[
                <div class="Descrizione" style="text-decoration: line-through">
                  ${Description}
                </div>
                <div class="CodiceCoupon"  style="text-decoration: line-through">
                  ${ReadedCode}
                </div>
                ]]></value>
        </entry>
        <entry key="SelfDocumentDetail">
          <value><![CDATA[
                <div class="Descrizione">
                  ${Description}
                </div>
                <div class="CodiceCoupon">
                  ${ReadedCode}
                </div>
                ]]></value>
        </entry>
        <entry key="SelfDocumentDetailDeleted">
          <value><![CDATA[
                <div class="Descrizione" style="text-decoration: line-through">
                  ${Description}
                </div>
                <div class="CodiceCoupon"  style="text-decoration: line-through">
                  ${ReadedCode}
                </div>
                ]]></value>
        </entry>
        <entry key="AssemblyDocumentDetail">
          <value><![CDATA[
                <div style="color: DarkOrange">
                ${Description}
                </div>
                ]]></value>
        </entry>
        <entry key="AssemblyDocumentDetailDeleted">
          <value><![CDATA[
                <div style="color: DarkOrange; text-decoration: line-through">
                  ${Description}
                </div>
                ]]></value>
        </entry>
      </dictionary>
    </property>
  </object>
  <!-- Device di lettura dei comandi da file -->
  <object name="FileCommandInputDevice" type="Orange.Base.Device.Input.FileCommandInputDevice, Orange.Base.Device">
    <property name="Name" value="FileCommandInputDevice" />
  </object>
  <!-- Device di ricezione dei comandi da remoto -->
  <object name="RemoteCommandInputDevice" type="Orange.Base.Device.Input.RemoteCommandInputDevice, Orange.Base.Device">
    <property name="Name" value="RemoteCommandInputDevice" />
  </object>
  <!-- Oggetto remotizzabile, per l'esecuzione di comandi remoti-->
  <object name="SaoCommandInputDevice" type="Spring.Remoting.SaoExporter, Spring.Services">
    <property name="TargetName" value="RemoteCommandInputDevice" />
    <property name="ServiceName" value="RemotedCommandInputDevice" />
  </object>
  <!-- Device di lettura dei comandi da tastiera -->
  <object name="WindowsKeyboardDevice" type="Orange.Base.Device.Input.WindowsKeyboardDevice, Orange.Base.Device">
    <constructor-arg name="keyManagement" value="#{WindowsKeyboardEventManagement}" />
    <!-- Mettere a false nelle installazioni delle casse -->
    <constructor-arg name="onlyWithFocus" value="true" />
    <property name="Name" value="WindowsKeyboardDevice" />
    <property name="SurpressedKeys" value="*" />
    <property name="Mapper" ref="WindowsKeyboardDeviceMapping" />
  </object>
  <!-- Oggetto responsabile della formattazione dei messaggi -->
  <object name="ObjectFormatter" type="Orange.Core.Engine.Util.ObjectFormatter, Orange.Core">
    <property name="Patterns">
      <dictionary key-type="string" value-type="string">
        <entry key="System.Decimal">
          <value>€ {0:0.00}</value>
        </entry>
        <entry key="System.Double">
          <value>€ {0:0.00}</value>
        </entry>
        <entry key="System.String">
          <value>{0}</value>
        </entry>
      </dictionary>
    </property>
  </object>
  <!-- Oggetto responsabile dell'invio degli eventi per la visualizzazione dei messaggi -->
  <object name="GUIMessage" type="Orange.Base.Engine.GUI.UIProcessGUIMessage, Orange.Base.Engine" />
  <!-- Controller per la gestione dei messaggi da visualizzare -->
  <object name="GUIController" type="Orange.Base.Engine.GUI.UIProcessGUIController, Orange.Base.Engine" />
  <object name="LogProperties" type="Orange.Core.Engine.Util.DictionaryObject, Orange.Core" singleton="true">
    <property name="Collection">
      <dictionary>
        <entry key="ClientID" value="#{WorkstationName}" />
      </dictionary>
    </property>
  </object>
  <!--<object name="ExternalLogger" type="Orange.LogOnFly.LogOnFly, Orange.LogOnFly" >
    <property name="IsActive" value="true" />
  </object>-->
  <object name="AeviPay" type="Orange.Base.Engine.Documents.Requester.AeviPayRequester, Orange.Base.Engine.Documents.Requester.BuonoChiaro">
    <property name="RemoteIpAddress" value="127.0.0.1" />
    <property name="SendPortNumber" value="20002" />
    <property name="ReceivePortNumber" value="20006" />
    <property name="TimeOut" value="60000" />
    <property name="PaymentMap">
      <dictionary key-type="string" value-type="string">
        <entry key="Bancomat" value="4" />
        <entry key="CC" value="5" />
      </dictionary>
    </property>
    <property name="PaymentTypeCode" value="2" />
    <property name="PaymentDefault" value="5" />
    <property name="BancomatCode" value="PAG" />
  </object>
  <object name="BuonoPastoElettronico" type="Orange.Base.Engine.Documents.Requester.BPERequester, Orange.Base.Engine.Documents.Requester.BuonoChiaro">
    <property name="RemoteIpAddress" value="127.0.0.1" />
    <property name="SendPortNumber" value="20002" />
    <property name="ReceivePortNumber" value="20006" />
    <property name="TimeOut" value="60000" />
    <property name="PaymentMap">
      <dictionary key-type="string" value-type="string">
        <entry key="001" value="TTicketRestaurant" />
        <entry key="002" value="TDay" />
        <entry key="003" value="TSodexhoPass" />
        <entry key="004" value="TPellegriniCard" />
        <entry key="007" value="TBluticket" />
        <entry key="008" value="TJakala" />
        <entry key="009" value="TMIGLunch" />
      </dictionary>
    </property>
    <property name="PaymentDefault" value="17" />
    <property name="PaymentTypeCode" value="4" />
  </object>
  <object name="TM.BuonoChiaro" type="Orange.Base.Engine.Documents.Requester.BuonoChiaroRequester, Orange.Base.Engine.Documents.Requester.BuonoChiaro">
    <property name="LocalIpAddress" value="192.168.0.140" />
    <property name="ListeningServicePortNumber" value="4444" />
    <property name="IpAddress" value="https://194.213.40.174:11193/DBPosHandler" />
    <property name="PortNumber" value="11193" />
    <property name="TimeOut" value="7000" />
    <property name="IdentificationCode" value="BP1" />
    <property name="CorporateCode" value="0099000001" />
    <!--Es.: StoreCode + WorkstationCode + Codice operatore (aggiunto a run-time) 
        ATTENZIONE!!! Questo valore non deve superare i 10 caratteri -->
    <property name="TillNumber" value="0001018" />
    <property name="PinCorporateCode" value="WNTEST00" />
    <property name="TransactionCode" value="TLV" />
    <property name="OpenOperationType" value="APERTURASCONTRINO" />
    <property name="ValidationOperationType" value="VALIDAZIONE" />
    <property name="VoidOperationType" value="STORNO" />
    <property name="CloseOperationType" value="CHIUSURASCONTRINO" />
    <property name="PaymentMap">
      <dictionary key-type="string" value-type="string">
        <entry key="001" value="TTicketRestaurant" />
        <entry key="002" value="TDay" />
        <entry key="003" value="TSodexhoPass" />
        <entry key="004" value="TPellegriniCard" />
        <entry key="007" value="TBluticket" />
        <entry key="008" value="TJakala" />
        <entry key="009" value="TMIGLunch" />
      </dictionary>
    </property>
    <property name="PaymentTypeCode" value="4" />
  </object>
  <object name="RefundPaymentRequester" type="Orange.Base.Engine.Documents.Requester.RefundPaymentRequester, Orange.Base.Engine">
    <property name="PaymentCode" value="REFUND" />
  </object>
</objects>