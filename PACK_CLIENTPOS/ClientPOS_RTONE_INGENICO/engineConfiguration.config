<?xml version="1.0" encoding="utf-8"?>
<engineConfiguration xmlns="http://www.orangetouchshop.it">
  <global-exceptions xmlns="">
    <exception>
      <type>Orange.Core.Engine.Exceptions.PreconditionException, Orange.Core</type>
      <action-name>WaitConfirmHandler</action-name>
      <error-code>00002</error-code>
    </exception>
    <exception>
      <type>Orange.Core.Engine.Exceptions.ItemException, Orange.Core</type>
      <action-name>WaitConfirmHandler</action-name>
      <error-code>00003</error-code>
    </exception>
    <exception>
      <type>Orange.Core.Engine.Exceptions.PermissionException, Orange.Core</type>
      <action-name>WaitConfirmHandler</action-name>
      <error-code>00011</error-code>
    </exception>
    <exception>
      <type>Orange.Core.Engine.Exceptions.RoleException, Orange.Core</type>
      <action-name>WaitConfirmHandler</action-name>
      <error-code>00012</error-code>
    </exception>
    <exception>
      <type>Orange.Core.Engine.Exceptions.SecurityException, Orange.Core</type>
      <action-name>WaitConfirmHandler</action-name>
      <error-code>00004</error-code>
    </exception>
    <exception>
      <type>Orange.Core.Engine.Exceptions.ClientException, Orange.Core</type>
      <action-name>WaitConfirmHandler</action-name>
      <error-code>00005</error-code>
    </exception>
    <exception>
      <type>Orange.Core.Engine.Exceptions.DocumentException, Orange.Core</type>
      <action-name>WaitConfirmHandler</action-name>
      <error-code>00006</error-code>
    </exception>
    <exception>
      <type>Orange.Core.Engine.Exceptions.PaymentException, Orange.Core</type>
      <action-name>WaitConfirmHandler</action-name>
      <error-code>00007</error-code>
    </exception>
    <exception>
      <type>Orange.Core.Engine.Exceptions.InputDataValidationException, Orange.Core</type>
      <action-name>WaitConfirmHandler</action-name>
      <error-code>00008</error-code>
    </exception>
    <exception>
      <type>Orange.Core.Engine.Exceptions.CommandNotExpectedException, Orange.Core</type>
      <action-name>WaitConfirmHandler</action-name>
      <error-code>00009</error-code>
    </exception>
    <exception>
      <type>Orange.Core.Engine.Exceptions.CommandNotValidException, Orange.Core</type>
      <action-name>WaitConfirmHandler</action-name>
      <error-code>00010</error-code>
    </exception>
    <exception>
      <type>Orange.Core.Engine.Exceptions.UserLimitException, Orange.Core</type>
      <action-name>WaitConfirmHandler</action-name>
      <error-code>00013</error-code>
    </exception>
    <exception>
      <type>Orange.Core.Engine.Exceptions.SearchException, Orange.Core</type>
      <action-name>BaseExceptionHandler</action-name>
      <error-code>00014</error-code>
    </exception>
    <exception>
      <type>Orange.Core.Engine.Exceptions.CustomerException, Orange.Core</type>
      <action-name>WaitConfirmHandler</action-name>
      <error-code>00015</error-code>
    </exception>
    <exception>
      <type>Orange.Core.Engine.Exceptions.SaveDocumentException, Orange.Core</type>
      <action-name>WaitYesNoHandler</action-name>
      <error-code>00016</error-code>
    </exception>
    <exception>
      <type>Orange.Core.Engine.Exceptions.EmitterException, Orange.Core</type>
      <action-name>WaitYesNoHandler</action-name>
      <error-code>00017</error-code>
    </exception>
    <exception>
      <type>Orange.Core.Engine.Exceptions.DrawerAdministratorException, Orange.Core</type>
      <action-name>WaitConfirmToDocumentInProgressHandler</action-name>
      <error-code>00018</error-code>
    </exception>
    <exception>
      <type>Orange.Core.Engine.Exceptions.ServiceConnectionException, Orange.Core</type>
      <action-name>OffLineHandler</action-name>
      <error-code>00019</error-code>
    </exception>
    <exception>
      <type>Orange.Core.Engine.Exceptions.ServiceException, Orange.Core</type>
      <action-name>WaitConfirmHandler</action-name>
      <error-code>00020</error-code>
    </exception>
    <exception>
      <type>Orange.Core.Engine.Exceptions.DrawerException, Orange.Core</type>
      <action-name>WaitConfirmHandler</action-name>
      <error-code>00021</error-code>
    </exception>
    <exception>
      <type>Orange.Core.Engine.Exceptions.CodeException, Orange.Core</type>
      <action-name>WaitConfirmHandler</action-name>
      <error-code>00022</error-code>
    </exception>
    <exception>
      <type>Orange.Core.Engine.Exceptions.CouponException, Orange.Core</type>
      <action-name>WaitConfirmHandler</action-name>
      <error-code>00023</error-code>
    </exception>
    <exception>
      <type>Orange.Core.Engine.Exceptions.BookingException, Orange.Core</type>
      <action-name>WaitConfirmHandler</action-name>
      <error-code>00024</error-code>
    </exception>
    <exception>
      <type>Orange.Core.Engine.Exceptions.FatalException, Orange.Core</type>
      <action-name>FatalHandler</action-name>
      <error-code>00025</error-code>
    </exception>
    <exception>
      <type>Orange.Core.Engine.Exceptions.UserException, Orange.Core</type>
      <action-name>WaitConfirmHandler</action-name>
      <error-code>00026</error-code>
    </exception>
    <exception>
      <type>Orange.Core.Engine.Exceptions.InterpreterException, Orange.Core</type>
      <action-name>WaitConfirmHandler</action-name>
      <error-code>00027</error-code>
    </exception>
    <exception>
      <type>Orange.Core.Engine.Exceptions.SynchronizeException, Orange.Core</type>
      <action-name>BaseExceptionHandler</action-name>
      <error-code>00028</error-code>
    </exception>
    <exception>
      <type>Orange.Core.Engine.Exceptions.TerminateException, Orange.Core</type>
      <action-name>TerminateHandler</action-name>
      <error-code>00029</error-code>
    </exception>
    <exception>
      <type>Orange.Core.Device.Input.InputDeviceException, Orange.Core</type>
      <action-name>BaseExceptionHandler</action-name>
      <error-code>00030</error-code>
    </exception>
    <exception>
      <type>Orange.Core.Engine.Exceptions.GiftException, Orange.Core</type>
      <action-name>WaitConfirmHandler</action-name>
      <error-code>00031</error-code>
    </exception>
    <exception>
      <type>Orange.Core.Engine.Exceptions.ADGException, Orange.Core</type>
      <action-name>WaitConfirmHandler</action-name>
      <error-code>00032</error-code>
    </exception>
    <exception>
      <type>System.Exception</type>
      <action-name>WaitConfirmHandler</action-name>
      <error-code>99999</error-code>
    </exception>
  </global-exceptions>
  <actions xmlns="">
    <action name="frmLoginAction" type="Orange.Base.Engine.Action.frmBaseAction, Orange.Base.Engine, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" roles="*" permissions="*">
      <forward ucname="Application" viewname="frmLogin" />
    </action>
    <action name="frmLogAction" type="Orange.Base.Engine.Action.frmBaseAction, Orange.Base.Engine, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" roles="*" permissions="*">
      <forward ucname="Application" viewname="frmLog" />
    </action>
    <action name="frmReportAction" type="Orange.Base.Engine.Action.frmBaseAction, Orange.Base.Engine, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" roles="*" permissions="*">
      <forward ucname="Application" viewname="frmReport" />
    </action>
    <action name="frmReportTotalAction" type="Orange.Base.Engine.Action.frmBaseAction, Orange.Base.Engine, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" roles="Supervisor" permissions="*">
      <forward ucname="Application" viewname="frmReportTotal" />
    </action>
    <action name="frmCustomerFullTextAction" type="Orange.Base.Engine.Action.frmBaseAction, Orange.Base.Engine, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" roles="*" permissions="*">
      <forward ucname="Document" viewname="frmCustomerFullText" />
    </action>
    <action name="frmItemFullTextAction" type="Orange.Base.Engine.Action.frmBaseAction, Orange.Base.Engine, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" roles="*" permissions="*">
      <forward ucname="Document" viewname="frmItemFullText" />
    </action>
    <action name="frmDocumentAction" type="Orange.Base.Engine.Action.frmBaseAction, Orange.Base.Engine, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" roles="*" permissions="*">
      <forward ucname="Document" viewname="frmDocument" />
      <postforward>
        <state variable="StateDocumentType" value="Item" />
        <state variable="StateItemDocument" value="Detail" />
      </postforward>
    </action>
    <action name="frmDocumentPaymentsAction" type="Orange.Base.Engine.Action.frmDocumentPayment, Orange.Base.Engine, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" roles="*" permissions="*">
      <forward ucname="Document" viewname="frmDocumentPayments" />
      <postforward>
        <state variable="StateDocumentType" value="Item" />
        <state variable="StateItemDocument" value="Payment" />
      </postforward>
    </action>
    <action name="frmDocumentJournalAction" type="Orange.Base.Engine.Action.frmBaseAction, Orange.Base.Engine, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" roles="*" permissions="*">
      <forward ucname="Document" viewname="frmDocumentJournal" />
    </action>
    <action name="frmDocumentSuspendAction" type="Orange.Base.Engine.Action.frmBaseAction, Orange.Base.Engine, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" roles="*" permissions="*">
      <forward ucname="Document" viewname="frmDocumentSuspend" />
    </action>
    <action name="frmCashDrawerCustomerAction" type="Orange.Base.Engine.Action.frmBaseAction, Orange.Base.Engine, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" roles="*" permissions="*">
      <forward ucname="Document" viewname="frmCashDrawerCustomer" />
      <postforward>
        <state variable="StateDocumentType" value="Credit" />
      </postforward>
    </action>
    <action name="frmCashDrawerCentralAction" type="Orange.Base.Engine.Action.frmBaseAction, Orange.Base.Engine, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" roles="*" permissions="*">
      <forward ucname="Document" viewname="frmCashDrawerCentral" />
      <postforward>
        <state variable="StateDocumentType" value="Money" />
      </postforward>
    </action>
    <action name="frmGuideAction" type="Orange.Base.Engine.Action.frmBaseAction, Orange.Base.Engine, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" roles="*" permissions="*">
      <forward ucname="Application" viewname="frmGuide" />
    </action>
    <action name="StartApplicationTaskAction" type="Orange.Base.Engine.Action.StartApplicationTaskAction, Orange.Base.Engine, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" roles="*" permissions="*">
      <exceptions xmlns="">
        <exception>
          <type>Orange.Core.Device.DeviceGenericException, Orange.Core</type>
          <action-name>BaseExceptionHandler</action-name>
          <error-code>00001</error-code>
        </exception>
        <exception>
          <type>System.Exception</type>
          <action-name>FatalHandler</action-name>
          <error-code>00002</error-code>
        </exception>
      </exceptions>
      <forward ucname="Application" viewname="frmLogin" />
    </action>
    <action name="RecoveryApplicationTaskAction" type="Orange.Base.Engine.Action.RecoveryApplicationTaskAction, Orange.Base.Engine, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" roles="*" permissions="*">
      <exceptions xmlns="">
        <exception>
          <type>Orange.Core.Device.DeviceGenericException, Orange.Core</type>
          <action-name>BaseExceptionHandler</action-name>
          <error-code>00001</error-code>
        </exception>
        <exception>
          <type>System.Exception</type>
          <action-name>FatalHandler</action-name>
          <error-code>00002</error-code>
        </exception>
      </exceptions>
    </action>
    <action name="StopApplicationTaskConfirmAction" type="Orange.Base.Engine.Action.StopApplicationTaskConfirmAction, Orange.Base.Engine, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" roles="Supervisor" permissions="*" />
    <action name="StopApplicationTaskAbortAction" type="Orange.Base.Engine.Action.StopApplicationTaskAbortAction, Orange.Base.Engine, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" roles="Supervisor" permissions="*" />
    <action name="StopApplicationTaskAction" type="Orange.Base.Engine.Action.StopApplicationTaskAction, Orange.Base.Engine, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" roles="Supervisor" permissions="*">
      <forward tasktype="End" />
    </action>
    <action name="BaseExceptionHandler" type="Orange.Base.Engine.Handler.BaseExceptionHandler, Orange.Base.Engine, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" roles="*" permissions="*" />
    <action name="WaitConfirmHandler" type="Orange.Base.Engine.Handler.WaitConfirmHandler, Orange.Base.Engine, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" roles="*" permissions="*">
      <properties>
        <property>
          <name>UserScannerDevice</name>
          <value>disable</value>
        </property>
        <property>
          <name>RemoteCommandInputDevice</name>
          <value>disable</value>
        </property>
      </properties>
    </action>
    <action name="WaitYesNoHandler" type="Orange.Base.Engine.Handler.WaitYesNoHandler, Orange.Base.Engine, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" roles="*" permissions="*" />
    <action name="WaitConfirmToDocumentInProgressHandler" type="Orange.Base.Engine.Handler.WaitConfirmToDocumentInProgressHandler, Orange.Base.Engine, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" roles="*" permissions="*" />
    <action name="ShowTicketNumberPrinterExceptionHandler" type="Orange.Base.Engine.Handler.ShowTicketNumberPrinterExceptionHandler, Orange.Base.Engine, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" roles="*" permissions="*">
      <forward tasktype="AutoCLOSE" />
    </action>
    <action name="PrinterExceptionHandler" type="Orange.Base.Engine.Handler.PrinterExceptionHandler, Orange.Base.Engine, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" roles="*" permissions="*">
      <properties>
        <property>
          <name>SuspendDocument</name>
          <value>false</value>
        </property>
      </properties>
      <forward tasktype="AutoCLOSE" />
    </action>
    <action name="EFTExceptionHandler" type="Orange.Base.Engine.Handler.EFTExceptionHandler, Orange.Base.Engine, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" roles="*" permissions="*">
      <properties>
        <property>
          <name>PaymentTypeCode</name>
          <value>2</value>
        </property>
      </properties>
      <forward ucname="Document" viewname="frmDocumentPayments" />
    </action>
    <action name="OffLineHandler" type="Orange.Base.Engine.Handler.OffLineHandler, Orange.Base.Engine, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" roles="*" permissions="*" />
    <action name="FatalHandler" type="Orange.Base.Engine.Handler.FatalHandler, Orange.Base.Engine, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" roles="*" permissions="*" />
    <action name="TerminateHandler" type="Orange.Base.Engine.Handler.TerminateHandler, Orange.Base.Engine, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" roles="*" permissions="*">
      <forward tasktype="End" />
    </action>
    <action name="MessageAction" type="Orange.Base.Engine.Action.MessageAction, Orange.Base.Engine, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" roles="*" permissions="*" />
    <action name="DatabarItem" description="Aggiungi dettaglio" type="Orange.Base.Engine.Action.DatabarItemAction, Orange.Base.Engine, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" roles="POSOperator" permissions="*">
      <properties>
        <property>
          <name>DefaultScaleTare</name>
          <value>#{DefaultScaleTare}</value>
        </property>
      </properties>
      <navigate ucname="Document" viewname="frmDocument" />
      <postnavigate>
        <state variable="StateDocumentType" value="Item" />
        <state variable="StateItemDocument" value="Detail" />
      </postnavigate>
      <postforward>
        <state variable="StateDeleteDetail" value="None" />
      </postforward>
    </action>
    <action name="Item_Code" description="Aggiungi dettaglio" type="Orange.Base.Engine.Action.ItemCodeAction, Orange.Base.Engine, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" roles="POSOperator" permissions="*">
      <properties>
        <property>
          <name>DefaultScaleTare</name>
          <value>#{DefaultScaleTare}</value>
        </property>
        <property>
          <name>DepartmentItemNotRecognized</name>
          <value>#{DepartmentItemNotRecognized}</value>
        </property>
      </properties>
      <navigate ucname="Document" viewname="frmDocument" />
      <postnavigate>
        <state variable="StateDocumentType" value="Item" />
        <state variable="StateItemDocument" value="Detail" />
      </postnavigate>
      <postforward>
        <state variable="StateDeleteDetail" value="None" />
      </postforward>
    </action>
    <action name="Item_Booking" description="Aggiungi prenotazione" type="Orange.Base.Engine.Action.ItemBookingAction, Orange.Base.Engine, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" roles="POSOperator" permissions="*">
      <properties>
        <property>
          <name>Gift</name>
          <value>true</value>
        </property>
        <property>
          <name>Premium</name>
          <value>true</value>
        </property>
        <property>
          <name>Normal</name>
          <value>false</value>
        </property>
      </properties>
      <navigate ucname="Document" viewname="frmDocument" />
      <postnavigate>
        <state variable="StateDocumentType" value="Item" />
        <state variable="StateItemDocument" value="Detail" />
      </postnavigate>
      <postforward>
        <state variable="StateDeleteDetail" value="None" />
      </postforward>
    </action>
    <action name="Item_Coupon" description="Aggiungi coupon" type="Orange.Base.Engine.Action.CouponCodeAction, Orange.Base.Engine, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" roles="POSOperator" permissions="*">
      <navigate ucname="Document" viewname="frmDocument" />
      <postnavigate>
        <state variable="StateDocumentType" value="Item" />
        <state variable="StateItemDocument" value="Detail" />
      </postnavigate>
      <postforward>
        <state variable="StateDeleteDetail" value="None" />
      </postforward>
    </action>
    <action name="Item_Price" description="Interroga prezzo" type="Orange.Base.Engine.Action.ItemPriceAction, Orange.Base.Engine, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" roles="*" permissions="ItemPriceLookUp">
      <navigate ucname="Document" viewname="frmDocument" />
      <postnavigate>
        <state variable="StateDocumentType" value="Item" />
        <state variable="StateItemDocument" value="Detail" />
      </postnavigate>
    </action>
    <action name="Item_Price2" description="Interroga prezzo considerando il taglio prezzo" type="Orange.Base.Engine.Action.ItemPrice2Action, Orange.Base.Engine, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" roles="*" permissions="ItemPriceLookUp">
      <navigate ucname="Document" viewname="frmDocument" />
      <postnavigate>
        <state variable="StateDocumentType" value="Item" />
        <state variable="StateItemDocument" value="Detail" />
      </postnavigate>
    </action>
    <action name="Item_Search" description="Interroga dettaglio" type="Orange.Base.Engine.Action.ItemSearchAction, Orange.Base.Engine, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" roles="*" permissions="ItemSearch">
      <navigate ucname="Document" viewname="frmDocument" />
      <postnavigate>
        <state variable="StateDocumentType" value="Item" />
        <state variable="StateItemDocument" value="Detail" />
      </postnavigate>
    </action>
    <action name="Item_Confirm" description="Conferma prodotto interoggato" type="Orange.Base.Engine.Action.ItemConfirmAction, Orange.Base.Engine, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" roles="POSOperator" permissions="*">
      <navigate ucname="Document" viewname="frmDocument" />
      <postnavigate>
        <state variable="StateDocumentType" value="Item" />
        <state variable="StateItemDocument" value="Detail" />
      </postnavigate>
      <postforward>
        <state variable="StateDeleteDetail" value="None" />
      </postforward>
    </action>
    <action name="Item_RefundChange" description="Reso prodotto" type="Orange.Base.Engine.Action.ItemRefundChangeAction, Orange.Base.Engine, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" roles="*" permissions="ItemRefundChange">
      <properties>
        <property>
          <name>EuronetTID</name>
          <value>#{EuronetTID}</value>
        </property>
        <property>
          <name>AdvancedCodeRegex</name>
          <value>#{AdvancedCodeRegex}</value>
        </property>
      </properties>
      <navigate ucname="Document" viewname="frmDocument" />
      <postnavigate>
        <state variable="StateDocumentType" value="Item" />
        <state variable="StateItemDocument" value="Detail" />
      </postnavigate>
      <postforward>
        <state variable="StateDeleteDetail" value="None" />
      </postforward>
    </action>
    <action name="DocumentDetail_AbortChange" description="Ritorna alla modalità normale di inserimento" type="Orange.Base.Engine.Action.DocumentDetailAbortChangeAction, Orange.Base.Engine, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" roles="*" permissions="*">
      <navigate ucname="Document" viewname="frmDocument" />
      <postnavigate>
        <state variable="StateDocumentType" value="Item" />
        <state variable="StateItemDocument" value="Detail" />
      </postnavigate>
    </action>
    <action name="DocumentPayment_AbortChange" description="Ritorna alla modalità normale di inserimento (Pagamenti)" type="Orange.Base.Engine.Action.DocumentPaymentAbortChangeAction, Orange.Base.Engine, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" roles="*" permissions="*">
      <navigate ucname="Document" viewname="frmDocumentPayments" />
      <postnavigate>
        <state variable="StateDocumentType" value="Item" />
        <state variable="StateItemDocument" value="Payment" />
      </postnavigate>
    </action>
    <action name="DocumentPayment_AbortChange_DrawerCentral" description="Ritorna alla modalità normale di inserimento (Pagamenti)" type="Orange.Base.Engine.Action.DocumentPaymentAbortChangeAction, Orange.Base.Engine, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" roles="*" permissions="*">
      <navigate ucname="Document" viewname="frmCashDrawerCentral" />
      <postnavigate>
        <state variable="StateDocumentType" value="Money" />
      </postnavigate>
    </action>
    <action name="DocumentPayment_AbortChange_DrawerCustomer" description="Ritorna alla modalità normale di inserimento (Pagamenti)" type="Orange.Base.Engine.Action.DocumentPaymentAbortChangeAction, Orange.Base.Engine, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" roles="*" permissions="*">
      <navigate ucname="Document" viewname="frmCashDrawerCustomer" />
      <postnavigate>
        <state variable="StateDocumentType" value="Credit" />
        <state variable="StateItemDocument" value="Payment" />
      </postnavigate>
    </action>
    <action name="Generic_AbortChange" description="Ritorna alla modalità normale" type="Orange.Base.Engine.Action.GenericAbortChangeAction, Orange.Base.Engine, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" roles="*" permissions="*">
      <properties>
        <property>
          <name>UserScannerDevice</name>
          <value>enable</value>
        </property>
        <property>
          <name>RemoteCommandInputDevice</name>
          <value>enable</value>
        </property>
      </properties>
    </action>
    <action name="Item_Change" description="Modifica una riga di vendita prodotto" type="Orange.Base.Engine.Action.ItemChangeAction, Orange.Base.Engine, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" roles="POSOperator" permissions="*">
      <navigate ucname="Document" viewname="frmDocument" />
      <postnavigate>
        <state variable="StateDocumentType" value="Item" />
        <state variable="StateItemDocument" value="Detail" />
      </postnavigate>
    </action>
    <action name="Adjustment_discount" description="Aggiunge una riga nuova con uno sconto" type="Orange.Base.Engine.Action.AdjustmentDiscountAction, Orange.Base.Engine, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" roles="POSOperator" permissions="*">
      <navigate ucname="Document" viewname="frmDocument" />
      <postnavigate>
        <state variable="StateDocumentType" value="Item" />
        <state variable="StateItemDocument" value="Detail" />
      </postnavigate>
      <postforward>
        <state variable="StateDeleteDetail" value="None" />
      </postforward>
    </action>
    <action name="Adjustment2_discount" description="Aggiunge una riga nuova con uno sconto" type="Orange.Base.Engine.Action.AdjustmentDiscount2Action, Orange.Base.Engine, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" roles="POSOperator" permissions="*">
      <navigate ucname="Document" viewname="frmDocument" />
      <postnavigate>
        <state variable="StateDocumentType" value="Item" />
        <state variable="StateItemDocument" value="Detail" />
      </postnavigate>
      <postforward>
        <state variable="StateDeleteDetail" value="None" />
      </postforward>
    </action>
    <action name="Adjustment_ChangeDiscount" description="Modifica contenuto riga sconto o sconto su un prodotto o subtotale" type="Orange.Base.Engine.Action.AdjustmentChangeDiscountAction, Orange.Base.Engine, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" roles="POSOperator" permissions="*">
      <navigate ucname="Document" viewname="frmDocument" />
      <postnavigate>
        <state variable="StateDocumentType" value="Item" />
        <state variable="StateItemDocument" value="Detail" />
      </postnavigate>
    </action>
    <action name="Adjustment_priceIncrease" description="Aggiunge una riga nuova con una maggiorazione" type="Orange.Base.Engine.Action.AdjustmentPriceIncreaseAction, Orange.Base.Engine, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" roles="POSOperator" permissions="*">
      <navigate ucname="Document" viewname="frmDocument" />
      <postnavigate>
        <state variable="StateDocumentType" value="Item" />
        <state variable="StateItemDocument" value="Detail" />
      </postnavigate>
      <postforward>
        <state variable="StateDeleteDetail" value="None" />
      </postforward>
    </action>
    <action name="Adjustement_ChangePriceIncrease" description="Modifica contenuta riga maggiorazione" type="Orange.Base.Engine.Action.AdjustmentChangePriceIncreaseAction, Orange.Base.Engine, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" roles="POSOperator" permissions="*">
      <navigate ucname="Document" viewname="frmDocument" />
      <postnavigate>
        <state variable="StateDocumentType" value="Item" />
        <state variable="StateItemDocument" value="Detail" />
      </postnavigate>
    </action>
    <action name="DocumentDetail_DeleteLastLine" description="Annullo ultima riga immessa" type="Orange.Base.Engine.Action.DocumentDetailDeleteLastLineAction, Orange.Base.Engine, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" roles="*" permissions="ItemCorrection">
      <properties>
        <property>
          <name>SaveItemAborted</name>
          <value>#{SaveItemAborted}</value>
        </property>
      </properties>
      <navigate ucname="Document" viewname="frmDocument" />
      <postnavigate>
        <state variable="StateDocumentType" value="Item" />
        <state variable="StateItemDocument" value="Detail" />
      </postnavigate>
      <postforward>
        <state variable="StateDeleteDetail" value="AtLeastOne" />
      </postforward>
    </action>
    <action name="DocumentPayment_DeleteLastLine" description="Annullo ultima riga immessa (Pagamenti)" type="Orange.Base.Engine.Action.DocumentPaymentDeleteLastLineAction, Orange.Base.Engine, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" roles="*" permissions="PaymentCorrection">
      <navigate ucname="Document" viewname="frmDocumentPayments" />
      <postnavigate>
        <state variable="StateDocumentType" value="Item" />
        <state variable="StateItemDocument" value="Payment" />
      </postnavigate>
      <postforward>
        <state variable="StateDeletePayment" value="AtLeastOne" />
      </postforward>
    </action>
    <action name="DocumentPayment_DeleteLastLine_DrawerCentral" description="Annullo ultima riga immessa (Pagamenti)" type="Orange.Base.Engine.Action.DocumentPaymentDeleteLastLineAction, Orange.Base.Engine, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" roles="*" permissions="PaymentCorrection">
      <navigate ucname="Document" viewname="frmCashDrawerCentral" />
      <postnavigate>
        <state variable="StateDocumentType" value="Money" />
      </postnavigate>
      <postforward>
        <state variable="StateDeletePayment" value="AtLeastOne" />
      </postforward>
    </action>
    <action name="DocumentPayment_DeleteLastLine_DrawerCustomer" description="Annullo ultima riga immessa (Pagamenti)" type="Orange.Base.Engine.Action.DocumentPaymentDeleteLastLineAction, Orange.Base.Engine, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" roles="*" permissions="PaymentCorrection">
      <navigate ucname="Document" viewname="frmCashDrawerCustomer" />
      <postnavigate>
        <state variable="StateDocumentType" value="Credit" />
        <state variable="StateItemDocument" value="Payment" />
      </postnavigate>
      <postforward>
        <state variable="StateDeletePayment" value="AtLeastOne" />
      </postforward>
    </action>
    <action name="DocumentDetail_DeleteCurrentLine" description="Annullo riga puntata" type="Orange.Base.Engine.Action.DocumentDetailDeleteCurrentLineAction, Orange.Base.Engine, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" roles="Supervisor" permissions="ItemCorrection">
      <properties>
        <property>
          <name>SaveItemAborted</name>
          <value>#{SaveItemAborted}</value>
        </property>
      </properties>
      <navigate ucname="Document" viewname="frmDocument" />
      <postnavigate>
        <state variable="StateDocumentType" value="Item" />
        <state variable="StateItemDocument" value="Detail" />
      </postnavigate>
      <postforward>
        <state variable="StateDeleteDetail" value="AtLeastOne" />
      </postforward>
    </action>
    <action name="DocumentPayment_DeleteCurrentLine" description="Annullo riga puntata (Pagamenti)" type="Orange.Base.Engine.Action.DocumentPaymentDeleteCurrentLineAction, Orange.Base.Engine, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" roles="*" permissions="PaymentCorrection">
      <navigate ucname="Document" viewname="frmDocumentPayments" />
      <postnavigate>
        <state variable="StateDocumentType" value="Item" />
        <state variable="StateItemDocument" value="Payment" />
      </postnavigate>
      <postforward>
        <state variable="StateDeletePayment" value="AtLeastOne" />
      </postforward>
    </action>
    <action name="DocumentPayment_DeleteCurrentLine_DrawerCentral" description="Annullo riga puntata (Pagamenti)" type="Orange.Base.Engine.Action.DocumentPaymentDeleteCurrentLineAction, Orange.Base.Engine, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" roles="*" permissions="PaymentCorrection">
      <navigate ucname="Document" viewname="frmCashDrawerCentral" />
      <postnavigate>
        <state variable="StateDocumentType" value="Money" />
      </postnavigate>
      <postforward>
        <state variable="StateDeletePayment" value="AtLeastOne" />
      </postforward>
    </action>
    <action name="DocumentPayment_DeleteCurrentLine_DrawerCustomer" description="Annullo riga puntata (Pagamenti)" type="Orange.Base.Engine.Action.DocumentPaymentDeleteCurrentLineAction, Orange.Base.Engine, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" roles="*" permissions="PaymentCorrection">
      <navigate ucname="Document" viewname="frmCashDrawerCustomer" />
      <postnavigate>
        <state variable="StateDocumentType" value="Credit" />
        <state variable="StateItemDocument" value="Payment" />
      </postnavigate>
      <postforward>
        <state variable="StateDeletePayment" value="AtLeastOne" />
      </postforward>
    </action>
    <action name="Note" type="Orange.Base.Engine.Action.NoteAction, Orange.Base.Engine, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" roles="*" permissions="Note">
      <navigate ucname="Document" viewname="frmDocument" />
      <postnavigate>
        <state variable="StateDocumentType" value="Item" />
        <state variable="StateItemDocument" value="Detail" />
      </postnavigate>
      <postforward>
        <state variable="StateDeleteDetail" value="None" />
      </postforward>
    </action>
    <action name="Subtotal" type="Orange.Base.Engine.Action.SubtotalAction, Orange.Base.Engine, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" roles="POSOperator" permissions="*">
      <navigate ucname="Document" viewname="frmDocument" />
      <postnavigate>
        <state variable="StateDocumentType" value="Item" />
        <state variable="StateItemDocument" value="Detail" />
      </postnavigate>
      <postforward>
        <state variable="StateDeleteDetail" value="None" />
      </postforward>
    </action>
    <action name="Item_Void" type="Orange.Base.Engine.Action.ItemVoidAction, Orange.Base.Engine, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" roles="*" permissions="ItemVoid">
      <navigate ucname="Document" viewname="frmDocument" />
      <postnavigate>
        <state variable="StateDocumentType" value="Item" />
        <state variable="StateItemDocument" value="Detail" />
      </postnavigate>
    </action>
    <action name="ScaleReceipt" type="Orange.Base.Engine.Action.ScaleReceiptAction, Orange.Base.Engine, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" roles="POSOperator" permissions="*">
      <navigate ucname="Document" viewname="frmDocument" />
      <postnavigate>
        <state variable="StateDocumentType" value="Item" />
        <state variable="StateItemDocument" value="Detail" />
      </postnavigate>
      <postforward>
        <state variable="StateDeleteDetail" value="None" />
      </postforward>
    </action>
    <action name="SelfReceipt" type="Orange.Base.Engine.Action.SelfReceiptAction, Orange.Base.Engine, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" roles="POSOperator" permissions="*">
      <navigate ucname="Document" viewname="frmDocument" />
      <postnavigate>
        <state variable="StateDocumentType" value="Item" />
        <state variable="StateItemDocument" value="Detail" />
      </postnavigate>
      <postforward>
        <state variable="StateDeleteDetail" value="None" />
      </postforward>
    </action>
    <action name="Payment_Confirm" type="Orange.Base.Engine.Action.PaymentConfirmAction, Orange.Base.Engine, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" roles="POSOperator" permissions="*">
      <properties>
        <property>
          <name>ViewDelayTime</name>
          <value>1500</value>
        </property>
      </properties>
      <navigate ucname="Document" viewname="frmDocumentPayments" />
      <postnavigate>
        <state variable="StateDocumentType" value="Item" />
        <state variable="StateItemDocument" value="Payment" />
      </postnavigate>
      <postforward>
        <state variable="StateDeletePayment" value="None" />
      </postforward>
    </action>
    <action name="Calculate_Payment" type="Orange.Base.Engine.Action.CalculatePaymentAction, Orange.Base.Engine, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" roles="POSOperator" permissions="*">
      <navigate ucname="Document" viewname="frmDocumentPayments" />
      <postnavigate>
        <state variable="StateDocumentType" value="Item" />
        <state variable="StateItemDocument" value="Payment" />
      </postnavigate>
    </action>
    <action name="Payment_Code" type="Orange.Base.Engine.Action.PaymentCodeAction, Orange.Base.Engine, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" roles="POSOperator" permissions="*">
      <properties>
        <property>
          <name>ViewDelayTime</name>
          <value>1500</value>
        </property>
        <property>
          <name>CashPaymentCode</name>
          <value>1</value>
        </property>
      </properties>
      <navigate ucname="Document" viewname="frmDocumentPayments" />
      <postnavigate>
        <state variable="StateDocumentType" value="Item" />
        <state variable="StateItemDocument" value="Payment" />
      </postnavigate>
      <postforward>
        <state variable="StateDeletePayment" value="None" />
      </postforward>
    </action>
    <action name="Payment_Code_DrawerCentral" type="Orange.Base.Engine.Action.PaymentCodeAction, Orange.Base.Engine, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" roles="POSOperator" permissions="*">
      <properties>
        <property>
          <name>ViewDelayTime</name>
          <value>1500</value>
        </property>
      </properties>
      <navigate ucname="Document" viewname="frmCashDrawerCentral" />
      <postnavigate>
        <state variable="StateDocumentType" value="Money" />
      </postnavigate>
      <postforward>
        <state variable="StateDeletePayment" value="None" />
      </postforward>
    </action>
    <action name="Payment_Code_DrawerCustomer" type="Orange.Base.Engine.Action.PaymentCodeAction, Orange.Base.Engine, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" roles="POSOperator" permissions="*">
      <properties>
        <property>
          <name>ViewDelayTime</name>
          <value>1500</value>
        </property>
      </properties>
      <navigate ucname="Document" viewname="frmCashDrawerCustomer" />
      <postnavigate>
        <state variable="StateDocumentType" value="Credit" />
      </postnavigate>
      <postforward>
        <state variable="StateDeletePayment" value="None" />
      </postforward>
    </action>
    <action name="Payment_Void" type="Orange.Base.Engine.Action.PaymentVoidAction, Orange.Base.Engine, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" roles="*" permissions="PaymentVoid">
      <navigate ucname="Document" viewname="frmDocumentPayments" />
      <postnavigate>
        <state variable="StateDocumentType" value="Item" />
        <state variable="StateItemDocument" value="Payment" />
      </postnavigate>
    </action>
    <action name="Payment_Void_DrawerCentral" type="Orange.Base.Engine.Action.PaymentVoidAction, Orange.Base.Engine, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" roles="*" permissions="PaymentVoid">
      <navigate ucname="Document" viewname="frmCashDrawerCentral" />
      <postnavigate>
        <state variable="StateDocumentType" value="Money" />
      </postnavigate>
    </action>
    <action name="Payment_Void_DrawerCustomer" type="Orange.Base.Engine.Action.PaymentVoidAction, Orange.Base.Engine, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" roles="*" permissions="PaymentVoid">
      <navigate ucname="Document" viewname="frmCashDrawerCustomer" />
      <postnavigate>
        <state variable="StateDocumentType" value="Credit" />
      </postnavigate>
    </action>
    <action name="Customer_FiscalCode" type="Orange.Base.Engine.Action.CustomerFiscalCodeAction, Orange.Base.Engine, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" roles="*" permissions="CustomerFiscalCode" />
    <action name="Customer_ReplaceFiscalCode" type="Orange.Base.Engine.Action.CustomerReplaceFiscalCodeAction, Orange.Base.Engine, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" roles="*" permissions="*" />
    <action name="Customer_AbortReplaceFiscalCode" type="Orange.Base.Engine.Action.CustomerAbortReplaceFiscalCodeAction, Orange.Base.Engine, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" roles="*" permissions="*" />
    <action name="Customer_RemoveFiscalCode" type="Orange.Base.Engine.Action.CustomerRemoveFiscalCodeAction, Orange.Base.Engine, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" roles="*" permissions="*" />
    <action name="Customer_AbortRemoveFiscalCode" type="Orange.Base.Engine.Action.CustomerAbortRemoveFiscalCodeAction, Orange.Base.Engine, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" roles="*" permissions="*" />
    <action name="Salesman_Code" type="Orange.Base.Engine.Action.SalesmanCodeAction, Orange.Base.Engine, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" roles="*" permissions="SalesmanCode">
      <properties>
        <property>
          <name>ViewDelayTime</name>
          <value>1500</value>
        </property>
      </properties>
    </action>
    <action name="Comm_AcceptBarCode" type="Orange.Base.Engine.Action.SalesmanBarCodeAction, Orange.Base.Engine, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" roles="*" permissions="*">
      <properties>
        <property>
          <name>ViewDelayTime</name>
          <value>1500</value>
        </property>
      </properties>
    </action>
    <action name="Salesman_Replace" type="Orange.Base.Engine.Action.SalesmanReplaceAction, Orange.Base.Engine, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" roles="*" permissions="*" />
    <action name="Salesman_AbortReplace" type="Orange.Base.Engine.Action.SalesmanAbortReplaceAction, Orange.Base.Engine, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" roles="*" permissions="*" />
    <action name="Salesman_Remove" type="Orange.Base.Engine.Action.SalesmanRemoveAction, Orange.Base.Engine, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" roles="*" permissions="*" />
    <action name="Salesman_AbortRemove" type="Orange.Base.Engine.Action.SalesmanAbortRemoveAction, Orange.Base.Engine, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" roles="*" permissions="*" />
    <action name="Tax_Code" type="Orange.Base.Engine.Action.TaxCodeAction, Orange.Base.Engine, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" roles="*" permissions="TaxCode">
      <navigate ucname="Document" viewname="frmDocument" />
      <postnavigate>
        <state variable="StateDocumentType" value="Item" />
        <state variable="StateItemDocument" value="Detail" />
      </postnavigate>
    </action>
    <action name="Tax_Replace" type="Orange.Base.Engine.Action.TaxReplaceAction, Orange.Base.Engine, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" roles="*" permissions="*">
      <navigate ucname="Document" viewname="frmDocument" />
      <postnavigate>
        <state variable="StateDocumentType" value="Item" />
        <state variable="StateItemDocument" value="Detail" />
      </postnavigate>
    </action>
    <action name="Tax_Remove" type="Orange.Base.Engine.Action.TaxRemoveAction, Orange.Base.Engine, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" roles="*" permissions="*">
      <navigate ucname="Document" viewname="frmDocument" />
      <postnavigate>
        <state variable="StateDocumentType" value="Item" />
        <state variable="StateItemDocument" value="Detail" />
      </postnavigate>
    </action>
    <action name="Tax_AbortRemove" type="Orange.Base.Engine.Action.TaxAbortRemoveAction, Orange.Base.Engine, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" roles="*" permissions="*">
      <navigate ucname="Document" viewname="frmDocument" />
      <postnavigate>
        <state variable="StateDocumentType" value="Item" />
        <state variable="StateItemDocument" value="Detail" />
      </postnavigate>
    </action>
    <action name="Tax_AbortReplace" type="Orange.Base.Engine.Action.TaxAbortReplaceAction, Orange.Base.Engine, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" roles="*" permissions="*">
      <navigate ucname="Document" viewname="frmDocument" />
      <postnavigate>
        <state variable="StateDocumentType" value="Item" />
        <state variable="StateItemDocument" value="Detail" />
      </postnavigate>
    </action>
    <action name="Tax_AllLine" type="Orange.Base.Engine.Action.TaxAllLinesAction, Orange.Base.Engine, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" roles="*" permissions="TaxCodeAllLine">
      <navigate ucname="Document" viewname="frmDocument" />
      <postnavigate>
        <state variable="StateDocumentType" value="Item" />
        <state variable="StateItemDocument" value="Detail" />
      </postnavigate>
    </action>
    <action name="Tax_OnlyFollowingLine" type="Orange.Base.Engine.Action.TaxOnlyFollowingLinesAction, Orange.Base.Engine, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" roles="*" permissions="*">
      <navigate ucname="Document" viewname="frmDocument" />
      <postnavigate>
        <state variable="StateDocumentType" value="Item" />
        <state variable="StateItemDocument" value="Detail" />
      </postnavigate>
    </action>
    <action name="PriceList_Code" type="Orange.Base.Engine.Action.PriceListCodeAction, Orange.Base.Engine, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" roles="*" permissions="PriceListCode">
      <navigate ucname="Document" viewname="frmDocument" />
      <postnavigate>
        <state variable="StateDocumentType" value="Item" />
        <state variable="StateItemDocument" value="Detail" />
      </postnavigate>
    </action>
    <action name="PriceList_Replace" type="Orange.Base.Engine.Action.PriceListReplaceAction, Orange.Base.Engine, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" roles="*" permissions="*">
      <navigate ucname="Document" viewname="frmDocument" />
      <postnavigate>
        <state variable="StateDocumentType" value="Item" />
        <state variable="StateItemDocument" value="Detail" />
      </postnavigate>
    </action>
    <action name="PriceList_Remove" type="Orange.Base.Engine.Action.PriceListRemoveAction, Orange.Base.Engine, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" roles="*" permissions="*">
      <navigate ucname="Document" viewname="frmDocument" />
      <postnavigate>
        <state variable="StateDocumentType" value="Item" />
        <state variable="StateItemDocument" value="Detail" />
      </postnavigate>
    </action>
    <action name="PriceList_AbortRemove" type="Orange.Base.Engine.Action.PriceListAbortRemoveAction, Orange.Base.Engine, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" roles="*" permissions="*">
      <navigate ucname="Document" viewname="frmDocument" />
      <postnavigate>
        <state variable="StateDocumentType" value="Item" />
        <state variable="StateItemDocument" value="Detail" />
      </postnavigate>
    </action>
    <action name="PriceList_AbortReplace" type="Orange.Base.Engine.Action.PriceListAbortReplaceAction, Orange.Base.Engine, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" roles="*" permissions="*">
      <navigate ucname="Document" viewname="frmDocument" />
      <postnavigate>
        <state variable="StateDocumentType" value="Item" />
        <state variable="StateItemDocument" value="Detail" />
      </postnavigate>
    </action>
    <action name="PriceList_AllLine" type="Orange.Base.Engine.Action.PriceListAllLineAction, Orange.Base.Engine, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" roles="*" permissions="*">
      <navigate ucname="Document" viewname="frmDocument" />
      <postnavigate>
        <state variable="StateDocumentType" value="Item" />
        <state variable="StateItemDocument" value="Detail" />
      </postnavigate>
    </action>
    <action name="PriceList_OnlyFollowingLine" type="Orange.Base.Engine.Action.PriceListOnlyFollowingLineAction, Orange.Base.Engine, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" roles="*" permissions="*">
      <navigate ucname="Document" viewname="frmDocument" />
      <postnavigate>
        <state variable="StateDocumentType" value="Item" />
        <state variable="StateItemDocument" value="Detail" />
      </postnavigate>
    </action>
    <action name="Customer_Code" type="Orange.Base.Engine.Action.CustomerCodeAction, Orange.Base.Engine, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" roles="*" permissions="CustomerCode">
      <navigate ucname="Document" viewname="frmDocument" />
      <postnavigate>
        <state variable="StateDocumentType" value="Item" />
        <state variable="StateItemDocument" value="Detail" />
      </postnavigate>
    </action>
    <action name="Customer_CodeDrawer" type="Orange.Base.Engine.Action.CustomerCodeAction, Orange.Base.Engine, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" roles="*" permissions="CustomerCode">
      <!--<navigate ucname="Document" viewname="frmDocument"/>-->
      <postnavigate>
        <state variable="StateDocumentType" value="Credit" />
        <!--<state variable="StateItemDocument" value="Detail"/>-->
      </postnavigate>
    </action>
    <action name="Customer_Replace" type="Orange.Base.Engine.Action.CustomerReplaceAction, Orange.Base.Engine, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" roles="*" permissions="*" />
    <action name="Customer_AbortReplace" type="Orange.Base.Engine.Action.CustomerAbortReplaceAction, Orange.Base.Engine, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" roles="*" permissions="*" />
    <action name="Customer_Remove" type="Orange.Base.Engine.Action.CustomerRemoveAction, Orange.Base.Engine, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" roles="*" permissions="*" />
    <action name="Customer_NotRemove" type="Orange.Base.Engine.Action.CustomerNotRemoveAction, Orange.Base.Engine, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" roles="*" permissions="*" />
    <action name="User_AcceptBarCode" type="Orange.Base.Engine.Action.UserAcceptBarCodeAction, Orange.Base.Engine, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" roles="*" permissions="*" />
    <action name="User_AcceptBarCode_2" type="Orange.Base.Engine.Action.UserAcceptBarCodeAction, Orange.Base.Engine, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" roles="*" permissions="*">
      <properties>
        <property>
          <name>POSOperator,Salesman,Supervisor,Trainer</name>
          <value>frmDocumentAction</value>
        </property>
        <property>
          <name>Administrator</name>
          <value>frmDocumentJournalAction</value>
        </property>
      </properties>
    </action>
    <action name="User_AcceptUserName" type="Orange.Base.Engine.Action.UserAcceptUserNameAction, Orange.Base.Engine, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" roles="*" permissions="*" />
    <action name="User_WaitUserName" type="Orange.Base.Engine.Action.UserWaitUserNameAction, Orange.Base.Engine, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" roles="*" permissions="*" />
    <action name="User_AcceptPassword" type="Orange.Base.Engine.Action.UserAcceptPasswordAction, Orange.Base.Engine, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" roles="*" permissions="*" />
    <action name="User_AcceptPassword_2" type="Orange.Base.Engine.Action.UserAcceptPasswordAction, Orange.Base.Engine, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" roles="*" permissions="*">
      <properties>
        <property>
          <name>POSOperator,Salesman,Supervisor,Trainer</name>
          <value>frmDocumentAction</value>
        </property>
        <property>
          <name>Administrator</name>
          <value>frmDocumentJournalAction</value>
        </property>
      </properties>
    </action>
    <action name="User_AbortPassword" type="Orange.Base.Engine.Action.UserAbortPasswordAction, Orange.Base.Engine, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" roles="*" permissions="*" />
    <action name="Trainer_AcceptUserName" type="Orange.Base.Engine.Action.TrainerAcceptUserNameAction, Orange.Base.Engine, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" roles="*" permissions="*" />
    <action name="Trainer_WaitUserName" type="Orange.Base.Engine.Action.TrainerWaitUserNameAction, Orange.Base.Engine, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" roles="*" permissions="*" />
    <action name="Trainer_AcceptPassword" type="Orange.Base.Engine.Action.TrainerAcceptPasswordAction, Orange.Base.Engine, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" roles="*" permissions="*" />
    <action name="Trainer_Abort" type="Orange.Base.Engine.Action.TrainerAbortAction, Orange.Base.Engine, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" roles="*" permissions="*" />
    <action name="Document_Abort_ConfirmAction" type="Orange.Base.Engine.Action.DocumentAbortConfirmAction, Orange.Base.Engine, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" roles="*" permissions="AbortTransaction" />
    <action name="Document_Abort_AbortAction" type="Orange.Base.Engine.Action.DocumentAbortAbortAction, Orange.Base.Engine, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" roles="*" permissions="*" />
    <action name="Document_Abort_SavePrintAction" type="Orange.Base.Engine.Action.DocumentAbortSavePrintAction, Orange.Base.Engine, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" roles="*" permissions="*">
      <properties>
        <property>
          <name>RetryMsg</name>
          <value>#{RetryMsg}</value>
        </property>
        <property>
          <name>SuspendMsg</name>
          <value>#{SuspendMsg}</value>
        </property>
      </properties>
      <exceptions xmlns="">
        <exception>
          <type>Orange.Core.Device.Output.PrinterException, Orange.Core</type>
          <action-name>WaitYesNoHandler</action-name>
          <error-code>00001</error-code>
        </exception>
      </exceptions>
    </action>
    <action name="Document_Abort_SaveAction" type="Orange.Base.Engine.Action.DocumentAbortSaveAction, Orange.Base.Engine, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" roles="POSOperator" permissions="*" />
    <action name="Document_Abort" type="Orange.Base.Engine.Action.DocumentAbortAction, Orange.Base.Engine, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" roles="POSOperator" permissions="*">
      <properties>
        <property>
          <name>DeleteSuspendDocumentOnRecover</name>
          <value>#{DeleteSuspendDocumentOnRecover}</value>
        </property>
      </properties>
      <navigate tasktype="AutoCLOSE" />
      <postnavigate>
        <state variable="StateDocument" value="Empty" />
      </postnavigate>
      <forward ucname="Document" viewname="frmDocument" />
      <postforward>
        <state variable="StateDocumentType" value="Item" />
        <state variable="StateItemDocument" value="Detail" />
        <state variable="StateDeleteDetail" value="None" />
        <state variable="StateDeletePayment" value="None" />
      </postforward>
    </action>
    <action name="Document_Suspend" type="Orange.Base.Engine.Action.DocumentSuspendAction, Orange.Base.Engine, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" roles="*" permissions="SuspendRecall">
      <properties>
        <property>
          <name>DocumentCodeParser</name>
          <value>DocumentCodeParser</value>
        </property>
      </properties>
      <exceptions xmlns="">
        <exception>
          <type>Orange.Core.Device.Output.PrinterException, Orange.Core</type>
          <action-name>ShowTicketNumberPrinterExceptionHandler</action-name>
          <error-code>00001</error-code>
        </exception>
      </exceptions>
      <forward tasktype="AutoCLOSE" />
    </action>
    <action name="Document_Suspend_Delete" type="Orange.Base.Engine.Action.DocumentSuspendDeleteAction, Orange.Base.Engine, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" roles="*" permissions="DeleteSuspended">
      <properties>
        <property>
          <name>DocumentCodeParser</name>
          <value>DocumentCodeParser</value>
        </property>
      </properties>
    </action>
    <action name="Document_Search" type="Orange.Base.Engine.Action.DocumentSearchAction, Orange.Base.Engine, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" roles="POSOperator" permissions="*">
      <properties>
        <property>
          <name>DocumentCodeParser</name>
          <value>DocumentCodeParser</value>
        </property>
      </properties>
      <navigate ucname="Document" viewname="frmDocumentJournal" />
    </action>
    <action name="Foreign_Document" type="Orange.Base.Engine.Action.ForeignDocumentAction, Orange.Base.Engine, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" roles="POSOperator" permissions="*">
      <properties>
        <property>
          <name>DocumentCodeParser</name>
          <value>DocumentCodeParser</value>
        </property>
      </properties>
      <navigate ucname="Document" viewname="frmDocument" />
    </action>
    <action name="Document_Recall" type="Orange.Base.Engine.Action.DocumentRecallAction, Orange.Base.Engine, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" roles="*" permissions="SuspendRecall">
      <properties>
        <property>
          <name>DocumentCodeParser</name>
          <value>DocumentCodeParser</value>
        </property>
        <property>
          <name>RetryMsg</name>
          <value>#{RetryMsg}</value>
        </property>
        <property>
          <name>SuspendMsg</name>
          <value>#{SuspendMsg}</value>
        </property>
        <property>
          <name>DeleteSuspendDocumentOnRecover</name>
          <value>#{DeleteSuspendDocumentOnRecover}</value>
        </property>
      </properties>
      <forward ucname="Document" viewname="frmDocument" />
    </action>
    <action name="Document_Recall_Error" type="Orange.Base.Engine.Action.DocumentRecallAction, Orange.Base.Engine, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" roles="POSOperator" permissions="*">
      <properties>
        <property>
          <name>DocumentCodeParser</name>
          <value>DocumentCodeParser</value>
        </property>
        <property>
          <name>RetryMsg</name>
          <value>#{RetryMsg}</value>
        </property>
        <property>
          <name>SuspendMsg</name>
          <value>#{SuspendMsg}</value>
        </property>
        <property>
          <name>DeleteSuspendDocumentOnRecover</name>
          <value>#{DeleteSuspendDocumentOnRecover}</value>
        </property>
      </properties>
      <exceptions xmlns="">
        <exception>
          <type>Orange.Core.Device.Output.PrinterException, Orange.Core</type>
          <action-name>WaitYesNoHandler</action-name>
          <error-code>00001</error-code>
        </exception>
      </exceptions>
    </action>
    <action name="Document_Close" type="Orange.Base.Engine.Action.DocumentCloseAction, Orange.Base.Engine, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" roles="POSOperator" permissions="*">
      <properties>
        <property>
          <name>CloseOperatorCommand</name>
          <value>Ever[preview]Z[reporttype]UserSimplyReport[codereport][clientreport]</value>
          <!-- <value>Ever[preview]Z[reporttype]UserReport[codereport][clientreport]</value> -->
        </property>
        <property>
          <name>RetryMsg</name>
          <value>#{RetryMsg}</value>
        </property>
        <property>
          <name>SuspendMsg</name>
          <value>#{SuspendMsg}</value>
        </property>
        <property>
          <name>DeleteSuspendDocumentOnRecover</name>
          <value>#{DeleteSuspendDocumentOnRecover}</value>
        </property>
        <property>
          <name>BufDocSess</name>
          <value>#{BufDocSess}</value>
        </property>
      </properties>
      <exceptions xmlns="">
        <exception>
          <type>Orange.Core.Engine.Exceptions.CashChargerDispenseRestException, Orange.Core</type>
          <action-name>WaitConfirmHandler</action-name>
          <error-code>00201</error-code>
        </exception>
        <exception>
          <type>Orange.Core.Device.Output.PrinterErrorGetDataException, Orange.Core</type>
          <action-name>WaitYesNoHandler</action-name>
          <error-code>00101</error-code>
        </exception>
        <exception>
          <type>Orange.Core.Device.Output.PrinterException, Orange.Core</type>
          <action-name>WaitYesNoHandler</action-name>
          <error-code>00001</error-code>
        </exception>
        <exception>
          <type>Orange.Core.Engine.Exceptions.ValidatorException, Orange.Core</type>
          <action-name>WaitConfirmToDocumentInProgressHandler</action-name>
          <error-code>00002</error-code>
        </exception>
        <exception>
          <type>Orange.Core.Engine.Exceptions.SplitterException, Orange.Core</type>
          <action-name>WaitConfirmToDocumentInProgressHandler</action-name>
          <error-code>00003</error-code>
        </exception>
        <exception>
          <type>Orange.Core.Engine.Exceptions.DocumentNumberException, Orange.Core</type>
          <action-name>WaitConfirmToDocumentInProgressHandler</action-name>
          <error-code>00004</error-code>
        </exception>
        <exception>
          <type>Orange.Core.Engine.Exceptions.DocumentException, Orange.Core</type>
          <action-name>WaitConfirmToDocumentInProgressHandler</action-name>
          <error-code>00005</error-code>
        </exception>
        <exception>
          <type>Orange.Core.Engine.Exceptions.RequesterException, Orange.Core</type>
          <action-name>WaitConfirmToDocumentInProgressHandler</action-name>
          <error-code>00006</error-code>
        </exception>
        <exception>
          <type>Orange.Core.Engine.Exceptions.PaymentException, Orange.Core</type>
          <action-name>EFTExceptionHandler</action-name>
          <error-code>00007</error-code>
        </exception>
      </exceptions>
      <forward tasktype="AutoCLOSE" />
    </action>
    <action name="Document_AutoClose" type="Orange.Base.Engine.Action.DocumentAutoCloseAction, Orange.Base.Engine, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" roles="POSOperator" permissions="*">
      <exceptions xmlns="">
        <exception>
          <type>Orange.Core.Engine.Exceptions.CashChargerDispenseRestException, Orange.Core</type>
          <action-name>WaitConfirmHandler</action-name>
          <error-code>00201</error-code>
        </exception>
        <exception>
          <type>Orange.Core.Device.Output.PrinterErrorGetDataException, Orange.Core</type>
          <action-name>WaitYesNoHandler</action-name>
          <error-code>00101</error-code>
        </exception>
        <exception>
          <type>Orange.Core.Device.Output.PrinterException, Orange.Core</type>
          <action-name>WaitYesNoHandler</action-name>
          <error-code>00001</error-code>
        </exception>
        <exception>
          <type>Orange.Core.Engine.Exceptions.ValidatorException, Orange.Core</type>
          <action-name>WaitConfirmToDocumentInProgressHandler</action-name>
          <error-code>00002</error-code>
        </exception>
        <exception>
          <type>Orange.Core.Engine.Exceptions.SplitterException, Orange.Core</type>
          <action-name>WaitConfirmToDocumentInProgressHandler</action-name>
          <error-code>00003</error-code>
        </exception>
        <exception>
          <type>Orange.Core.Engine.Exceptions.DocumentNumberException, Orange.Core</type>
          <action-name>WaitConfirmToDocumentInProgressHandler</action-name>
          <error-code>00004</error-code>
        </exception>
        <exception>
          <type>Orange.Core.Engine.Exceptions.DocumentException, Orange.Core</type>
          <action-name>WaitConfirmToDocumentInProgressHandler</action-name>
          <error-code>00005</error-code>
        </exception>
        <exception>
          <type>Orange.Core.Engine.Exceptions.RequesterException, Orange.Core</type>
          <action-name>WaitConfirmToDocumentInProgressHandler</action-name>
          <error-code>00006</error-code>
        </exception>
        <exception>
          <type>Orange.Core.Engine.Exceptions.PaymentException, Orange.Core</type>
          <action-name>EFTExceptionHandler</action-name>
          <error-code>00007</error-code>
        </exception>
      </exceptions>
      <forward ucname="Document" viewname="frmDocument" />
      <postforward>
        <state variable="StateDocumentType" value="Item" />
        <state variable="StateItemDocument" value="Detail" />
        <state variable="StateCustomer" value="Empty" />
        <state variable="StateFidelityCustomer" value="Empty" />
        <state variable="StateDeleteDetail" value="None" />
        <state variable="StateDeletePayment" value="None" />
      </postforward>
    </action>
    <action name="DoNothing" description="Non fa niente" type="Orange.Base.Engine.Action.DoNothingAction, Orange.Base.Engine, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" roles="*" permissions="*" />
    <action name="ResolveCode" type="Orange.Base.Engine.Action.ResolveCodeAction, Orange.Base.Engine, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" roles="POSOperator" permissions="*">
      <properties>
        <property>
          <name>StateUser=Unknown</name>
          <value>[user]</value>
        </property>
        <property>
          <name>StateUser=Declared,StateDocument=Empty</name>
          <value>[plu],[scaleReceipt],[customer],[user],[coupon],[payment],[launchVoucher],[recall]</value>
        </property>
        <property>
          <name>StateUser=Declared,StateDocument=InProgress,StateDocumentType=Money</name>
          <value>[payment],[launchVoucher],[coupon],[user]</value>
        </property>
        <property>
          <name>StateUser=Declared,StateDocument=InClosing,StateDocumentType=Money</name>
          <value>[payment],[launchVoucher],[coupon],[user]</value>
        </property>
        <property>
          <name>StateUser=Declared,StateDocument=InProgress,StateDocumentType=Credit</name>
          <value>[payment],[launchVoucher],[customer],[user],[recall]</value>
        </property>
        <property>
          <name>StateUser=Declared,StateDocument=InClosing,StateDocumentType=Credit</name>
          <value>[payment],[launchVoucher],[customer],[user],[recall]</value>
        </property>
        <property>
          <name>StateUser=Declared,StateDocument=InProgress,StateDocumentType=Item,StateItemDocument=Detail</name>
          <value>[plu],[scaleReceipt],[customer],[user],[coupon],[payment],[launchVoucher],[recall]</value>
        </property>
        <property>
          <name>StateUser=Declared,StateDocument=InClosing,StateDocumentType=Item,StateItemDocument=Detail</name>
          <value>[plu],[scaleReceipt],[customer],[user],[coupon],[payment],[launchVoucher],[recall]</value>
        </property>
        <property>
          <name>StateUser=Declared,StateDocument=InProgress,StateDocumentType=Item,StateItemDocument=Payment</name>
          <value>[payment],[launchVoucher],[customer],[plu],[scaleReceipt],[coupon],[user],[recall]</value>
        </property>
        <property>
          <name>StateUser=Declared,StateDocument=InClosing,StateDocumentType=Item,StateItemDocument=Payment</name>
          <value>[payment],[launchVoucher],[customer],[plu],[scaleReceipt],[coupon],[user],[recall]</value>
        </property>
      </properties>
    </action>
    <action name="DocumentClosingErrorDispenseRestRetry" type="Orange.Base.Engine.Action.DocumentClosingErrorDispenseRestRetryAction, Orange.Base.Engine, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" roles="POSOperator" permissions="*">
      <forward ucname="Document" viewname="frmDocument" />
      <postforward>
        <state variable="StateDocumentType" value="Item" />
        <state variable="StateItemDocument" value="Detail" />
        <state variable="StateCustomer" value="Empty" />
        <state variable="StateFidelityCustomer" value="Empty" />
        <state variable="StateDeleteDetail" value="None" />
        <state variable="StateDeletePayment" value="None" />
      </postforward>
    </action>
    <action name="DocumentClosingErrorMoneticaRetry" type="Orange.Base.Engine.Action.DocumentClosingErrorMoneticaRetryAction, Orange.Base.Engine, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" roles="POSOperator" permissions="*"></action>
    <action name="DocumentClosingErrorGetData" type="Orange.Base.Engine.Action.DocumentClosingErrorGetDataAction, Orange.Base.Engine, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" roles="POSOperator" permissions="*">
      <properties>
        <property>
          <name>RetryMsg</name>
          <value>#{RetryMsg}</value>
        </property>
        <property>
          <name>SuspendMsg</name>
          <value>#{SuspendMsg}</value>
        </property>
      </properties>
      <exceptions xmlns="">
        <exception>
          <type>Orange.Core.Device.Output.PrinterErrorGetDataException, Orange.Core</type>
          <action-name>WaitYesNoHandler</action-name>
          <error-code>00101</error-code>
        </exception>
        <exception>
          <type>Orange.Core.Device.Output.PrinterException, Orange.Core</type>
          <action-name>WaitYesNoHandler</action-name>
          <error-code>00001</error-code>
        </exception>
      </exceptions>
      <forward ucname="Document" viewname="frmDocument" />
      <postforward>
        <state variable="StateDocumentType" value="Item" />
        <state variable="StateItemDocument" value="Detail" />
        <state variable="StateCustomer" value="Empty" />
        <state variable="StateFidelityCustomer" value="Empty" />
        <state variable="StateDeleteDetail" value="None" />
        <state variable="StateDeletePayment" value="None" />
      </postforward>
    </action>
    <action name="DocumentClosingError" type="Orange.Base.Engine.Action.DocumentClosingErrorAction, Orange.Base.Engine, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" roles="POSOperator" permissions="*">
      <forward ucname="Document" viewname="frmDocument" />
      <postforward>
        <state variable="StateDocumentType" value="Item" />
        <state variable="StateItemDocument" value="Detail" />
        <state variable="StateCustomer" value="Empty" />
        <state variable="StateFidelityCustomer" value="Empty" />
        <state variable="StateDeleteDetail" value="None" />
        <state variable="StateDeletePayment" value="None" />
      </postforward>
    </action>
    <action name="DocumentErrorRecallError" type="Orange.Base.Engine.Action.DocumentErrorRecallErrorAction, Orange.Base.Engine, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" roles="POSOperator" permissions="*">
      <properties>
        <property>
          <name>RetryMsg</name>
          <value>#{RetryMsg}</value>
        </property>
        <property>
          <name>SuspendMsg</name>
          <value>#{SuspendMsg}</value>
        </property>
      </properties>
      <exceptions xmlns="">
        <exception>
          <type>Orange.Core.Device.Output.PrinterException, Orange.Core</type>
          <action-name>WaitYesNoHandler</action-name>
          <error-code>00001</error-code>
        </exception>
      </exceptions>
    </action>
    <action name="DocumentClosingErrorAbort" type="Orange.Base.Engine.Action.DocumentClosingErrorAbortAction, Orange.Base.Engine, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" roles="POSOperator" permissions="*">
      <properties>
        <property>
          <name>SuspendDocument</name>
          <value>true</value>
        </property>
      </properties>
      <forward ucname="Document" viewname="frmDocument" />
      <postforward>
        <state variable="StateDocumentType" value="Item" />
        <state variable="StateItemDocument" value="Detail" />
        <state variable="StateCustomer" value="Empty" />
        <state variable="StateFidelityCustomer" value="Empty" />
        <state variable="StateDeleteDetail" value="None" />
        <state variable="StateDeletePayment" value="None" />
      </postforward>
    </action>
    <action name="DocumentErrorRecallErrorAbort" type="Orange.Base.Engine.Action.DocumentErrorRecallErrorAbortAction, Orange.Base.Engine, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" roles="POSOperator" permissions="*" />
    <action name="DocumentAbortingError" type="Orange.Base.Engine.Action.DocumentAbortingErrorAction, Orange.Base.Engine, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" roles="POSOperator" permissions="*" />
    <action name="DocumentAbortingErrorAbort" type="Orange.Base.Engine.Action.DocumentAbortingErrorAbortAction, Orange.Base.Engine, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" roles="POSOperator" permissions="*" />
    <action name="Message_Displayed" type="Orange.Base.Engine.Action.MessageDisplayedAction, Orange.Base.Engine, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" roles="*" permissions="*" />
    <action name="Message_DisplayedClear" type="Orange.Base.Engine.Action.MessageDisplayedClearAction, Orange.Base.Engine, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" roles="*" permissions="*" />
    <action name="SendRemoteCommand" type="Orange.Base.Engine.Action.SendRemoteCommandAction, Orange.Base.Engine, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" roles="*" permissions="*" />
    <action name="ClientReport" type="Orange.Base.Engine.Action.ClientReportAction, Orange.Base.Engine, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" roles="*" permissions="*">
      <properties>
        <property>
          <name>00</name>
          <value>X|WorkstationReport</value>
        </property>
        <property>
          <name>01</name>
          <value>X|UserReport</value>
        </property>
        <property>
          <name>02</name>
          <value>X|UserReport|WorkstationReport</value>
        </property>
        <property>
          <name>03</name>
          <value>X|EFTPos</value>
        </property>
        <property>
          <name>04</name>
          <value>X|EFTPos|WorkstationReport</value>
        </property>
        <property>
          <name>05</name>
          <value>X|UserReport|EFTPos|WorkstationReport</value>
        </property>
        <property>
          <name>10</name>
          <value>Z|WorkstationReport</value>
        </property>
        <property>
          <name>11</name>
          <value>Z|UserReport</value>
        </property>
        <property>
          <name>12</name>
          <value>Z|UserReport|WorkstationReport</value>
        </property>
        <property>
          <name>13</name>
          <value>Z|EFTPos</value>
        </property>
        <property>
          <name>14</name>
          <value>Z|EFTPos|WorkstationReport</value>
        </property>
        <property>
          <name>15</name>
          <value>Z|UserReport|EFTPos|WorkstationReport</value>
        </property>
        <!--<property>
          <name>16</name>
          <value>X|GloryReport</value>
        </property>-->
        <!--<property>
          <name>16</name>
          <value>X|GunneboReport</value>
        </property>-->
        <property>
          <name>16</name>
          <value>X|UserSimplyReport</value>
        </property>
        <property>
          <name>17</name>
          <value>Z|UserSimplyReport</value>
        </property>
        <property>
          <name>18</name>
          <value>X|WorkstationSimplyReport</value>
        </property>
        <property>
          <name>19</name>
          <value>Z|WorkstationSimplyReport</value>
        </property>
        <property>
          <name>CloseDrawer.PrintPaymentDocTypeReport</name>
          <!--<value>Store</value>-->
          <value>#{CloseDrawer.PrintPaymentDocTypeReport}</value>
        </property>
      </properties>
      <exceptions xmlns="">
        <exception>
          <type>Orange.Core.Device.Output.PrinterException, Orange.Core</type>
          <action-name>BaseExceptionHandler</action-name>
          <error-code>00001</error-code>
        </exception>
      </exceptions>
      <navigate ucname="Application" viewname="frmReport" />
    </action>
    <action name="Open_Drawer" type="Orange.Base.Engine.Action.OpenDrawerAction, Orange.Base.Engine, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" roles="*" permissions="OpenDrawer" />
    <action name="Reinitialize" type="Orange.Base.Engine.Action.ReinitializeAction, Orange.Base.Engine, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" roles="*" permissions="*" />
    <action name="Fiscal_Clear" type="Orange.Base.Engine.Action.FiscalClearAction, Orange.Base.Engine, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" roles="*" permissions="*">
      <properties>
        <property>
          <name>PrintVATReport</name>
          <!--<value>Store</value>-->
          <value>#{Fiscal_Clear.PrintVATReport}</value>
        </property>
        <property>
          <name>PrintDepartmentReport</name>
          <value>#{Fiscal_Clear.PrintDepartmentReport}</value>
        </property>
        <property>
          <name>OpenDrawer</name>
          <value>#{Fiscal_Clear.OpenDrawer}</value>
        </property>
        <property>
          <name>PrintPaymentReport</name>
          <value>#{Fiscal_Clear.PrintPaymentReport}</value>
        </property>
      </properties>
    </action>
    <action name="Exit_Windows" type="Orange.Base.Engine.Action.ExitWindowsAction, Orange.Base.Engine, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" roles="*" permissions="*" />
    <!--<action name="Wake_Client" type="Orange.Base.Engine.Action.WakeClientAction, Orange.Base.Engine, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" roles="*" permissions="*">
      <properties>
        <property>
          <name>Port</name>
          <value>40000</value>
        </property>
      </properties>
    </action>-->
    <action name="DocumentReport" type="Orange.Base.Engine.Action.DocumentReportAction, Orange.Base.Engine, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" roles="*" permissions="*">
      <!--<properties>
        <property>
          <name>ControlUser</name>
          <value>True</value>
        </property>
      </properties>-->
      <exceptions xmlns="">
        <exception>
          <type>Orange.Core.Device.Output.PrinterException, Orange.Core</type>
          <action-name>BaseExceptionHandler</action-name>
          <error-code>00001</error-code>
        </exception>
      </exceptions>
    </action>
    <action name="Show_Rest" type="Orange.Base.Engine.Action.ShowRestAction, Orange.Base.Engine, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" roles="POSOperator" permissions="*" />
    <action name="Read_SmartKey" type="Orange.Base.Engine.Action.ReadSmartKeyAction, Orange.Base.Engine, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" roles="*" permissions="*" />
    <action name="Forced_Logoff" type="Orange.Base.Engine.Action.ForcedLogoffAction, Orange.Base.Engine, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" roles="*" permissions="*" />
    <action name="CashCharger" type="Orange.Base.Engine.Action.CashChargerAction, Orange.Base.Engine, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" roles="*" permissions="*" />
    <action name="ADG" type="Orange.Base.Engine.Action.ADGAction, Orange.Base.Engine, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" roles="*" permissions="*" />
    <action name="CardService" type="Orange.Base.Engine.Action.CardServiceAction, Orange.Base.Engine, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" roles="*" permissions="*" />
    <action name="CancelCardService" type="Orange.Base.Engine.Action.CardServiceCancelAction, Orange.Base.Engine, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" roles="Supervisor" permissions="*" />
    <!--<action name="CardServicePayment" type="Orange.Base.Engine.Action.CardServiceAction, Orange.Base.Engine, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" roles="*" permissions="*">
      <navigate tasktype="AutoCLOSE"/>
      <postnavigate>
        <state variable="StateDocument" value="Empty"/>
      </postnavigate>
      <forward ucname="Document" viewname="frmDocument"/>
      <postforward>
        <state variable="StateDocumentType" value="Item"/>
        <state variable="StateItemDocument" value="Detail"/>
        <state variable="StateDeleteDetail" value="None"/>
        <state variable="StateDeletePayment" value="None"/>
      </postforward>
    </action>-->
    <action name="SmartBipService" type="Orange.Base.Engine.Action.SmartBipServiceAction, Orange.Base.Engine, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" roles="*" permissions="*" />
    <action name="EFT" type="Orange.Base.Engine.Action.EFTAction, Orange.Base.Engine, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" roles="*" permissions="*" />
    <action name="EFTConfirm" type="Orange.Base.Engine.Action.EFTConfirmAction, Orange.Base.Engine, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" roles="*" permissions="*" />
    <action name="GenericConfirm" type="Orange.Base.Engine.Action.GenericConfirmAction, Orange.Base.Engine, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" roles="*" permissions="*" />
    <action name="EFTAbort" type="Orange.Base.Engine.Action.EFTAbortAction, Orange.Base.Engine, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" roles="*" permissions="*" />
    <action name="DocumentSuspendConfirm" type="Orange.Base.Engine.Action.DocumentSuspendConfirmAction, Orange.Base.Engine, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" roles="POSOperator" permissions="*">
      <properties>
        <property>
          <name>DeleteSuspendDocumentOnRecover</name>
          <value>#{DeleteSuspendDocumentOnRecover}</value>
        </property>
      </properties>
    </action>
    <action name="DocumentSuspendAbort" type="Orange.Base.Engine.Action.DocumentSuspendAbortAction, Orange.Base.Engine, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" roles="*" permissions="*" />
    <action name="DocumentSuspendDeleteConfirm" type="Orange.Base.Engine.Action.DocumentSuspendDeleteConfirmAction, Orange.Base.Engine, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" roles="*" permissions="DeleteSuspended" />
    <action name="DocumentSuspendDeleteAbort" type="Orange.Base.Engine.Action.DocumentSuspendDeleteAbortAction, Orange.Base.Engine, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" roles="*" permissions="*" />
    <action name="DocumentType" type="Orange.Base.Engine.Action.DocumentTypeAction, Orange.Base.Engine, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" roles="POSOperator" permissions="*" />
    <action name="Counter" type="Orange.Base.Engine.Action.CounterAction, Orange.Base.Engine, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" roles="*" permissions="*" />
    <action name="CounterConfirm" type="Orange.Base.Engine.Action.CounterConfirmAction, Orange.Base.Engine, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" roles="*" permissions="*" />
    <action name="CounterAbort" type="Orange.Base.Engine.Action.CounterAbortAction, Orange.Base.Engine, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" roles="*" permissions="*" />
    <action name="FiscalPrinter" type="Orange.Base.Engine.Action.FiscalPrinterAction, Orange.Base.Engine, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" roles="*" permissions="*">
      <exceptions xmlns="">
        <exception>
          <type>Orange.Core.Device.Output.PrinterException, Orange.Core</type>
          <action-name>WaitYesNoHandler</action-name>
          <error-code>00001</error-code>
        </exception>
      </exceptions>
    </action>
    <!--<action name="SSCOAction" type="Orange.Base.Engine.Action.SSCOAction, Orange.Base.Engine, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" roles="*" permissions="*">     
    </action>-->
    <!--<action name="TPIScanAction" type="Orange.Base.Engine.Action.TPIScanAction, Orange.Base.Engine, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" roles="*" permissions="*">
    </action>
    <action name="ItemSSCO" description="Carica informazioni item per SSCO" type="Orange.Base.Engine.Action.ItemSSCOAction, Orange.Base.Engine, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" roles="POSOperator" permissions="*">
    </action>
    <action name="TpiScanControl" type="Orange.Base.Engine.Action.TPIScanControlAction, Orange.Base.Engine, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" roles="*" permissions="*"/>
    -->
    <action name="BuonoPastoElettronico" type="Orange.Base.Engine.Action.BPEAction, Orange.Base.Engine, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" roles="*" permissions="*">
      <properties>
        <property>
          <name>ViewDelayTime</name>
          <value>1500</value>
        </property>
      </properties>
    </action>
    <action name="Document_Park" type="Orange.Base.Engine.Action.DocumentParkAction, Orange.Base.Engine, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" roles="*" permissions="*">
      <properties>
        <property>
          <name>DocumentCodeParser</name>
          <value>DocumentCodeParser</value>
        </property>
        <property>
          <name>ParkRange</name>
          <value>#{ParkRange}</value>
        </property>
      </properties>
      <exceptions xmlns="">
        <exception>
          <type>Orange.Core.Device.Output.PrinterException, Orange.Core</type>
          <action-name>ShowTicketNumberPrinterExceptionHandler</action-name>
          <error-code>00001</error-code>
        </exception>
      </exceptions>
      <forward tasktype="AutoCLOSE" />
    </action>
    <action name="WorkingDocument_Recall" type="Orange.Base.Engine.Action.WorkingDocumentRecallAction, Orange.Base.Engine, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" roles="*" permissions="SuspendRecall">
      <properties>
        <property>
          <name>DocumentCodeParser</name>
          <value>DocumentCodeParser</value>
        </property>
        <property>
          <name>ParkRange</name>
          <value>#{ParkRange}</value>
        </property>
      </properties>
      <forward ucname="Document" viewname="frmDocument" />
    </action>
    <action name="Pipe" type="Orange.Base.Engine.Action.PipeAction, Orange.Base.Engine, Version = 1.0.0.0, Culture = neutral, PublicKeyToken = null" roles="*" permissions="*" />
    <action name="AIC" type="Orange.Base.Engine.Action.AICAction, Orange.Base.Engine, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" roles="*" permissions="Note">
      <navigate ucname="Document" viewname="frmDocument" />
      <postnavigate>
        <state variable="StateDocumentType" value="Item" />
        <state variable="StateItemDocument" value="Detail" />
      </postnavigate>
      <postforward>
        <state variable="StateDeleteDetail" value="None" />
      </postforward>
    </action>
    <action name="Restart_Device" type="Orange.Base.Engine.Action.RestartDeviceAction, Orange.Base.Engine, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" roles="*" permissions="*" />
    <action name="Omega_Scale" description="Aggiungi dettaglio Omega Scale" type="Orange.Base.Engine.Action.OmegaScaleAction, Orange.Base.Engine, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" roles="POSOperator" permissions="*">
      <properties>
        <property>
          <name>DefaultScaleTare</name>
          <value>#{DefaultScaleTare}</value>
        </property>
        <property>
          <name>DepartmentItemNotRecognized</name>
          <value>#{DepartmentItemNotRecognized}</value>
        </property>
        <property>
          <name>TrimLeadingZeroCode</name>
          <value>true</value>
        </property>
      </properties>
      <navigate ucname="Document" viewname="frmDocument" />
      <postnavigate>
        <state variable="StateDocumentType" value="Item" />
        <state variable="StateItemDocument" value="Detail" />
      </postnavigate>
      <postforward>
        <state variable="StateDeleteDetail" value="None" />
      </postforward>
    </action>
    <action name="Customer_AcceptPinCode" type="Orange.Base.Engine.Action.CustomerAcceptPinCodeAction, Orange.Base.Engine, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" roles="*" permissions="*" />
    <action name="ExtraCard" type="Orange.Base.Engine.Action.SimpleExtraCardAction, Orange.Base.Engine, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" roles="*" permissions="*" />
    <action name="Delivery" type="Orange.Base.Engine.Action.DeliveryOrderAction, Orange.Base.Engine, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" roles="*" permissions="*">
      <navigate ucname="Document" viewname="frmDocument" />
      <postnavigate>
        <state variable="StateDocumentType" value="Item" />
        <state variable="StateItemDocument" value="Detail" />
      </postnavigate>
      <postforward>
        <state variable="StateDeleteDetail" value="None" />
      </postforward>
    </action>
    <action name="TicketMeal" type="Orange.Base.Engine.Action.TicketMealAction, Orange.Base.Engine, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" roles="*" permissions="*">
      <properties>
        <property>
          <name>TicketMealServiceType</name>
          <value>#{TicketMealServiceType}</value>
        </property>
      </properties>
    </action>
    <action name="Run" type="Orange.Base.Engine.Action.RunAction, Orange.Base.Engine, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" roles="*" permissions="*" />
    <action name="ForceUpdate" type="Orange.Base.Engine.Action.ForceUpdateAction, Orange.Base.Engine, Version = 1.0.0.0, Culture = neutral, PublicKeyToken = null" roles="*" permissions="*" />
    <action name="DocumentRTRefund" type="Orange.Base.Engine.Action.DocumentRTRefundAction, Orange.Base.Engine, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" roles="*" permissions="*" />
    <action name="PaymentDocumentRTRefund" type="Orange.Base.Engine.Action.DocumentRTRefundAction, Orange.Base.Engine, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" roles="*" permissions="*">
      <properties>
        <property>
          <name>ViewDelayTime</name>
          <value>1500</value>
        </property>
      </properties>
      <forward ucname="Document" viewname="frmDocumentPayments" />
      <postforward>
        <state variable="StateDocumentType" value="Item" />
        <state variable="StateItemDocument" value="Payment" />
      </postforward>
    </action>
  </actions>
  <commands xmlns="">
    <command name="cashcharger" action-name="CashCharger" action-parameter="" interpreter-state="Normal">
      <validation-pattern><![CDATA[^([0-9]{1}\[opencashcassette\]|[0-9]{1}\[notetransfer\]|\[amountdue\]\w*|\[amountduedeposit\]\w*|\[amountduedrawing\]\w*|\[change\]\w*|\[regret\]\w*|\[regretall\]\w*|\[reset\]\w*|\d*\[payment\]\w*|[0-9]{1}\[unlock\]\w*|\[status\]\w*|\[reboot\]\w*|\[opencover\]\w*|\[cashin\]\w*|\[resetcoins\]\w*)(\[cashcharger\])$]]></validation-pattern>
      <preconditions>
        <precondition>
          <state variable="StateUser" value="Declared"></state>
        </precondition>
        <precondition>
          <state variable="StateDocumentType" value="Item"></state>
        </precondition>
      </preconditions>
    </command>
    <command name="cashcharger" action-name="CashCharger" action-parameter="" interpreter-state="Normal">
      <validation-pattern><![CDATA[^([0-9]{1}\[opencashcassette\]|[0-9]{1}\[notetransfer\]|\[amountdue\]\w*|\[amountduedeposit\]\w*|\[amountduedrawing\]\w*|\[change\]\w*|\[regret\]\w*|\[regretall\]\w*|\[reset\]\w*|((\d*\[X\])|(\d*\[payment\]))\w*|[0-9]{1}\[unlock\]\w*|\[status\]\w*|\[reboot\]\w*|\[startreplenishment\]\w*|\[endreplenishment\]\w*|\[opencover\]\w*|\[cashin\]\w*|\[resetcoins\]\w*)(\[cashcharger\])$]]></validation-pattern>
      <preconditions>
        <precondition>
          <state variable="StateUser" value="Declared"></state>
        </precondition>
        <precondition>
          <state variable="StateDocumentType" value="Credit"></state>
          <state variable="StateDocumentType" value="Money"></state>
        </precondition>
      </preconditions>
    </command>
    <command name="plu, enter" action-name="DatabarItem" action-parameter="" interpreter-state="Normal">
      <validation-pattern><![CDATA[^(((\d+[,.]?\d*)?\[tare\])|(\w+\[vat\])|(\d+[,.]?\d*\[X\])|(\d+[,.]?\d*\[price\])|(.*\[description\])|(.*\[serialbatch\]))*((RX|R4)\d{16})+((\w)*|(\w*\<GS\>))*(\[plu\]|\[enter\])$]]></validation-pattern>
      <preconditions>
        <precondition>
          <state variable="StateUser" value="Declared"></state>
        </precondition>
        <!--<precondition>
          <state variable="StateSalesman" value="Declared"></state>
        </precondition>-->
        <precondition>
          <state variable="StateDocumentType" value="Item"></state>
        </precondition>
        <precondition>
          <state variable="StateDocumentDetail" value="Append"></state>
        </precondition>
        <precondition>
          <state variable="StateDocumentPayment" value="Append"></state>
        </precondition>
      </preconditions>
    </command>
    <command name="adg, enter" action-name="ADG" action-parameter="" interpreter-state="Normal">
      <validation-pattern><![CDATA[^([ADG]|[ADGG])\w{13,}(\[adg\]|\[enter\])$]]></validation-pattern>
      <preconditions>
        <precondition>
          <state variable="StateUser" value="Declared"></state>
        </precondition>
        <precondition>
          <state variable="StateDocumentType" value="Item"></state>
        </precondition>
        <precondition>
          <state variable="StateDocumentDetail" value="Append"></state>
        </precondition>
        <precondition>
          <state variable="StateDocumentPayment" value="Append"></state>
        </precondition>
      </preconditions>
    </command>
    <command name="enter" action-name="CardService" action-parameter="" interpreter-state="Normal">
      <validation-pattern><![CDATA[^(\[giftcardemvquery\]|(\d*\[giftcardemvservice\])|\[giftcardservice\]|(\d*\[price\])|())(01\d{14}21\w{19,}(\[enter\]))$]]></validation-pattern>
      <!--<validation-pattern><![CDATA[^(01\d{14}21\d{20}(\[enter\]))$]]></validation-pattern>-->
      <!--<validation-pattern><![CDATA[^(\[giftcardservice\]|())(01\d{14}21\d{20}(\[enter\]))$]]></validation-pattern>-->
      <!--<validation-pattern><![CDATA[^(\[giftcardservice\]|(\d*\[X\])|())(01\d{14}21\d{20}(\[enter\]))$]]></validation-pattern>-->
      <preconditions>
        <precondition>
          <state variable="StateUser" value="Declared"></state>
        </precondition>
        <precondition>
          <state variable="StateDocumentType" value="Item"></state>
        </precondition>
        <precondition>
          <state variable="StateDocumentDetail" value="Append"></state>
        </precondition>
        <precondition>
          <state variable="StateDocumentPayment" value="Append"></state>
        </precondition>
      </preconditions>
    </command>
    <command name="enter" action-name="CancelCardService" action-parameter="" interpreter-state="Normal">
      <validation-pattern><![CDATA[^(\d*\[giftcardpayamount\])(\d*\[giftcardemvcancel\])(01\d{14}21\w{19,}(\[enter\]))$]]></validation-pattern>
      <preconditions>
        <precondition>
          <state variable="StateUser" value="Declared"></state>
        </precondition>
        <precondition>
          <state variable="StateDocumentType" value="Item"></state>
        </precondition>
      </preconditions>
    </command>
    <!--<command name="enter" action-name="CardServicePayment" action-parameter="" interpreter-state="Normal">
      <validation-pattern><![CDATA[^(\[giftcardservice\])(01\d{14}21\d{20}(\[enter\]))$]]></validation-pattern>
      <preconditions>
        <precondition>
          <state variable="StateUser" value="Declared"></state>
        </precondition>
        <precondition>
          <state variable="StateDocumentType" value="Item"></state>
        </precondition>
        <precondition>
          <state variable="StateDocumentDetail" value="Append"></state>
        </precondition>
        <precondition>
          <state variable="StateDocumentPayment" value="Append"></state>
        </precondition>
      </preconditions>
    </command>-->
    <command name="smartbipservice" action-name="SmartBipService" action-parameter="" interpreter-state="Normal">
      <validation-pattern><![CDATA[^(\[control\]|())(\[smartbipservice\])$]]></validation-pattern>
      <preconditions>
        <precondition>
          <state variable="StateUser" value="Declared"></state>
        </precondition>
        <precondition>
          <state variable="StateDocumentType" value="Item"></state>
        </precondition>
        <precondition>
          <state variable="StateDocumentDetail" value="Append"></state>
        </precondition>
        <precondition>
          <state variable="StateDocumentPayment" value="Append"></state>
        </precondition>
      </preconditions>
    </command>
    <command name="ticketmeal_emv, enter" action-name="TicketMeal" action-parameter="" interpreter-state="Normal">
      <validation-pattern><![CDATA[^(\[ticketmealemv\]\w{14,}\[enter\])$]]></validation-pattern>
      <preconditions>
        <precondition>
          <state variable="StateUser" value="Declared"></state>
        </precondition>
        <precondition>
          <state variable="StateDocument" value="InProgress"></state>
        </precondition>
        <precondition>
          <state variable="StateDocumentType" value="Item"></state>
        </precondition>
        <precondition>
          <state variable="StateDocumentDetail" value="Append"></state>
        </precondition>
        <precondition>
          <state variable="StateDocumentPayment" value="Append"></state>
        </precondition>
      </preconditions>
    </command>
    <command name="ticketmeal, enter" action-name="TicketMeal" action-parameter="" interpreter-state="Normal">
      <validation-pattern><![CDATA[^((\w{17,}(\[ticketmeal\]|\[enter\]))|(\[connectd\]\w{14,}\[enter\]))$]]></validation-pattern>
      <preconditions>
        <precondition>
          <state variable="StateUser" value="Declared"></state>
        </precondition>
        <precondition>
          <state variable="StateDocument" value="InProgress"></state>
        </precondition>
        <precondition>
          <state variable="StateDocumentType" value="Item"></state>
        </precondition>
        <precondition>
          <state variable="StateDocumentDetail" value="Append"></state>
        </precondition>
        <precondition>
          <state variable="StateDocumentPayment" value="Append"></state>
        </precondition>
      </preconditions>
    </command>
    <command name="frmlogin" action-name="frmLoginAction" action-parameter="" interpreter-state="Normal">
      <validation-pattern><![CDATA[^((false|true)(\[disableinputdevices\]))*((false|true)(\[showinitialmessage\]))*(\[frmlogin\])$]]></validation-pattern>
      <preconditions>
        <precondition>
          <state variable="StateDocument" value="Empty"></state>
        </precondition>
      </preconditions>
    </command>
    <command name="frmlog" action-name="frmLogAction" action-parameter="" interpreter-state="Normal">
      <validation-pattern><![CDATA[^((false|true)(\[disableinputdevices\]))*((false|true)(\[showinitialmessage\]))*(\[frmlog\])$]]></validation-pattern>
      <preconditions>
        <precondition>
          <state variable="StateUser" value="Declared"></state>
        </precondition>
        <precondition>
          <state variable="StateDocument" value="Empty"></state>
        </precondition>
      </preconditions>
    </command>
    <command name="frmreport" action-name="frmReportAction" action-parameter="" interpreter-state="Normal">
      <validation-pattern><![CDATA[^((false|true)(\[disableinputdevices\]))*((false|true)(\[showinitialmessage\]))*(\[frmreport\])$]]></validation-pattern>
      <preconditions>
        <precondition>
          <state variable="StateUser" value="Declared"></state>
        </precondition>
        <precondition>
          <state variable="StateDocument" value="Empty"></state>
        </precondition>
      </preconditions>
    </command>
    <command name="frmreporttotal" action-name="frmReportTotalAction" action-parameter="" interpreter-state="Normal">
      <validation-pattern><![CDATA[^((false|true)(\[disableinputdevices\]))*((false|true)(\[showinitialmessage\]))*(\[frmreporttotal\])$]]></validation-pattern>
      <preconditions>
        <precondition>
          <state variable="StateUser" value="Declared"></state>
        </precondition>
      </preconditions>
    </command>
    <command name="frmcustomerfulltext" action-name="frmCustomerFullTextAction" action-parameter="" interpreter-state="Normal">
      <validation-pattern><![CDATA[^((false|true)(\[disableinputdevices\]))*((false|true)(\[showinitialmessage\]))*(\[frmcustomerfulltext\])$]]></validation-pattern>
      <preconditions>
        <precondition>
          <state variable="StateUser" value="Declared"></state>
        </precondition>
      </preconditions>
    </command>
    <command name="frmitemfulltext" action-name="frmItemFullTextAction" action-parameter="" interpreter-state="Normal">
      <validation-pattern><![CDATA[^((false|true)(\[disableinputdevices\]))*((false|true)(\[showinitialmessage\]))*(\[frmitemfulltext\])$]]></validation-pattern>
      <preconditions>
        <precondition>
          <state variable="StateUser" value="Declared"></state>
        </precondition>
      </preconditions>
    </command>
    <command name="frmdocument" action-name="frmDocumentAction" action-parameter="" interpreter-state="Normal">
      <validation-pattern><![CDATA[^((false|true)(\[disableinputdevices\]))*((false|true)(\[showinitialmessage\]))*(\[frmdocument\])$]]></validation-pattern>
      <preconditions>
        <precondition>
          <state variable="StateUser" value="Declared"></state>
        </precondition>
        <precondition>
          <state variable="StateDocument" value="Empty"></state>
          <state variable="StateDocumentType" value="Item"></state>
        </precondition>
      </preconditions>
    </command>
    <command name="frmdocumentpayments" action-name="frmDocumentPaymentsAction" action-parameter="" interpreter-state="Normal">
      <validation-pattern><![CDATA[^((false|true)(\[disableinputdevices\]))*((false|true)(\[showinitialmessage\]))*(\[frmdocumentpayments\])$]]></validation-pattern>
      <preconditions>
        <precondition>
          <state variable="StateUser" value="Declared"></state>
        </precondition>
        <precondition>
          <state variable="StateDocument" value="Empty"></state>
          <state variable="StateDocumentType" value="Item"></state>
        </precondition>
      </preconditions>
    </command>
    <command name="frmdocumentjournal" action-name="frmDocumentJournalAction" action-parameter="" interpreter-state="Normal">
      <validation-pattern><![CDATA[^((false|true)(\[disableinputdevices\]))*((false|true)(\[showinitialmessage\]))*(\[frmdocumentjournal\])$]]></validation-pattern>
      <preconditions>
        <precondition>
          <state variable="StateUser" value="Declared"></state>
        </precondition>
      </preconditions>
    </command>
    <command name="frmdocumentsuspend" action-name="frmDocumentSuspendAction" action-parameter="" interpreter-state="Normal">
      <validation-pattern><![CDATA[^((false|true)(\[disableinputdevices\]))*((false|true)(\[showinitialmessage\]))*(\[frmdocumentsuspend\])$]]></validation-pattern>
      <preconditions>
        <precondition>
          <state variable="StateUser" value="Declared"></state>
        </precondition>
      </preconditions>
    </command>
    <command name="frmcashdrawercentral" action-name="frmCashDrawerCentralAction" action-parameter="" interpreter-state="Normal">
      <validation-pattern><![CDATA[^((false|true)(\[disableinputdevices\]))*((false|true)(\[showinitialmessage\]))*(\[frmcashdrawercentral\])$]]></validation-pattern>
      <preconditions>
        <precondition>
          <state variable="StateUser" value="Declared"></state>
        </precondition>
        <precondition>
          <state variable="StateDocument" value="Empty"></state>
          <state variable="StateDocumentType" value="Money"></state>
          <state variable="StateDocumentType" value="Credit"></state>
        </precondition>
      </preconditions>
    </command>
    <command name="frmcashdrawercustomer" action-name="frmCashDrawerCustomerAction" action-parameter="" interpreter-state="Normal">
      <validation-pattern><![CDATA[^((false|true)(\[disableinputdevices\]))*((false|true)(\[showinitialmessage\]))*(\[frmcashdrawercustomer\])$]]></validation-pattern>
      <preconditions>
        <precondition>
          <state variable="StateUser" value="Declared"></state>
        </precondition>
        <precondition>
          <state variable="StateDocument" value="Empty"></state>
          <state variable="StateDocumentType" value="Money"></state>
          <state variable="StateDocumentType" value="Credit"></state>
        </precondition>
      </preconditions>
    </command>
    <command name="frmguide" action-name="frmGuideAction" action-parameter="" interpreter-state="Normal">
      <validation-pattern><![CDATA[^((false|true)(\[disableinputdevices\]))*((false|true)(\[showinitialmessage\]))*(\[frmguide\])$]]></validation-pattern>
      <preconditions>
        <precondition>
          <state variable="StateUser" value="Declared"></state>
        </precondition>
      </preconditions>
    </command>
    <command name="frmguide" action-name="frmDocumentAction" action-parameter="" interpreter-state="Normal">
      <validation-pattern><![CDATA[^((false|true)(\[disableinputdevices\]))*((false|true)(\[showinitialmessage\]))*(\[frmguide\])$]]></validation-pattern>
      <preconditions>
        <precondition>
          <state variable="StateUser" value="Declared"></state>
        </precondition>
        <precondition>
          <state variable="StateDocument" value="Empty"></state>
        </precondition>
        <precondition>
          <state variable="StateDocumentType" value="Credit"></state>
        </precondition>
      </preconditions>
    </command>
    <command name="frmguide" action-name="frmCashDrawerCentralAction" action-parameter="" interpreter-state="Normal">
      <validation-pattern><![CDATA[^((false|true)\[disableinputdevices\])?((false|true)\[showinitialmessage\])?(\[frmguide\])$]]></validation-pattern>
      <preconditions>
        <precondition>
          <state variable="StateUser" value="Declared"></state>
        </precondition>
        <precondition>
          <state variable="StateDocument" value="Empty"></state>
        </precondition>
        <precondition>
          <state variable="StateDocumentType" value="Item"></state>
        </precondition>
      </preconditions>
    </command>
    <command name="recall, suspend" action-name="Document_Recall" action-parameter="" interpreter-state="Normal">
      <validation-pattern><![CDATA[^(S\[suspendType\])?([ \w-]+)((\[recall\])|(\[suspend\]))$]]></validation-pattern>
      <preconditions>
        <precondition>
          <state variable="StateUser" value="Declared"></state>
        </precondition>
        <precondition>
          <state variable="StateDocument" value="Empty"></state>
        </precondition>
      </preconditions>
    </command>
    <command name="recall, suspend" action-name="Document_Recall_Error" action-parameter="" interpreter-state="Normal">
      <validation-pattern><![CDATA[^(E\[suspendType\])([ \w-]+)((\[recall\])|(\[suspend\]))$]]></validation-pattern>
      <preconditions>
        <precondition>
          <state variable="StateUser" value="Declared"></state>
        </precondition>
        <precondition>
          <state variable="StateDocument" value="Empty"></state>
        </precondition>
      </preconditions>
    </command>
    <command name="park" action-name="Document_Park" action-parameter="" interpreter-state="Normal">
      <validation-pattern><![CDATA[^(\[park\])$]]></validation-pattern>
      <preconditions>
        <precondition>
          <state variable="StateUser" value="Declared"></state>
        </precondition>
        <precondition>
          <state variable="StateDocument" value="InProgress"></state>
        </precondition>
      </preconditions>
    </command>
    <command name="suspend" action-name="Document_Suspend" action-parameter="" interpreter-state="WaitSuspendConfirm">
      <validation-pattern><![CDATA[^(\[suspend\])$]]></validation-pattern>
      <preconditions>
        <precondition>
          <state variable="StateUser" value="Declared"></state>
        </precondition>
        <precondition>
          <state variable="StateDocument" value="InProgress"></state>
        </precondition>
      </preconditions>
    </command>
    <command name="documentsuspenddelete" action-name="Document_Suspend_Delete" action-parameter="" interpreter-state="WaitSuspendDeleteConfirm">
      <validation-pattern><![CDATA[^([ \w-]+)(\[documentsuspenddelete\])$]]></validation-pattern>
      <preconditions>
        <precondition>
          <state variable="StateUser" value="Declared"></state>
        </precondition>
      </preconditions>
    </command>
    <command name="start" action-name="StartApplicationTaskAction" action-parameter="" interpreter-state="Normal">
      <validation-pattern><![CDATA[^(\[start\])$]]></validation-pattern>
    </command>
    <command name="recovery" action-name="RecoveryApplicationTaskAction" action-parameter="" interpreter-state="">
      <validation-pattern><![CDATA[^(\[recovery\])$]]></validation-pattern>
    </command>
    <command name="stop" action-name="StopApplicationTaskConfirmAction" action-parameter="" interpreter-state="Normal">
      <validation-pattern><![CDATA[^((false|true)\[closedrawer\])?(\[stop\])$]]></validation-pattern>
      <preconditions>
        <precondition>
          <state variable="StateUser" value="Declared"></state>
        </precondition>
        <precondition>
          <state variable="StateDocument" value="Empty"></state>
        </precondition>
      </preconditions>
    </command>
    <command name="stop" action-name="StopApplicationTaskAction" action-parameter="" interpreter-state="WaitStopApplicationTaskConfirm">
      <validation-pattern><![CDATA[^((false|true)\[closedrawer\])?(\[stop\])$]]></validation-pattern>
      <preconditions>
        <precondition>
          <state variable="StateUser" value="Declared"></state>
        </precondition>
        <precondition>
          <state variable="StateDocument" value="Empty"></state>
        </precondition>
      </preconditions>
    </command>
    <command name="message" action-name="MessageAction" action-parameter="" interpreter-state="Normal">
      <validation-pattern><![CDATA[^.*(\[message\])$]]></validation-pattern>
      <preconditions>
        <precondition>
          <state variable="StateUser" value="Declared"></state>
        </precondition>
      </preconditions>
    </command>
    <command name="enter, plu" action-name="ScaleReceipt" action-parameter="" interpreter-state="Normal">
      <validation-pattern><![CDATA[#{ScaleReciptCodeRegex}(\[enter\]|\[plu\])$]]></validation-pattern>
      <preconditions>
        <precondition>
          <state variable="StateUser" value="Declared"></state>
        </precondition>
        <precondition>
          <state variable="StateDocumentType" value="Item"></state>
        </precondition>
        <precondition>
          <state variable="StateDocumentDetail" value="Append"></state>
        </precondition>
        <precondition>
          <state variable="StateDocumentPayment" value="Append"></state>
        </precondition>
      </preconditions>
    </command>
    <command name="enter, plu" action-name="SelfReceipt" action-parameter="" interpreter-state="Normal">
      <validation-pattern><![CDATA[#{SelfReciptCodeRegex}(\[enter\]|\[plu\])$]]></validation-pattern>
      <preconditions>
        <precondition>
          <state variable="StateUser" value="Declared"></state>
        </precondition>
        <precondition>
          <state variable="StateDocumentType" value="Item"></state>
        </precondition>
        <precondition>
          <state variable="StateDocumentDetail" value="Append"></state>
        </precondition>
        <precondition>
          <state variable="StateDocumentPayment" value="Append"></state>
        </precondition>
      </preconditions>
    </command>
    <command name="enter" action-name="User_AcceptBarCode" action-parameter="" interpreter-state="Normal">
      <validation-pattern><![CDATA[^OPER\d{12}(\[enter\])$]]></validation-pattern>
      <preconditions>
        <precondition>
          <state variable="StateUser" value="Declared"></state>
        </precondition>
      </preconditions>
    </command>
    <command name="enter" action-name="User_AcceptBarCode_2" action-parameter="" interpreter-state="Normal">
      <validation-pattern><![CDATA[^OPER\d{12}(\[enter\])$]]></validation-pattern>
      <preconditions>
        <precondition>
          <state variable="StateUser" value="Unknown"></state>
          <state variable="StateUser" value="Suspended"></state>
        </precondition>
      </preconditions>
    </command>
    <command name="enter" action-name="Comm_AcceptBarCode" action-parameter="" interpreter-state="Normal">
      <validation-pattern><![CDATA[^COMM\d{3}(\[enter\])$]]></validation-pattern>
      <preconditions>
        <precondition>
          <state variable="StateUser" value="Declared"></state>
        </precondition>
        <precondition>
          <state variable="StateDocumentType" value="Item"></state>
        </precondition>
      </preconditions>
    </command>
    <command name="customer, enter" action-name="Customer_Code" action-parameter="" interpreter-state="Normal">
      <validation-pattern><![CDATA[^04{1}[0-9]{1}\d{10}(\[customer\]|\[enter\])$]]></validation-pattern>
      <preconditions>
        <precondition>
          <state variable="StateUser" value="Declared"></state>
        </precondition>
        <precondition>
          <!--<state variable="StateDocumentType" value="Credit"></state>-->
          <state variable="StateDocumentType" value="Item"></state>
        </precondition>
      </preconditions>
    </command>
    <command name="customer, enter" action-name="Customer_CodeDrawer" action-parameter="" interpreter-state="Normal">
      <validation-pattern><![CDATA[^04{1}[0-9]{1}\d{10}(\[customer\]|\[enter\])$]]></validation-pattern>
      <preconditions>
        <precondition>
          <state variable="StateUser" value="Declared"></state>
        </precondition>
        <precondition>
          <state variable="StateDocumentType" value="Credit"></state>
        </precondition>
      </preconditions>
    </command>
    <command name="plu, enter" action-name="Item_Search" action-parameter="" interpreter-state="Normal">
      <validation-pattern><![CDATA[^(\[itemdocumentsearch\])\w+(\[plu\]|\[enter\])$]]></validation-pattern>
      <preconditions>
        <precondition>
          <state variable="StateUser" value="Declared"></state>
        </precondition>
        <precondition>
          <state variable="StateDocumentType" value="Item"></state>
        </precondition>
        <precondition>
          <state variable="StateDocumentDetail" value="Append"></state>
        </precondition>
        <precondition>
          <state variable="StateDocumentPayment" value="Append"></state>
        </precondition>
      </preconditions>
    </command>
    <command name="plu, enter" action-name="Document_Recall" action-parameter="" interpreter-state="Normal">
      <validation-pattern><![CDATA[^(((S|E)[ \w]{13}.?|[ \w]{17}))(\[plu\]|\[enter\])$]]></validation-pattern>
      <preconditions>
        <precondition>
          <state variable="StateUser" value="Declared"></state>
        </precondition>
        <precondition>
          <state variable="StateDocument" value="Empty"></state>
        </precondition>
      </preconditions>
    </command>
    <command name="plu, enter" action-name="WorkingDocument_Recall" action-parameter="" interpreter-state="Normal">
      <validation-pattern><![CDATA[^((W)[\w]{13})(\[plu\]|\[enter\])$]]></validation-pattern>
      <preconditions>
        <precondition>
          <state variable="StateUser" value="Declared"></state>
        </precondition>
        <precondition>
          <state variable="StateDocument" value="Empty"></state>
        </precondition>
      </preconditions>
    </command>
    <command name="plu, enter" action-name="Foreign_Document" action-parameter="" interpreter-state="Normal">
      <validation-pattern><![CDATA[#{ForeignDocumentCodeRegex}(\[plu\]|\[enter\])$]]></validation-pattern>
      <preconditions>
        <precondition>
          <state variable="StateUser" value="Declared"></state>
        </precondition>
      </preconditions>
    </command>
    <command name="plu, enter" action-name="Document_Search" action-parameter="" interpreter-state="Normal">
      <validation-pattern><![CDATA[^(([A-Z][ \w]{13}.?)|((\d{4})\s(\d{4})\s(\d{8})\s(\w+)))(\[plu\]|\[enter\])$]]></validation-pattern>
      <preconditions>
        <precondition>
          <state variable="StateUser" value="Declared"></state>
        </precondition>
      </preconditions>
    </command>
    <!--<command name="plu, enter" action-name="Item_Booking" action-parameter="" interpreter-state="Normal">
      <validation-pattern><![CDATA[^(\d*[,.]?\d*\[X\])*(99{1}(0|1|2)\d{10})(\[plu\]|\[enter\])$]]></validation-pattern>
      <preconditions>
        <precondition>
          <state variable="StateUser" value="Declared"></state>
        </precondition>
        <precondition>
          <state variable="StateDocumentType" value="Item"></state>
        </precondition>
        <precondition>
          <state variable="StateDocumentDetail" value="Append"></state>
        </precondition>
        <precondition>
          <state variable="StateDocumentPayment" value="Append"></state>
        </precondition>
      </preconditions>
    </command>-->
    <command name="plu, enter" action-name="Item_Booking" action-parameter="" interpreter-state="Normal">
      <validation-pattern><![CDATA[^(\d*[,.]?\d*\[X\])*(\[booking\])\w+(\[plu\]|\[enter\])$]]></validation-pattern>
      <preconditions>
        <precondition>
          <state variable="StateUser" value="Declared"></state>
        </precondition>
        <precondition>
          <state variable="StateDocumentType" value="Item"></state>
        </precondition>
        <precondition>
          <state variable="StateDocumentDetail" value="Append"></state>
        </precondition>
        <precondition>
          <state variable="StateDocumentPayment" value="Append"></state>
        </precondition>
      </preconditions>
    </command>
    <command name="plu, enter" action-name="Item_Coupon" action-parameter="" interpreter-state="Normal">
      <validation-pattern><![CDATA[^(99{1}((6|7|8)(\d{10}|\d{15})|(90|91|92)(\d{9}|\d{14})))(\[plu\]|\[enter\])$]]></validation-pattern>
      <preconditions>
        <precondition>
          <state variable="StateUser" value="Declared"></state>
        </precondition>
        <precondition>
          <state variable="StateDocumentType" value="Item"></state>
        </precondition>
        <precondition>
          <state variable="StateDocumentDetail" value="Append"></state>
        </precondition>
        <precondition>
          <state variable="StateDocumentPayment" value="Append"></state>
        </precondition>
      </preconditions>
    </command>
    <command name="fiscalCode, enter" action-name="Customer_FiscalCode" action-parameter="" interpreter-state="Normal">
      <validation-pattern><![CDATA[^[A-Z]{6}[A-Z0-9]{2}[A-Z][A-Z0-9]{2}[A-Z][A-Z0-9]{3}[A-Z](\[enter\])$]]></validation-pattern>
      <preconditions>
        <precondition>
          <state variable="StateUser" value="Declared"></state>
        </precondition>
        <precondition>
          <state variable="StateDocumentType" value="Item"></state>
        </precondition>
      </preconditions>
    </command>
    <command name="plu, enter" action-name="Item_RefundChange" action-parameter="" interpreter-state="Normal">
      <validation-pattern><![CDATA[^(\[refund\]|\[change\])((\d+[,.]?\d*\[rowamount\])|(\w+\[vat\])|(\d+[,.]?\d*\[X\])|(\d+[,.]?\d*\[price\])|(.*\[description\])|(.*\[serialbatch\]))*\w+(\[plu\]|\[enter\])$]]></validation-pattern>
      <preconditions>
        <precondition>
          <state variable="StateUser" value="Declared"></state>
        </precondition>
        <precondition>
          <state variable="StateDocumentType" value="Item"></state>
        </precondition>
        <precondition>
          <state variable="StateDocumentDetail" value="Append"></state>
        </precondition>
        <precondition>
          <state variable="StateDocumentPayment" value="Append"></state>
        </precondition>
      </preconditions>
    </command>
    <command name="plu, enter" action-name="Item_Code" action-parameter="" interpreter-state="Normal">
      <validation-pattern><![CDATA[^(\d+\[phone\])?(\[shift\])?(((\d+[,.]?\d*)?\[tare\])|(\w+\[vat\])|(\d+[,.]?\d*\[X\])|(\d+[,.]?\d*\[price\])|(.*\[description\])|(.*\[serialbatch\]))*\w+(\[plu\]|\[enter\])$]]></validation-pattern>
      <preconditions>
        <precondition>
          <state variable="StateUser" value="Declared"></state>
        </precondition>
        <!--<precondition>
          <state variable="StateSalesman" value="Declared"></state>
        </precondition>-->
        <precondition>
          <state variable="StateDocumentType" value="Item"></state>
        </precondition>
        <precondition>
          <state variable="StateDocumentDetail" value="Append"></state>
        </precondition>
        <precondition>
          <state variable="StateDocumentPayment" value="Append"></state>
        </precondition>
      </preconditions>
    </command>
    <command name="plu, enter" action-name="Item_Price2" action-parameter="" interpreter-state="Normal">
      <validation-pattern><![CDATA[^\[price\]((\d+[,.]?\d*\[X\])|(.*\[serialbatch\]))*\w+(\[plu\]|\[enter\])$]]></validation-pattern>
      <preconditions>
        <precondition>
          <state variable="StateUser" value="Declared"></state>
        </precondition>
        <precondition>
          <state variable="StateDocumentType" value="Item"></state>
        </precondition>
        <precondition>
          <state variable="StateDocumentDetail" value="Append"></state>
        </precondition>
        <precondition>
          <state variable="StateDocumentPayment" value="Append"></state>
        </precondition>
      </preconditions>
    </command>
    <command name="plu, enter" action-name="Item_Confirm" action-parameter="" interpreter-state="Normal">
      <validation-pattern><![CDATA[^(\d+[,.]?\d*\[X\])*(\[plu\]|\[enter\])$]]></validation-pattern>
      <preconditions>
        <precondition>
          <state variable="StateUser" value="Declared"></state>
        </precondition>
        <precondition>
          <state variable="StateDocumentType" value="Item"></state>
        </precondition>
        <precondition>
          <state variable="StateItemDocument" value="Detail"></state>
        </precondition>
        <precondition>
          <state variable="StateDocumentDetail" value="Append"></state>
        </precondition>
      </preconditions>
    </command>
    <command name="plu, enter" action-name="Item_Change" action-parameter="" interpreter-state="WaitDetailChange">
      <validation-pattern><![CDATA[^((\w+\[vat\])|(\d+[,.]?\d*\[X\])|(\d+[,.]?\d*\[price\])|(.*\[description\])|(.*\[serialbatch\]))*(\[plu\]|\[enter\])$]]></validation-pattern>
      <preconditions>
        <precondition>
          <state variable="StateUser" value="Declared"></state>
        </precondition>
        <precondition>
          <state variable="StateDocumentType" value="Item"></state>
        </precondition>
        <precondition>
          <state variable="StateItemDocument" value="Detail"></state>
        </precondition>
        <precondition>
          <state variable="StateDocumentDetail" value="Modify"></state>
        </precondition>
      </preconditions>
    </command>
    <command name="plu, enter" action-name="Item_Void" action-parameter="" interpreter-state="Normal">
      <validation-pattern><![CDATA[^(\[cancel\]|\[void\])(\d+[,.]?\d*\[X\])*\w+(\[plu\]|\[enter\])$]]></validation-pattern>
      <preconditions>
        <precondition>
          <state variable="StateUser" value="Declared"></state>
        </precondition>
        <precondition>
          <state variable="StateDocument" value="InProgress"></state>
        </precondition>
        <precondition>
          <state variable="StateDocumentType" value="Item"></state>
        </precondition>
        <precondition>
          <state variable="StateItemDocument" value="Detail"></state>
        </precondition>
        <precondition>
          <state variable="StateDocumentDetail" value="Append"></state>
        </precondition>
      </preconditions>
    </command>
    <command name="coupon" action-name="Item_Coupon" action-parameter="" interpreter-state="Normal">
      <validation-pattern><![CDATA[^(\d{13}|\d{18})(\[coupon\])$]]></validation-pattern>
      <!--<validation-pattern><![CDATA[^(\d{8}|\d{13}|\d{18})(\[coupon\])$]]></validation-pattern>-->
      <preconditions>
        <precondition>
          <state variable="StateUser" value="Declared"></state>
        </precondition>
        <precondition>
          <state variable="StateDocumentType" value="Item"></state>
        </precondition>
        <precondition>
          <state variable="StateDocumentDetail" value="Append"></state>
        </precondition>
        <precondition>
          <state variable="StateDocumentPayment" value="Append"></state>
        </precondition>
      </preconditions>
    </command>
    <command name="clear" action-name="DocumentDetail_AbortChange" action-parameter="" interpreter-state="WaitDetailChange, Normal">
      <validation-pattern><![CDATA[^(\[clear\])$]]></validation-pattern>
      <preconditions>
        <precondition>
          <state variable="StateUser" value="Declared"></state>
        </precondition>
        <precondition>
          <state variable="StateDocument" value="InProgress"></state>
        </precondition>
        <precondition>
          <state variable="StateDocumentType" value="Item"></state>
        </precondition>
        <precondition>
          <state variable="StateItemDocument" value="Detail"></state>
        </precondition>
        <precondition>
          <state variable="StateDocumentDetail" value="Modify"></state>
        </precondition>
      </preconditions>
    </command>
    <command name="clear" action-name="DocumentPayment_AbortChange" action-parameter="" interpreter-state="WaitPaymentChange, Normal">
      <validation-pattern><![CDATA[^(\[clear\])$]]></validation-pattern>
      <preconditions>
        <precondition>
          <state variable="StateUser" value="Declared"></state>
        </precondition>
        <precondition>
          <state variable="StateDocument" value="InProgress"></state>
        </precondition>
        <precondition>
          <state variable="StateDocumentType" value="Item"></state>
        </precondition>
        <precondition>
          <state variable="StateItemDocument" value="Payment"></state>
        </precondition>
        <precondition>
          <state variable="StateDocumentPayment" value="Modify"></state>
        </precondition>
      </preconditions>
    </command>
    <command name="clear" action-name="DocumentPayment_AbortChange_DrawerCentral" action-parameter="" interpreter-state="WaitPaymentChange, Normal">
      <validation-pattern><![CDATA[^(\[clear\])$]]></validation-pattern>
      <preconditions>
        <precondition>
          <state variable="StateUser" value="Declared"></state>
        </precondition>
        <precondition>
          <state variable="StateDocument" value="InProgress"></state>
        </precondition>
        <precondition>
          <state variable="StateDocumentType" value="Money"></state>
        </precondition>
        <precondition>
          <state variable="StateDocumentPayment" value="Modify"></state>
        </precondition>
      </preconditions>
    </command>
    <command name="clear" action-name="DocumentPayment_AbortChange_DrawerCustomer" action-parameter="" interpreter-state="WaitPaymentChange, Normal">
      <validation-pattern><![CDATA[^(\[clear\])$]]></validation-pattern>
      <preconditions>
        <precondition>
          <state variable="StateUser" value="Declared"></state>
        </precondition>
        <precondition>
          <state variable="StateDocument" value="InProgress"></state>
        </precondition>
        <precondition>
          <state variable="StateDocumentType" value="Credit"></state>
        </precondition>
        <precondition>
          <state variable="StateDocumentPayment" value="Modify"></state>
        </precondition>
      </preconditions>
    </command>
    <command name="clear, enter, correction" action-name="DocumentClosingErrorDispenseRestRetry" action-parameter="" interpreter-state="WaitConfirmErrorMessage">
      <validation-pattern><![CDATA[^\[(clear|enter|correction)\]$]]></validation-pattern>
      <preconditions>
        <precondition>
          <state variable="StateDocument" value="ClosingErrorMissingDispenseRestRetry"></state>
        </precondition>
      </preconditions>
    </command>
    <command name="clear, enter, correction" action-name="DocumentClosingErrorMoneticaRetry" action-parameter="" interpreter-state="WaitConfirmErrorMessage">
      <validation-pattern><![CDATA[^\[(clear|enter|correction)\]$]]></validation-pattern>
      <preconditions>
        <precondition>
          <state variable="StateDocument" value="MoneticaOXRetry"></state>
        </precondition>
      </preconditions>
    </command>
    <command name="clear" action-name="Generic_AbortChange" action-parameter="" interpreter-state="WaitClientPassword, WaitConfirmErrorMessage, WaitUserName, WaitTrainerName, Normal">
      <validation-pattern><![CDATA[^(\[clear\])$]]></validation-pattern>
    </command>
    <command name="clear" action-name="Customer_AbortReplace" action-parameter="" interpreter-state="WaitCustomerReplace">
      <validation-pattern><![CDATA[^(\[clear\])$]]></validation-pattern>
    </command>
    <command name="clear" action-name="Customer_NotRemove" action-parameter="" interpreter-state="WaitCustomerRemove">
      <validation-pattern><![CDATA[^(\[clear\])$]]></validation-pattern>
    </command>
    <command name="clear" action-name="Tax_AbortRemove" action-parameter="" interpreter-state="WaitTaxRemove">
      <validation-pattern><![CDATA[^(\[clear\])$]]></validation-pattern>
    </command>
    <command name="clear" action-name="Tax_AbortReplace" action-parameter="" interpreter-state="WaitTaxReplace">
      <validation-pattern><![CDATA[^(\[clear\])$]]></validation-pattern>
    </command>
    <command name="clear" action-name="Tax_OnlyFollowingLine" action-parameter="" interpreter-state="WaitTaxApplicationMode">
      <validation-pattern><![CDATA[^(\[clear\])$]]></validation-pattern>
    </command>
    <command name="clear" action-name="PriceList_AbortRemove" action-parameter="" interpreter-state="WaitPricelistRemove">
      <validation-pattern><![CDATA[^(\[clear\])$]]></validation-pattern>
    </command>
    <command name="clear" action-name="PriceList_AbortReplace" action-parameter="" interpreter-state="WaitPricelistReplace">
      <validation-pattern><![CDATA[^(\[clear\])$]]></validation-pattern>
    </command>
    <command name="clear" action-name="PriceList_OnlyFollowingLine" action-parameter="" interpreter-state="WaitPriceListApplicationMode">
      <validation-pattern><![CDATA[^(\[clear\])$]]></validation-pattern>
    </command>
    <command name="clear" action-name="User_AbortPassword" action-parameter="" interpreter-state="WaitUserPassword">
      <validation-pattern><![CDATA[^(\[clear\])$]]></validation-pattern>
    </command>
    <command name="clear" action-name="Trainer_Abort" action-parameter="" interpreter-state="WaitTrainerPassword">
      <validation-pattern><![CDATA[^(\[clear\])$]]></validation-pattern>
    </command>
    <command name="clear" action-name="Salesman_AbortReplace" action-parameter="" interpreter-state="WaitSalesmanReplace">
      <validation-pattern><![CDATA[^(\[clear\])$]]></validation-pattern>
    </command>
    <command name="clear" action-name="Salesman_AbortRemove" action-parameter="" interpreter-state="WaitSalesmanRemove">
      <validation-pattern><![CDATA[^(\[clear\])$]]></validation-pattern>
    </command>
    <command name="clear" action-name="Customer_AbortReplaceFiscalCode" action-parameter="" interpreter-state="WaitFiscalcodeReplace">
      <validation-pattern><![CDATA[^(\[clear\])$]]></validation-pattern>
    </command>
    <command name="clear" action-name="Customer_AbortRemoveFiscalCode" action-parameter="" interpreter-state="WaitFiscalcodeRemove">
      <validation-pattern><![CDATA[^(\[clear\])$]]></validation-pattern>
    </command>
    <command name="clear" action-name="StopApplicationTaskAbortAction" action-parameter="" interpreter-state="WaitStopApplicationTaskConfirm">
      <validation-pattern><![CDATA[^(\[clear\])$]]></validation-pattern>
    </command>
    <command name="clear" action-name="Document_Abort_AbortAction" action-parameter="" interpreter-state="WaitDocumentAbortConfirm">
      <validation-pattern><![CDATA[^(\[clear\])$]]></validation-pattern>
    </command>
    <command name="discount, pricefordiscount" action-name="Adjustment_discount" action-parameter="" interpreter-state="Normal">
      <validation-pattern><![CDATA[^((\d+[,.]?\d*)|(\[%\]))*((\[discount\])|(\[pricefordiscount\]))$]]></validation-pattern>
      <!--<validation-pattern><![CDATA[^((\d+[,.]?\d*)|(\[%\]))*((\[nopromo])*(\[discount\])|(\[pricefordiscount\]))$]]></validation-pattern>-->
      <preconditions>
        <precondition>
          <state variable="StateUser" value="Declared"></state>
        </precondition>
        <precondition>
          <state variable="StateDocument" value="InProgress"></state>
        </precondition>
        <precondition>
          <state variable="StateItemDocument" value="Detail"></state>
        </precondition>
        <precondition>
          <state variable="StateDocumentDetail" value="Append"></state>
        </precondition>
      </preconditions>
    </command>
    <command name="discount, pricefordiscount" action-name="Adjustment_ChangeDiscount" action-parameter="" interpreter-state="WaitDetailChange">
      <validation-pattern><![CDATA[^((\d+[,.]?\d*)|(\[%\]))*((\[discount\])|(\[pricefordiscount\]))$]]></validation-pattern>
      <!-- <validation-pattern><![CDATA[^((\d+[,.]?\d*)|(\[%\]))*((\[nopromo])*(\[discount\])|(\[pricefordiscount\]))$]]></validation-pattern>-->
      <preconditions>
        <precondition>
          <state variable="StateUser" value="Declared"></state>
        </precondition>
        <precondition>
          <state variable="StateDocument" value="InProgress"></state>
        </precondition>
        <precondition>
          <state variable="StateDocumentType" value="Item"></state>
        </precondition>
        <precondition>
          <state variable="StateItemDocument" value="Detail"></state>
        </precondition>
        <precondition>
          <state variable="StateDocumentDetail" value="Modify"></state>
        </precondition>
      </preconditions>
    </command>
    <command name="priceIncrease" action-name="Adjustment_priceIncrease" action-parameter="" interpreter-state="Normal">
      <validation-pattern><![CDATA[^((\d+[,.]?\d*)|(\[%\]))*(\[priceIncrease\])$]]></validation-pattern>
      <preconditions>
        <precondition>
          <state variable="StateUser" value="Declared"></state>
        </precondition>
        <precondition>
          <state variable="StateDocument" value="InProgress"></state>
        </precondition>
        <precondition>
          <state variable="StateItemDocument" value="Detail"></state>
        </precondition>
        <precondition>
          <state variable="StateDocumentDetail" value="Append"></state>
        </precondition>
      </preconditions>
    </command>
    <command name="priceIncrease" action-name="Adjustement_ChangePriceIncrease" action-parameter="" interpreter-state="WaitDetailChange">
      <validation-pattern><![CDATA[^((\d+[,.]?\d*)|(\[%\]))*(\[priceIncrease\])$]]></validation-pattern>
      <preconditions>
        <precondition>
          <state variable="StateUser" value="Declared"></state>
        </precondition>
        <precondition>
          <state variable="StateDocument" value="InProgress"></state>
        </precondition>
        <precondition>
          <state variable="StateDocumentType" value="Item"></state>
        </precondition>
        <precondition>
          <state variable="StateItemDocument" value="Detail"></state>
        </precondition>
        <precondition>
          <state variable="StateDocumentDetail" value="Modify"></state>
        </precondition>
      </preconditions>
    </command>
    <command name="correction" action-name="DocumentDetail_DeleteLastLine" action-parameter="" interpreter-state="Normal">
      <validation-pattern><![CDATA[^(\[correction\])$]]></validation-pattern>
      <preconditions>
        <precondition>
          <state variable="StateUser" value="Declared"></state>
        </precondition>
        <precondition>
          <state variable="StateDocument" value="InProgress"></state>
        </precondition>
        <precondition>
          <state variable="StateDocumentType" value="Item"></state>
        </precondition>
        <precondition>
          <state variable="StateItemDocument" value="Detail"></state>
        </precondition>
        <precondition>
          <state variable="StateDocumentDetail" value="Append"></state>
        </precondition>
      </preconditions>
    </command>
    <command name="correction" action-name="DocumentPayment_DeleteLastLine" action-parameter="" interpreter-state="Normal">
      <validation-pattern><![CDATA[^(\[correction\])$]]></validation-pattern>
      <preconditions>
        <precondition>
          <state variable="StateUser" value="Declared"></state>
        </precondition>
        <precondition>
          <state variable="StateDocument" value="InProgress"></state>
        </precondition>
        <precondition>
          <state variable="StateDocumentType" value="Item"></state>
        </precondition>
        <precondition>
          <state variable="StateItemDocument" value="Payment"></state>
        </precondition>
        <precondition>
          <state variable="StateDocumentPayment" value="Append"></state>
        </precondition>
      </preconditions>
    </command>
    <command name="correction" action-name="DocumentPayment_DeleteLastLine_DrawerCentral" action-parameter="" interpreter-state="Normal">
      <validation-pattern><![CDATA[^(\[correction\])$]]></validation-pattern>
      <preconditions>
        <precondition>
          <state variable="StateUser" value="Declared"></state>
        </precondition>
        <precondition>
          <state variable="StateDocument" value="InProgress"></state>
        </precondition>
        <precondition>
          <state variable="StateDocumentType" value="Money"></state>
        </precondition>
        <precondition>
          <state variable="StateDocumentPayment" value="Append"></state>
        </precondition>
      </preconditions>
    </command>
    <command name="correction" action-name="DocumentPayment_DeleteLastLine_DrawerCustomer" action-parameter="" interpreter-state="Normal">
      <validation-pattern><![CDATA[^(\[correction\])$]]></validation-pattern>
      <preconditions>
        <precondition>
          <state variable="StateUser" value="Declared"></state>
        </precondition>
        <precondition>
          <state variable="StateDocument" value="InProgress"></state>
        </precondition>
        <precondition>
          <state variable="StateDocumentType" value="Credit"></state>
        </precondition>
        <precondition>
          <state variable="StateDocumentPayment" value="Append"></state>
        </precondition>
      </preconditions>
    </command>
    <command name="correction" action-name="DocumentDetail_DeleteCurrentLine" action-parameter="" interpreter-state="WaitDetailChange">
      <validation-pattern><![CDATA[^(\[correction\])$]]></validation-pattern>
      <preconditions>
        <precondition>
          <state variable="StateUser" value="Declared"></state>
        </precondition>
        <precondition>
          <state variable="StateDocument" value="InProgress"></state>
        </precondition>
        <precondition>
          <state variable="StateDocumentType" value="Item"></state>
        </precondition>
        <precondition>
          <state variable="StateItemDocument" value="Detail"></state>
        </precondition>
        <precondition>
          <state variable="StateDocumentDetail" value="Modify"></state>
        </precondition>
      </preconditions>
    </command>
    <command name="correction" action-name="DocumentPayment_DeleteCurrentLine" action-parameter="" interpreter-state="WaitPaymentChange">
      <validation-pattern><![CDATA[^(\[correction\])$]]></validation-pattern>
      <preconditions>
        <precondition>
          <state variable="StateUser" value="Declared"></state>
        </precondition>
        <precondition>
          <state variable="StateDocument" value="InProgress"></state>
        </precondition>
        <precondition>
          <state variable="StateDocumentType" value="Item"></state>
        </precondition>
        <precondition>
          <state variable="StateItemDocument" value="Payment"></state>
        </precondition>
        <precondition>
          <state variable="StateDocumentPayment" value="Modify"></state>
        </precondition>
      </preconditions>
    </command>
    <command name="correction" action-name="DocumentPayment_DeleteCurrentLine_DrawerCentral" action-parameter="" interpreter-state="WaitPaymentChange">
      <validation-pattern><![CDATA[^(\[correction\])$]]></validation-pattern>
      <preconditions>
        <precondition>
          <state variable="StateUser" value="Declared"></state>
        </precondition>
        <precondition>
          <state variable="StateDocument" value="InProgress"></state>
        </precondition>
        <precondition>
          <state variable="StateDocumentType" value="Money"></state>
        </precondition>
        <precondition>
          <state variable="StateDocumentPayment" value="Modify"></state>
        </precondition>
      </preconditions>
    </command>
    <command name="correction" action-name="DocumentPayment_DeleteCurrentLine_DrawerCustomer" action-parameter="" interpreter-state="WaitPaymentChange">
      <validation-pattern><![CDATA[^(\[correction\])$]]></validation-pattern>
      <preconditions>
        <precondition>
          <state variable="StateUser" value="Declared"></state>
        </precondition>
        <precondition>
          <state variable="StateDocument" value="InProgress"></state>
        </precondition>
        <precondition>
          <state variable="StateDocumentType" value="Credit"></state>
        </precondition>
        <precondition>
          <state variable="StateDocumentPayment" value="Modify"></state>
        </precondition>
      </preconditions>
    </command>
    <command name="note" action-name="Note" action-parameter="" interpreter-state="Normal">
      <validation-pattern><![CDATA[^.*(\[note\])$]]></validation-pattern>
      <preconditions>
        <precondition>
          <state variable="StateUser" value="Declared"></state>
        </precondition>
        <precondition>
          <state variable="StateDocument" value="InProgress"></state>
        </precondition>
        <precondition>
          <state variable="StateDocumentType" value="Item"></state>
        </precondition>
        <precondition>
          <state variable="StateItemDocument" value="Detail"></state>
        </precondition>
        <precondition>
          <state variable="StateDocumentDetail" value="Append"></state>
        </precondition>
      </preconditions>
    </command>
    <command name="note, enter" action-name="Note" action-parameter="" interpreter-state="Normal">
      <validation-pattern><![CDATA[^((M|m)+(A|a)+(G|g)+23)|((I|i)+(M|m)+(E|e)+(I|i)+(\s{0,})+:+(\s{0,}))+(\d{15})+(\s{0,})+(\[note\]|\[enter\])$]]></validation-pattern>
      <preconditions>
        <precondition>
          <state variable="StateUser" value="Declared"></state>
        </precondition>
        <precondition>
          <state variable="StateDocument" value="InProgress"></state>
        </precondition>
        <precondition>
          <state variable="StateDocumentType" value="Item"></state>
        </precondition>
        <precondition>
          <state variable="StateItemDocument" value="Detail"></state>
        </precondition>
        <precondition>
          <state variable="StateDocumentDetail" value="Append"></state>
        </precondition>
      </preconditions>
    </command>
    <command name="aic, enter" action-name="AIC" action-parameter="" interpreter-state="Normal">
      <validation-pattern><![CDATA[^(\[AIC\])\d{9}(\[enter\])$]]></validation-pattern>
      <preconditions>
        <precondition>
          <state variable="StateUser" value="Declared"></state>
        </precondition>
        <precondition>
          <state variable="StateDocument" value="InProgress"></state>
        </precondition>
        <precondition>
          <state variable="StateDocumentType" value="Item"></state>
        </precondition>
        <precondition>
          <state variable="StateItemDocument" value="Detail"></state>
        </precondition>
        <precondition>
          <state variable="StateDocumentDetail" value="Append"></state>
        </precondition>
      </preconditions>
    </command>
    <command name="subtotal" action-name="Subtotal" action-parameter="" interpreter-state="Normal">
      <validation-pattern><![CDATA[^(\[subtotal\])$]]></validation-pattern>
      <!--<validation-pattern><![CDATA[^(\[nopromo])*(\[subtotal\])$]]></validation-pattern>-->
      <preconditions>
        <precondition>
          <state variable="StateUser" value="Declared"></state>
        </precondition>
        <precondition>
          <state variable="StateDocumentType" value="Item"></state>
        </precondition>
        <precondition>
          <state variable="StateItemDocument" value="Detail"></state>
        </precondition>
        <precondition>
          <state variable="StateDocumentDetail" value="Append"></state>
        </precondition>
      </preconditions>
    </command>
    <command name="scaleReceipt" action-name="ScaleReceipt" action-parameter="" interpreter-state="Normal">
      <validation-pattern><![CDATA[^\w+(\[scaleReceipt\])$]]></validation-pattern>
      <preconditions>
        <precondition>
          <state variable="StateUser" value="Declared"></state>
        </precondition>
        <precondition>
          <state variable="StateDocumentType" value="Item"></state>
        </precondition>
        <precondition>
          <state variable="StateDocumentDetail" value="Append"></state>
        </precondition>
        <precondition>
          <state variable="StateDocumentPayment" value="Append"></state>
        </precondition>
      </preconditions>
    </command>
    <command name="selfReceipt" action-name="SelfReceipt" action-parameter="" interpreter-state="Normal">
      <validation-pattern><![CDATA[^\w+(\[selfReceipt\])$]]></validation-pattern>
      <preconditions>
        <precondition>
          <state variable="StateUser" value="Declared"></state>
        </precondition>
        <precondition>
          <state variable="StateDocumentType" value="Item"></state>
        </precondition>
        <precondition>
          <state variable="StateDocumentDetail" value="Append"></state>
        </precondition>
        <precondition>
          <state variable="StateDocumentPayment" value="Append"></state>
        </precondition>
      </preconditions>
    </command>
    <command name="payment, enter" action-name="Calculate_Payment" action-parameter="" interpreter-state="Normal">
      <validation-pattern><![CDATA[^(\[calcnopromo\]|\[calc\])(\d\d?[,.]?\d*\[X\])?(\d*[,.]?\d*\[piece\])\w+(\[payment\]|\[enter\])$]]></validation-pattern>
      <preconditions>
        <precondition>
          <state variable="StateUser" value="Declared"></state>
        </precondition>
        <precondition>
          <state variable="StateDocument" value="InProgress"></state>
        </precondition>
        <precondition>
          <state variable="StateDocumentType" value="Item"></state>
        </precondition>
        <precondition>
          <state variable="StateDocumentDetail" value="Append"></state>
        </precondition>
        <precondition>
          <state variable="StateDocumentPayment" value="Append"></state>
        </precondition>
      </preconditions>
    </command>
    <command name="payment" action-name="Payment_Code" action-parameter="" interpreter-state="Normal">
      <validation-pattern><![CDATA[^(\d*[,.]?\d*\[X\])*((\d*[,.]?\d*\[amount\])|(\d*[,.]?\d*\[piece\]))*\w+(\[payment\])$]]></validation-pattern>
      <preconditions>
        <precondition>
          <state variable="StateUser" value="Declared"></state>
        </precondition>
        <precondition>
          <state variable="StateDocument" value="InProgress"></state>
        </precondition>
        <precondition>
          <state variable="StateDocumentType" value="Item"></state>
        </precondition>
        <precondition>
          <state variable="StateDocumentDetail" value="Append"></state>
        </precondition>
        <precondition>
          <state variable="StateDocumentPayment" value="Append"></state>
        </precondition>
      </preconditions>
    </command>
    <command name="payment, enter" action-name="Payment_Code_DrawerCentral" action-parameter="" interpreter-state="Normal">
      <validation-pattern><![CDATA[^(\d*[,.]?\d*\[X\])*((\d*[,.]?\d*\[amount\])|(\d*[,.]?\d*\[piece\]))*\w+(\[payment\]|\[enter\])$]]></validation-pattern>
      <preconditions>
        <precondition>
          <state variable="StateUser" value="Declared"></state>
        </precondition>
        <precondition>
          <state variable="StateDocumentType" value="Money"></state>
        </precondition>
        <precondition>
          <state variable="StateDocumentPayment" value="Append"></state>
        </precondition>
      </preconditions>
    </command>
    <command name="payment, enter" action-name="Payment_Code_DrawerCustomer" action-parameter="" interpreter-state="Normal">
      <validation-pattern><![CDATA[^(\d*[,.]?\d*\[X\])*((\d*[,.]?\d*\[amount\])|(\d*[,.]?\d*\[piece\]))*\w+(\[payment\]|\[enter\])$]]></validation-pattern>
      <preconditions>
        <precondition>
          <state variable="StateUser" value="Declared"></state>
        </precondition>
        <precondition>
          <state variable="StateDocumentType" value="Credit"></state>
        </precondition>
        <precondition>
          <state variable="StateDocumentPayment" value="Append"></state>
        </precondition>
      </preconditions>
    </command>
    <command name="plu, enter" action-name="Payment_Confirm" action-parameter="" interpreter-state="Normal">
      <validation-pattern><![CDATA[^(\d+[,.]?\d*\[X\])*(\[plu\]|\[enter\])$]]></validation-pattern>
      <preconditions>
        <precondition>
          <state variable="StateUser" value="Declared"></state>
        </precondition>
        <precondition>
          <state variable="StateDocument" value="InProgress"></state>
        </precondition>
        <precondition>
          <state variable="StateDocumentType" value="Item"></state>
        </precondition>
        <precondition>
          <state variable="StateItemDocument" value="Payment"></state>
        </precondition>
        <precondition>
          <state variable="StateDocumentPayment" value="Append"></state>
        </precondition>
      </preconditions>
    </command>
    <command name="payment" action-name="Payment_Void" action-parameter="" interpreter-state="Normal">
      <validation-pattern><![CDATA[^(\[cancel\]|\[void\])(\d*[,.]?\d*\[X\])*((\d*[,.]?\d*\[amount\])|(\d*[,.]?\d*\[piece\]))*\w+(\[payment\])$]]></validation-pattern>
      <preconditions>
        <precondition>
          <state variable="StateUser" value="Declared"></state>
        </precondition>
        <precondition>
          <state variable="StateDocument" value="InProgress"></state>
        </precondition>
        <precondition>
          <state variable="StateDocumentType" value="Item"></state>
        </precondition>
        <precondition>
          <state variable="StateDocumentDetail" value="Append"></state>
        </precondition>
        <precondition>
          <state variable="StateDocumentPayment" value="Append"></state>
        </precondition>
      </preconditions>
    </command>
    <command name="payment, enter" action-name="Payment_Void_DrawerCentral" action-parameter="" interpreter-state="Normal">
      <validation-pattern><![CDATA[^(\[cancel\]|\[void\])(\d*[,.]?\d*\[X\])*((\d*[,.]?\d*\[amount\])|(\d*[,.]?\d*\[piece\]))*\w+(\[payment\]|\[enter\])$]]></validation-pattern>
      <preconditions>
        <precondition>
          <state variable="StateUser" value="Declared"></state>
        </precondition>
        <precondition>
          <state variable="StateDocument" value="InProgress"></state>
        </precondition>
        <precondition>
          <state variable="StateDocumentType" value="Money"></state>
        </precondition>
        <precondition>
          <state variable="StateDocumentPayment" value="Append"></state>
        </precondition>
      </preconditions>
    </command>
    <command name="payment, enter" action-name="Payment_Void_DrawerCustomer" action-parameter="" interpreter-state="Normal">
      <validation-pattern><![CDATA[^(\[cancel\]|\[void\])(\d*[,.]?\d*\[X\])*((\d*[,.]?\d*\[amount\])|(\d*[,.]?\d*\[piece\]))*\w+(\[payment\]|\[enter\])$]]></validation-pattern>
      <preconditions>
        <precondition>
          <state variable="StateUser" value="Declared"></state>
        </precondition>
        <precondition>
          <state variable="StateDocument" value="InProgress"></state>
        </precondition>
        <precondition>
          <state variable="StateDocumentType" value="Credit"></state>
        </precondition>
        <precondition>
          <state variable="StateDocumentPayment" value="Append"></state>
        </precondition>
      </preconditions>
    </command>
    <command name="fiscalCode" action-name="Customer_FiscalCode" action-parameter="" interpreter-state="Normal">
      <validation-pattern><![CDATA[^((\D{0})|(\D{6}\d{2}\D{1}\d{2}\D{1}\d{3}\D{1})|(\d{11}))(\[fiscalCode\])$]]></validation-pattern>
      <preconditions>
        <precondition>
          <state variable="StateUser" value="Declared"></state>
        </precondition>
        <precondition>
          <state variable="StateDocumentType" value="Item"></state>
        </precondition>
      </preconditions>
    </command>
    <command name="fiscalCode, enter" action-name="Customer_ReplaceFiscalCode" action-parameter="" interpreter-state="WaitFiscalcodeReplace">
      <validation-pattern><![CDATA[^(\[fiscalCode\]|\[enter\])$]]></validation-pattern>
    </command>
    <command name="fiscalCode, enter" action-name="Customer_RemoveFiscalCode" action-parameter="" interpreter-state="WaitFiscalcodeRemove">
      <validation-pattern><![CDATA[^(\[fiscalCode\]|\[enter\])$]]></validation-pattern>
    </command>
    <command name="salesman" action-name="Salesman_Code" action-parameter="" interpreter-state="Normal">
      <validation-pattern><![CDATA[^*\w*(\[salesman\])$]]></validation-pattern>
      <preconditions>
        <precondition>
          <state variable="StateUser" value="Declared"></state>
        </precondition>
        <precondition>
          <state variable="StateDocumentType" value="Item"></state>
        </precondition>
      </preconditions>
    </command>
    <command name="salesman, enter" action-name="Salesman_Replace" action-parameter="" interpreter-state="WaitSalesmanReplace">
      <validation-pattern><![CDATA[^(\[salesman\]|\[enter\])$]]></validation-pattern>
    </command>
    <command name="salesman, enter" action-name="Salesman_Remove" action-parameter="" interpreter-state="WaitSalesmanRemove">
      <validation-pattern><![CDATA[^(\[salesman\]|\[enter\])$]]></validation-pattern>
    </command>
    <command name="tax" action-name="Tax_Code" action-parameter="" interpreter-state="Normal">
      <validation-pattern><![CDATA[^\w*(\[tax\])$]]></validation-pattern>
      <preconditions>
        <precondition>
          <state variable="StateUser" value="Declared"></state>
        </precondition>
        <precondition>
          <state variable="StateDocumentType" value="Item"></state>
        </precondition>
      </preconditions>
    </command>
    <command name="tax, enter" action-name="Tax_Remove" action-parameter="" interpreter-state="WaitTaxRemove">
      <validation-pattern><![CDATA[^(\[tax\]|\[enter\])$]]></validation-pattern>
    </command>
    <command name="tax, enter" action-name="Tax_Replace" action-parameter="" interpreter-state="WaitTaxReplace">
      <validation-pattern><![CDATA[^(\[tax\]|\[enter\])$]]></validation-pattern>
    </command>
    <command name="tax, enter" action-name="Tax_AllLine" action-parameter="" interpreter-state="WaitTaxApplicationMode">
      <validation-pattern><![CDATA[^(\[tax\]|\[enter\])$]]></validation-pattern>
    </command>
    <command name="pricelist" action-name="PriceList_Code" action-parameter="" interpreter-state="Normal">
      <validation-pattern><![CDATA[^*\w*(\[pricelist\])$]]></validation-pattern>
      <preconditions>
        <precondition>
          <state variable="StateUser" value="Declared"></state>
        </precondition>
        <precondition>
          <state variable="StateDocumentType" value="Item"></state>
        </precondition>
      </preconditions>
    </command>
    <command name="pricelist, enter" action-name="PriceList_Replace" action-parameter="" interpreter-state="WaitPricelistReplace">
      <validation-pattern><![CDATA[^(\[pricelist\]|\[enter\])$]]></validation-pattern>
    </command>
    <command name="pricelist, enter" action-name="PriceList_Remove" action-parameter="" interpreter-state="WaitPricelistRemove">
      <validation-pattern><![CDATA[^(\[pricelist\]|\[enter\])$]]></validation-pattern>
    </command>
    <command name="pricelist, enter" action-name="PriceList_AllLine" action-parameter="" interpreter-state="WaitPriceListApplicationMode">
      <validation-pattern><![CDATA[^(\[pricelist\]|\[enter\])$]]></validation-pattern>
    </command>
    <command name="customer" action-name="Customer_Code" action-parameter="" interpreter-state="Normal">
      <!--<validation-pattern><![CDATA[^*\w*(\[customer\])$]]></validation-pattern>-->
      <!--<validation-pattern><![CDATA[^04{1}[0-9]{1}\d{10}(\[customer\]|\[enter\])$]]></validation-pattern>-->
      <!--<validation-pattern><![CDATA[^(\d{14}|\d{0})(\[customer\])$]]></validation-pattern>-->
      <validation-pattern><![CDATA[^(\d{1,14}|\d{0})(\[customer\])$]]></validation-pattern>
      <preconditions>
        <precondition>
          <state variable="StateUser" value="Declared"></state>
        </precondition>
        <precondition>
          <state variable="StateDocumentType" value="Credit"></state>
          <state variable="StateDocumentType" value="Item"></state>
        </precondition>
      </preconditions>
    </command>
    <command name="customer, enter" action-name="Customer_Replace" action-parameter="" interpreter-state="WaitCustomerReplace">
      <validation-pattern><![CDATA[^(\[customer\]|\[enter\])$]]></validation-pattern>
    </command>
    <command name="customer, enter" action-name="Customer_Remove" action-parameter="" interpreter-state="WaitCustomerRemove">
      <validation-pattern><![CDATA[^(\[customer\]|\[enter\])$]]></validation-pattern>
    </command>
    <command name="user" action-name="User_WaitUserName" action-parameter="" interpreter-state="Normal">
      <validation-pattern><![CDATA[^(\[user\])$]]></validation-pattern>
    </command>
    <command name="enter" action-name="User_WaitUserName" action-parameter="" interpreter-state="Normal">
      <validation-pattern><![CDATA[^(\[enter\])$]]></validation-pattern>
      <preconditions>
        <precondition>
          <state variable="StateUser" value="Unknown"></state>
          <state variable="StateUser" value="Suspended"></state>
        </precondition>
      </preconditions>
    </command>
    <command name="user" action-name="User_AcceptUserName" action-parameter="" interpreter-state="Normal, WaitUserName">
      <validation-pattern><![CDATA[^*\w*(\[user\])$]]></validation-pattern>
      <preconditions>
        <precondition>
          <state variable="StateUser" value="Declared"></state>
        </precondition>
      </preconditions>
    </command>
    <command name="user" action-name="User_AcceptPassword" action-parameter="" interpreter-state="WaitUserPassword">
      <validation-pattern><![CDATA[^((false|true)\[closedrawer\])?\w*(\[user\])$]]></validation-pattern>
      <preconditions>
        <precondition>
          <state variable="StateUser" value="Declared"></state>
        </precondition>
      </preconditions>
    </command>
    <command name="user, enter" action-name="User_AcceptUserName" action-parameter="" interpreter-state="Normal, WaitUserName">
      <validation-pattern><![CDATA[^*\w*(\[user\]|\[enter\])$]]></validation-pattern>
      <preconditions>
        <precondition>
          <state variable="StateUser" value="Unknown"></state>
          <state variable="StateUser" value="Suspended"></state>
        </precondition>
      </preconditions>
    </command>
    <command name="user, enter" action-name="User_AcceptPassword_2" action-parameter="" interpreter-state="WaitUserPassword">
      <validation-pattern><![CDATA[^((false|true)\[closedrawer\])?\w*(\[user]|\[enter\])$]]></validation-pattern>
      <preconditions>
        <precondition>
          <state variable="StateUser" value="Unknown"></state>
          <state variable="StateUser" value="Suspended"></state>
        </precondition>
      </preconditions>
    </command>
    <command name="trainer" action-name="Trainer_AcceptUserName" action-parameter="" interpreter-state="Normal">
      <validation-pattern><![CDATA[^*\w*(\[trainer\])$]]></validation-pattern>
      <preconditions>
        <precondition>
          <state variable="StateUser" value="Declared"></state>
        </precondition>
      </preconditions>
    </command>
    <command name="trainer, enter" action-name="Trainer_WaitUserName" action-parameter="" interpreter-state="WaitTrainerName">
      <validation-pattern><![CDATA[^*\w+(\[trainer\]|\[enter\])$]]></validation-pattern>
    </command>
    <command name="trainer, enter" action-name="Trainer_AcceptPassword" action-parameter="" interpreter-state="WaitTrainerPassword">
      <validation-pattern><![CDATA[^*\w+(\[trainer\]|\[enter\])$]]></validation-pattern>
    </command>
    <command name="documentabort" action-name="Document_Abort_ConfirmAction" action-parameter="" interpreter-state="Normal">
      <validation-pattern><![CDATA[^(\d*\[copies\])?(\[documentabort\])$]]></validation-pattern>
      <preconditions>
        <precondition>
          <state variable="StateUser" value="Declared"></state>
        </precondition>
        <precondition>
          <state variable="StateDocument" value="InProgress"></state>
        </precondition>
      </preconditions>
    </command>
    <command name="documentabort" action-name="Document_Abort_SavePrintAction" action-parameter="" interpreter-state="WaitDocumentAbortConfirm">
      <validation-pattern><![CDATA[^(\d*\[copies\])?(\[documentabort\])$]]></validation-pattern>
      <preconditions>
        <precondition>
          <state variable="StateUser" value="Declared"></state>
        </precondition>
        <precondition>
          <state variable="StateDocument" value="InProgress"></state>
        </precondition>
      </preconditions>
    </command>
    <command name="genericconfirm" action-name="GenericConfirm" action-parameter="" interpreter-state="Normal">
      <validation-pattern><![CDATA[^(\d*\[copies\])?((true|false)\[offAutoCloseDocument\])?\w*(\[document\])(\[genericconfirm\])$]]></validation-pattern>
      <preconditions>
        <precondition>
          <state variable="StateUser" value="Declared"></state>
        </precondition>
        <precondition>
          <state variable="StateDocument" value="InProgress"></state>
        </precondition>
      </preconditions>
    </command>
    <command name="document" action-name="Document_AutoClose" action-parameter="" interpreter-state="Normal">
      <validation-pattern><![CDATA[^(\d*\[copies\])?((true|false)\[offAutoCloseDocument\])?\w*(\[document\])$]]></validation-pattern>
      <preconditions>
        <precondition>
          <state variable="StateUser" value="Declared"></state>
        </precondition>
        <precondition>
          <state variable="StateDocument" value="InProgress"></state>
        </precondition>
      </preconditions>
    </command>
    <command name="genericconfirm" action-name="GenericConfirm" action-parameter="" interpreter-state="Normal">
      <validation-pattern><![CDATA[^((\w+)?(\[number\]))?(\d{0,3})(\[subtype\])?(\[doctype\])(\[genericconfirm\])$]]></validation-pattern>
      <preconditions>
        <precondition>
          <state variable="StateUser" value="Declared"></state>
        </precondition>
        <precondition>
          <state variable="StateDocument" value="Empty"></state>
          <state variable="StateDocumentType" value="Item"></state>
        </precondition>
      </preconditions>
    </command>
    <command name="genericconfirm" action-name="GenericConfirm" action-parameter="" interpreter-state="Normal">
      <validation-pattern><![CDATA[^(\w*\[eftreverse\])\w*(\[document\])(\[genericconfirm\])$]]></validation-pattern>
      <preconditions>
        <precondition>
          <state variable="StateUser" value="Declared"></state>
        </precondition>
        <precondition>
          <state variable="StateDocument" value="Empty"></state>
        </precondition>
      </preconditions>
    </command>
    <command name="gui" action-name="None" action-parameter="" interpreter-state="">
      <validation-pattern><![CDATA[^([A-Za-z0-9].*\((.*\)\[func\])|(.+\)+\[prop\]))(([A-Za-z0-9].*)?(\([A-Za-z0-9].*\))?(\[gui\]))$]]></validation-pattern>
    </command>
    <command name="enter" action-name="ResolveCode" action-parameter="" interpreter-state="Normal">
      <validation-pattern><![CDATA[^\w*(\[enter\])$]]></validation-pattern>
      <preconditions>
        <precondition>
          <state variable="StateUser" value="Declared"></state>
        </precondition>
      </preconditions>
    </command>
    <command name="enter, correction" action-name="DocumentClosingErrorGetData" action-parameter="" interpreter-state="WaitYesNo">
      <validation-pattern><![CDATA[^\[(enter|correction)\]$]]></validation-pattern>
      <preconditions>
        <precondition>
          <state variable="StateDocument" value="ClosingErrorGetData"></state>
        </precondition>
      </preconditions>
    </command>
    <command name="enter, correction" action-name="DocumentClosingError" action-parameter="" interpreter-state="WaitYesNo">
      <validation-pattern><![CDATA[^\[(enter|correction)\]$]]></validation-pattern>
      <preconditions>
        <precondition>
          <state variable="StateDocument" value="Closing"></state>
        </precondition>
      </preconditions>
    </command>
    <command name="enter, correction" action-name="DocumentAbortingError" action-parameter="" interpreter-state="WaitYesNo">
      <validation-pattern><![CDATA[^(\[(enter|correction)\])$]]></validation-pattern>
      <preconditions>
        <precondition>
          <state variable="StateDocument" value="Aborting"></state>
        </precondition>
      </preconditions>
    </command>
    <command name="enter, correction" action-name="DocumentErrorRecallError" action-parameter="" interpreter-state="WaitYesNo">
      <validation-pattern><![CDATA[^\[(enter|correction)\]$]]></validation-pattern>
      <preconditions>
        <precondition>
          <state variable="StateDocument" value="Retriving"></state>
        </precondition>
      </preconditions>
    </command>
    <command name="msg" action-name="Message_Displayed" action-parameter="" interpreter-state="">
      <validation-pattern><![CDATA[^(.*(\[img\]))?.*(\[msg\])$]]></validation-pattern>
      <preconditions>
        <precondition>
          <state variable="StateUser" value="Declared"></state>
        </precondition>
      </preconditions>
    </command>
    <command name="msgclear" action-name="Message_DisplayedClear" action-parameter="" interpreter-state="">
      <validation-pattern><![CDATA[^(\[msgclear\])$]]></validation-pattern>
      <preconditions>
        <precondition>
          <state variable="StateUser" value="Declared"></state>
        </precondition>
      </preconditions>
    </command>
    <command name="sosperr" action-name="DocumentClosingErrorAbort" action-parameter="" interpreter-state="WaitYesNo">
      <validation-pattern><![CDATA[^(\[sosperr\])$]]></validation-pattern>
      <preconditions>
        <precondition>
          <state variable="StateDocument" value="ClosingErrorGetData"></state>
        </precondition>
      </preconditions>
    </command>
    <command name="sosperr" action-name="DocumentClosingErrorAbort" action-parameter="" interpreter-state="WaitYesNo">
      <validation-pattern><![CDATA[^(\[sosperr\])$]]></validation-pattern>
      <preconditions>
        <precondition>
          <state variable="StateDocument" value="Closing"></state>
        </precondition>
      </preconditions>
    </command>
    <!-- <command name="clear" action-name="DocumentClosingErrorAbort" action-parameter="" interpreter-state="WaitYesNo">
      <validation-pattern><![CDATA[^(\[clear\])$]]></validation-pattern>
      <preconditions>
        <precondition>
          <state variable="StateDocument" value="ClosingErrorGetData"></state>
        </precondition>
      </preconditions>
    </command> -->
    <!-- <command name="clear" action-name="DocumentClosingErrorAbort" action-parameter="" interpreter-state="WaitYesNo">
      <validation-pattern><![CDATA[^(\[clear\])$]]></validation-pattern>
      <preconditions>
        <precondition>
          <state variable="StateDocument" value="Closing"></state>
        </precondition>
      </preconditions>
    </command> -->
    <command name="clear" action-name="DocumentAbortingErrorAbort" action-parameter="" interpreter-state="WaitYesNo">
      <validation-pattern><![CDATA[^(\[clear\])$]]></validation-pattern>
      <preconditions>
        <precondition>
          <state variable="StateDocument" value="Aborting"></state>
        </precondition>
      </preconditions>
    </command>
    <command name="clear" action-name="DocumentErrorRecallErrorAbort" action-parameter="" interpreter-state="WaitYesNo">
      <validation-pattern><![CDATA[^(\[clear\])$]]></validation-pattern>
      <preconditions>
        <precondition>
          <state variable="StateDocument" value="Retriving"></state>
        </precondition>
      </preconditions>
    </command>
    <command name="suspend" action-name="DocumentClosingErrorAbort" action-parameter="" interpreter-state="WaitYesNo">
      <validation-pattern><![CDATA[^(\[suspend\])$]]></validation-pattern>
      <preconditions>
        <precondition>
          <state variable="StateDocument" value="ClosingErrorGetData"></state>
        </precondition>
      </preconditions>
    </command>
    <command name="suspend" action-name="DocumentClosingErrorAbort" action-parameter="" interpreter-state="WaitYesNo">
      <validation-pattern><![CDATA[^(\[suspend\])$]]></validation-pattern>
      <preconditions>
        <precondition>
          <state variable="StateDocument" value="Closing"></state>
        </precondition>
      </preconditions>
    </command>
    <command name="suspend" action-name="DocumentAbortingErrorAbort" action-parameter="" interpreter-state="WaitYesNo">
      <validation-pattern><![CDATA[^(\[suspend\])$]]></validation-pattern>
      <preconditions>
        <precondition>
          <state variable="StateDocument" value="Aborting"></state>
        </precondition>
      </preconditions>
    </command>
    <command name="suspend" action-name="DocumentErrorRecallErrorAbort" action-parameter="" interpreter-state="WaitYesNo">
      <validation-pattern><![CDATA[^(\[suspend\])$]]></validation-pattern>
      <preconditions>
        <precondition>
          <state variable="StateDocument" value="Retriving"></state>
        </precondition>
      </preconditions>
    </command>
    <command name="clientreport" action-name="ClientReport" action-parameter="" interpreter-state="Normal">
      <validation-pattern><![CDATA[^((Only|Ever|None)\[preview\])?(\d*\[copies\])?((X|Z)\[reporttype\])?(\w+\[eftpos\])*(((EFTPos|UserReport|WorkstationReport|FiscalTotals|(\w*)CashLogyReport|(\w*)CashLogyCharged|(\w*)GloryReport|(\w*)?GloryCharged|GunneboReport|GunneboStatus|GunneboInventory|GunneboCashCount|UserSimplyReport|WorkstationSimplyReport|PaymentDocType)?\[codereport\])*|(\w*))(\[clientreport\])$]]></validation-pattern>
      <!-- <validation-pattern><![CDATA[^((Only|Ever|None)\[preview\])?(\d*\[copies\])?((X|Z)\[reporttype\])?(\w+\[eftpos\])*(((EFTPos|UserReport|WorkstationReport|FiscalTotals|(\w*)CashLogyReport|(\w*)CashLogyCharged|(\w*)GloryReport|(\w*)?GloryCharged|GunneboReport|UserSimplyReport|WorkstationSimplyReport)?\[codereport\])*|(\w*))(\[clientreport\])$]]></validation-pattern> -->
      <!--<validation-pattern><![CDATA[^((Only|Ever|None)\[preview\])?(\d*\[copies\])?((X|Z)\[reporttype\])?(\w+\[eftpos\])*(((EFTPos|UserReport|WorkstationReport|GloryReport|GunneboReport|UserSimplyReport|XUserSimplyReport|WorkstationSimplyReport)?\[codereport\])*|(\w*))(\[clientreport\])$]]></validation-pattern>-->
      <preconditions>
        <precondition>
          <state variable="StateDocument" value="Empty"></state>
        </precondition>
        <precondition>
          <state variable="StateUser" value="Declared"></state>
        </precondition>
      </preconditions>
    </command>
    <command name="opendrawer" action-name="Open_Drawer" action-parameter="" interpreter-state="Normal">
      <validation-pattern><![CDATA[^(\[opendrawer\])$]]></validation-pattern>
      <preconditions>
        <precondition>
          <state variable="StateUser" value="Declared"></state>
        </precondition>
      </preconditions>
    </command>
    <!--<command name="wakeclient" action-name="Wake_Client" action-parameter="" interpreter-state="Normal">
      <validation-pattern><![CDATA[^((([0-9a-fA-F]{2}-){5}([0-9a-fA-F]{2})\[macaddr\])|(([01]?\d\d?|2[0-4]\d|25[0-5]).){3}([01]?\d\d?|2[0-4]\d|25[0-5])\[ipaddress\])+(\[wakeclient\])$]]></validation-pattern>
      <preconditions>
        <precondition>
          <state variable="StateUser" value="Declared"></state>
        </precondition>
      </preconditions>
    </command>-->
    <command name="reinitialize" action-name="Reinitialize" action-parameter="" interpreter-state="Normal">
      <validation-pattern><![CDATA[^(\d*\[packet\])?(\[reinitialize\])$]]></validation-pattern>
      <preconditions>
        <precondition>
          <state variable="StateUser" value="Declared"></state>
        </precondition>
        <precondition>
          <state variable="StateDocument" value="Empty"></state>
        </precondition>
      </preconditions>
    </command>
    <command name="fiscalclear" action-name="Fiscal_Clear" action-parameter="" interpreter-state="Normal">
      <validation-pattern><![CDATA[^(\w*\[username\])?(\w*\[password\])?((Ever|Only|None)\[preview\])?(\d*\[copies\])?((X|Z)\[reporttype\])?(((EFTPos|UserReport|WorkstationReport|GloryReport|GunneboReport)?\[codereport\])*|(\w*))(\[fiscalclear\])$]]></validation-pattern>
    </command>
    <command name="exitwindows" action-name="Exit_Windows" action-parameter="" interpreter-state="Normal">
      <validation-pattern><![CDATA[^((true|false)\[force\])?(\w*\[username\])(\w*\[password\])(LogOff|PowerOff|Reboot|ShutDown|Suspend|Hibernate)?(\[exitwindows\])$]]></validation-pattern>
    </command>
    <command name="documentreport" action-name="DocumentReport" action-parameter="" interpreter-state="Normal">
      <validation-pattern><![CDATA[^((Only|Ever|None)\[preview\])?(((0[1-9]|[12][0-9]|3[01])([- /.])(0[1-9]|1[012])([- /.])(19|20|21)\d\d)\[begindate\])?(((0[1-9]|[12][0-9]|3[01])([- /.])(0[1-9]|1[012])([- /.])(19|20|21)\d\d)\[enddate\])?((Store|Workstation|User)\[groupby\])?(\d*\[copies\])?(VAT|VATDep|Departments|Payment|PaymentDocType|Amount|TimeBands|DepTimeBands|Advance|AdvanceNotRedempted)(\[documentreport\])$]]></validation-pattern>
      <!--<validation-pattern><![CDATA[^((Current|All|None)\[currentsel\])?((Only|Ever|None)\[preview\])?(((0[1-9]|[12][0-9]|3[01])([- /.])(0[1-9]|1[012])([- /.])(19|20|21)\d\d)\[begindate\])?(((0[1-9]|[12][0-9]|3[01])([- /.])(0[1-9]|1[012])([- /.])(19|20|21)\d\d)\[enddate\])?((Store|Workstation|User)\[groupby\])?(\d*\[copies\])?(VAT|VATDep|Departments|Payment|Amount|TimeBands|DepTimeBands|Advance|AdvanceNotRedempted)(\[documentreport\])$]]></validation-pattern>-->
      <preconditions>
        <precondition>
          <state variable="StateUser" value="Declared"></state>
        </precondition>
      </preconditions>
    </command>
    <command name="showrest" action-name="Show_Rest" action-parameter="" interpreter-state="Normal">
      <validation-pattern><![CDATA[^(\[showrest\])$]]></validation-pattern>
      <preconditions>
        <precondition>
          <state variable="StateUser" value="Declared"></state>
        </precondition>
      </preconditions>
    </command>
    <command name="readsmartkey" action-name="Read_SmartKey" action-parameter="" interpreter-state="Normal">
      <validation-pattern><![CDATA[^(\[readsmartkey\])$]]></validation-pattern>
      <preconditions>
        <precondition>
          <state variable="StateKey" value="OnLine"></state>
        </precondition>
      </preconditions>
    </command>
    <command name="forcedlogoff" action-name="Forced_Logoff" action-parameter="" interpreter-state="Normal">
      <validation-pattern><![CDATA[^(\[forcedlogoff\])$]]></validation-pattern>
    </command>
    <command name="eft" action-name="EFT" action-parameter="" interpreter-state="WaitEFTConfirm">
      <validation-pattern><![CDATA[^(\[reset\]\w*|\[reverse\]\w+|\[duplicate\]\w+)(\[eft\])$]]></validation-pattern>
      <preconditions>
        <precondition>
          <state variable="StateUser" value="Declared"></state>
        </precondition>
      </preconditions>
    </command>
    <command name="eft" action-name="EFTConfirm" action-parameter="" interpreter-state="Normal">
      <validation-pattern><![CDATA[^(\[reset\]\w*|\[reverse\]\w+|\[duplicate\]\w+)(\[eft\])$]]></validation-pattern>
      <preconditions>
        <precondition>
          <state variable="StateUser" value="Declared"></state>
        </precondition>
      </preconditions>
    </command>
    <command name="clear" action-name="EFTAbort" action-parameter="" interpreter-state="WaitEFTConfirm">
      <validation-pattern><![CDATA[^(\[clear\])$]]></validation-pattern>
    </command>
    <command name="fiscalprinter" action-name="FiscalPrinter" action-parameter="" interpreter-state="Normal">
      <validation-pattern><![CDATA[^((((0[1-9]|[12][0-9]|3[01])([- /.])(0[1-9]|1[012])([- /.])(19|20|21)\d\d)T([0-1][0-9]|2[0-3]):([0-5][0-9])\[date\]))(\[fiscalprinter\])$]]></validation-pattern>
    </command>
    <command name="suspend" action-name="DocumentSuspendConfirm" action-parameter="" interpreter-state="Normal">
      <validation-pattern><![CDATA[^(\[suspend\])$]]></validation-pattern>
      <preconditions>
        <precondition>
          <state variable="StateUser" value="Declared"></state>
        </precondition>
        <precondition>
          <state variable="StateDocument" value="InProgress"></state>
        </precondition>
      </preconditions>
    </command>
    <command name="clear" action-name="DocumentSuspendAbort" action-parameter="" interpreter-state="WaitSuspendConfirm">
      <validation-pattern><![CDATA[^(\[clear\])$]]></validation-pattern>
    </command>
    <command name="documentsuspenddelete" action-name="DocumentSuspendDeleteConfirm" action-parameter="" interpreter-state="Normal">
      <validation-pattern><![CDATA[^([ \w-]+)(\[documentsuspenddelete\])$]]></validation-pattern>
      <preconditions>
        <precondition>
          <state variable="StateUser" value="Declared"></state>
        </precondition>
      </preconditions>
    </command>
    <command name="clear" action-name="DocumentSuspendDeleteAbort" action-parameter="" interpreter-state="WaitSuspendDeleteConfirm">
      <validation-pattern><![CDATA[^(\[clear\])$]]></validation-pattern>
    </command>
    <command name="doctype" action-name="DocumentType" action-parameter="" interpreter-state="Normal">
      <validation-pattern><![CDATA[^((\w+)?(\[number\]))?(\d{0,3})(\[subtype\])?(\[doctype\])$]]></validation-pattern>
      <preconditions>
        <precondition>
          <state variable="StateUser" value="Declared"></state>
        </precondition>
        <precondition>
          <state variable="StateDocument" value="Empty"></state>
          <state variable="StateDocumentType" value="Item"></state>
        </precondition>
      </preconditions>
    </command>
    <command name="counter, enter" action-name="Counter" action-parameter="" interpreter-state="WaitCounterConfirm">
      <validation-pattern><![CDATA[^(\[(counter|enter)\])$]]></validation-pattern>
      <preconditions>
        <precondition>
          <state variable="StateUser" value="Declared"></state>
        </precondition>
      </preconditions>
    </command>
    <command name="counter" action-name="CounterConfirm" action-parameter="" interpreter-state="Normal">
      <validation-pattern><![CDATA[^((\w*\[value\]\w+)|(\w*))(\[counter\])$]]></validation-pattern>
      <preconditions>
        <precondition>
          <state variable="StateUser" value="Declared"></state>
        </precondition>
      </preconditions>
    </command>
    <command name="clear" action-name="CounterAbort" action-parameter="" interpreter-state="WaitCounterConfirm">
      <validation-pattern><![CDATA[^(\[clear\])$]]></validation-pattern>
    </command>
    <!--<command name="tpiscan" action-name="TpiScanControl" action-parameter="" interpreter-state="Normal">
      <validation-pattern><![CDATA[^(\[tpiscan\])$]]></validation-pattern>     
    </command>-->
    <command name="bpe" action-name="BuonoPastoElettronico" action-parameter="p1" interpreter-state="Normal">
      <validation-pattern><![CDATA[^(\[balance\]|\[reprint\]|\[totals\]|\[close\])?(\[amoney\])?(\[bpe\])$]]></validation-pattern>
      <preconditions>
        <precondition>
          <state variable="StateUser" value="Declared"></state>
        </precondition>
      </preconditions>
    </command>
    <command name="bpe" action-name="BuonoPastoElettronico" action-parameter="" interpreter-state="Normal">
      <validation-pattern><![CDATA[^(?:(\d*\[payment\]\[amoney\]\[bpe])|(\d*\[payment\]\[bpe\]))$]]></validation-pattern>
      <preconditions>
        <precondition>
          <state variable="StateUser" value="Declared"></state>
        </precondition>
        <precondition>
          <state variable="StateDocument" value="InProgress"></state>
        </precondition>
        <precondition>
          <state variable="StateDocumentType" value="Item"></state>
        </precondition>
        <precondition>
          <state variable="StateDocumentDetail" value="Append"></state>
        </precondition>
        <precondition>
          <state variable="StateDocumentPayment" value="Append"></state>
        </precondition>
      </preconditions>
    </command>
    <command name="restartdevice" action-name="Restart_Device" action-parameter="" interpreter-state="Normal">
      <validation-pattern><![CDATA[^((\w*\[name\])|(\w*\[type\])|(\w*\[typedevice\]))(\[restartdevice\])$]]></validation-pattern>
    </command>
    <command name="plu, enter" action-name="Omega_Scale" action-parameter="" interpreter-state="Normal">
      <validation-pattern><![CDATA[^(\d{18}[\w\-\s]{22})(\[enter\])$]]></validation-pattern>
      <preconditions>
        <precondition>
          <state variable="StateUser" value="Declared"></state>
        </precondition>
        <precondition>
          <state variable="StateDocumentType" value="Item"></state>
        </precondition>
        <precondition>
          <state variable="StateDocumentDetail" value="Append"></state>
        </precondition>
        <precondition>
          <state variable="StateDocumentPayment" value="Append"></state>
        </precondition>
      </preconditions>
    </command>
    <command name="enter" action-name="Customer_AcceptPinCode" action-parameter="" interpreter-state="WaitClientPassword">
      <validation-pattern><![CDATA[^*\w+(\[enter\])$]]></validation-pattern>
    </command>
    <command name="enter" action-name="ExtraCard" action-parameter="" interpreter-state="Normal">
      <validation-pattern><![CDATA[^(\[extracard\])\w*(\[enter\])$]]></validation-pattern>
      <preconditions>
        <precondition>
          <state variable="StateUser" value="Declared"></state>
        </precondition>
        <precondition>
          <state variable="StateDocumentType" value="Item"></state>
        </precondition>
        <precondition>
          <state variable="StateDocumentDetail" value="Append"></state>
        </precondition>
        <precondition>
          <state variable="StateDocumentPayment" value="Append"></state>
        </precondition>
      </preconditions>
    </command>
    <command name="enter" action-name="Delivery" action-parameter="" interpreter-state="Normal">
      <validation-pattern><![CDATA[^(\[delivery\])\d*(\[enter\])$]]></validation-pattern>
      <preconditions>
        <precondition>
          <state variable="StateUser" value="Declared"></state>
        </precondition>
        <precondition>
          <state variable="StateDocumentType" value="Item"></state>
        </precondition>
        <precondition>
          <state variable="StateDocumentDetail" value="Append"></state>
        </precondition>
        <precondition>
          <state variable="StateDocumentPayment" value="Append"></state>
        </precondition>
      </preconditions>
    </command>
    <command name="run" action-name="Run" action-parameter="" interpreter-state="Normal">
      <validation-pattern><![CDATA[^((true|false)\[hasgui\])?((true|false)\[onlyonce\])?.*(\[run\])$]]></validation-pattern>
      <preconditions>
        <precondition>
          <state variable="StateUser" value="Declared"></state>
        </precondition>
      </preconditions>
    </command>
    <command name="forceupdate" action-name="ForceUpdate" action-parameter="" interpreter-state="Normal">
      <validation-pattern><![CDATA[^(\[forceupdate\])$]]></validation-pattern>
    </command>
    <command name="enter" action-name="DocumentRTRefund" action-parameter="" interpreter-state="Normal">
      <validation-pattern><![CDATA[^(\[rtfiscalnumber\])((\w+)\s(\w+)\s(\w+)\s(\w+))?(\[enter\])$]]></validation-pattern>
      <!--<validation-pattern><![CDATA[^((\w+)?(\[number\]))?(\d{0,3})(\[subtype\])?(\[doctype\])$]]></validation-pattern>-->
      <!--<validation-pattern><![CDATA[^((\w+)?(\[number\]))?(\d{0,3})(\[doctype\])$]]></validation-pattern>-->
      <preconditions>
        <precondition>
          <state variable="StateUser" value="Declared"></state>
        </precondition>
        <precondition>
          <state variable="StateDocument" value="Empty"></state>
          <state variable="StateDocumentType" value="Item"></state>
        </precondition>
      </preconditions>
    </command>
    <command name="enter" action-name="PaymentDocumentRTRefund" action-parameter="" interpreter-state="Normal">
      <validation-pattern><![CDATA[^(\[paymentrtfiscalnumber\])((\w+)\s(\w+)\s(\w+)\s(\w+))?(\[enter\])$]]></validation-pattern>
      <preconditions>
        <precondition>
          <state variable="StateUser" value="Declared"></state>
        </precondition>
        <precondition>
          <state variable="StateDocument" value="Empty"></state>
          <state variable="StateDocumentType" value="Item"></state>
        </precondition>
      </preconditions>
    </command>
  </commands>
</engineConfiguration>